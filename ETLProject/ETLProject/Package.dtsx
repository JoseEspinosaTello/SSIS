<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/15/2023 5:22:05 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="JET"
  DTS:CreatorName="JET\jet55"
  DTS:DTSID="{6BA36A96-444D-4159-9AD0-0063630C7A0D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5223.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="316"
  DTS:VersionGUID="{5F0D8599-1CF4-4B6B-AD55-5DB44D3E65B1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 7]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{FBAAE793-19D6-4EA9-BCBC-D73BAD66082D}"
      DTS:ObjectName="Excel Connection Manager 7">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination\RecentlyLoaded.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF605A9D-F80C-46DF-A725-AE03FE8033B1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClearReportsPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ClearReports</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CE54908-F29C-4DEA-800C-B57018FC3B5D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\LoadFilePath</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7941A972-A7CE-49AD-9BC6-0A9AE1335449}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFilter">
      <DTS:VariableValue
        DTS:DataType="8">*xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{682B82A5-428A-405C-B3F0-1FB9F9A3CB88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExtractPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExtractedFilesPath</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30D1D32A-76A3-493D-80B7-3F8E8D356576}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ZipFilesPath</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F2D3DB21-CE70-43EF-A4E1-E22668E508BB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportArchivePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ArchivedExcelFiles</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FB5F060-657B-47F0-A1D2-A86E0DC73185}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D687FA1-46DA-4805-88C7-96FEF8BAE5D6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="XLSXFilter">
      <DTS:VariableValue
        DTS:DataType="8">*xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E78F9DD0-DD13-4171-8438-383759222427}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFilter">
      <DTS:VariableValue
        DTS:DataType="8">*zip</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ArchiveFile"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C529D411-655C-4AF4-891C-3A910E27A0B3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ArchiveFile"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6bdddcd0eec741018b769af9bcabf56b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::ReportArchivePath,User::ReportPath,User::XLSXFilter">
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
Imports System.Net.Security
Imports System.Linq
Imports System.Runtime.CompilerServices
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Written by Jose Espinosa-Tello 8/16/2023
        'This script takes the newly created excel file containing data for recent etl process and copies it to its final destination.
        'Will take the file from its current location \ExcelDestination folder (reportPath) and copies it to the \ArchivedExcelFiles (reportArchivePath).
        'The copy process renames the file to include the date for archiving purposes. The scrip will also take into account if there is an existing file.
        'The script will rename multiple older existing files in sequence and then copy the new file into the archive folder.
        'the newest file will have the lowest number.
        '

        '\ExcelDestination folder
        Dim reportPath As String = CType(Dts.Variables("ReportPath").Value, String)
        '\ArchivedExcelFiles folder
        Dim reportArchivePath As String = CType(Dts.Variables("ReportArchivePath").Value, String)
        Dim xlsxFilter As String = CType(Dts.Variables("XLSXFilter").Value, String)

        'original file in the recently loaded destination folder
        Dim fileName As String = "\RecentlyLoaded.xlsx"
        Dim datePartName As String = ""
        Dim nuOfFiles As String()
        Dim item As String
        Dim a As Boolean = False

        Dim filesFound As Boolean = False
        Dim startTime As Date = Now
        Dim timeOutValue As Integer = 1


        'If the month is less than 10 add a 0 to the datePartname variable
        If Month(Now()) < 10 Then
            datePartName &= "0"
        End If

        'Add the month after the if statment
        datePartName &= Month(Now()).ToString

        'If the day is less than 10 add a 0 to the datPartName variable.
        If DatePart("d", Now()) < 10 Then
            datePartName &= "0"
        End If

        'Add the day after the if statement
        datePartName &= DatePart("d", Now())

        'Add year to the datePartName variable
        datePartName &= Year(Now()).ToString



        'variable with new filename that includes new date string.
        Dim newFile As String = "\" + datePartName + " - CustomersAdded" + ".xlsx"

        'create a full path for the file
        Dim totalPath As String = reportArchivePath + newFile

        Try

            Do
                If startTime.AddMinutes(timeOutValue) < Now Then Throw New Exception("no file fitting the time criteria were found. Package timeout limit has been exceeded")

                'add all files in directory to the files array
                nuOfFiles = Directory.GetFiles(reportArchivePath, xlsxFilter)

                'set counter
                Dim counter As Integer = 0

                'for loop through each file in the array
                For Each item In nuOfFiles

                    'get string length of file path
                    Dim pathLength As Integer = reportArchivePath.Length + 1


                    'use substring to pull the date from the current item in loop.
                    'pathlength is used as a starting point and we count 8 from the end of path since the date is the next 8 digits.
                    Dim dateOfItem As String = item.ToString().Substring(pathLength, 8)

                    'if the current items' date match current date the begin the rename process
                    If dateOfItem = datePartName Then

                        'start counter for renaming process
                        'we start a counter only after we confirm the file date matches because their could already be multiple copies
                        'if there is a copy we are counting so we can increment the copy file name and never copy over an existing file
                        counter += 1

                        'create variable used to rename the file
                        Dim renameFile As String = "\" + datePartName + " - CustomersAdded" + "(" + counter.ToString() + ")" + ".xlsx"

                        'if the current item matches the copy name the we rename the current item in order to allow the newest file to be copied
                        'if there are copies we will now have a count that will have the appropriate copy number.
                        'ie.. copy(2), copy(3), etc..
                        If item.ToString() = totalPath Then

                            'While loop will check directory if the current item(file) exist in the direcory the while loop will continue
                            While My.Computer.FileSystem.FileExists(item.ToString())


                                'create a counter to use for the rename process.
                                Dim renameCounter As Integer = counter + 1

                                'create new rename string. Rename paramete does not accept a path only a new file name.
                                'the coutner will add one to the original counter, therefor since there is an existing file
                                'the first copy will alway be remnamed 2 and if there are more files that need renaming the sequence will pick up after number 2.
                                Dim rename As String = datePartName + " - CustomersAdded" + "(" + renameCounter.ToString() + ")" + ".xlsx"

                                'rename method accepts filepath(item) as first paramete and rename string as second parameter
                                My.Computer.FileSystem.RenameFile(item.ToString(), rename.ToString())

                                ' while loop ends because the original item(file) was renamed and no longer exists
                            End While

                        End If


                    End If


                    'if current item(file) name is not equal the file name the includes date the move on to next item.
                    Continue For


                    'if none of the files have existing names proceed to copy file from excel destination folder to the archive folder path
                Next

                'If renaming of any files is not needed the script proceeds to copy the fille to the distination.
                My.Computer.FileSystem.CopyFile(reportPath & fileName, reportArchivePath & newFile, False)

                'set files found to true in order to end do loop.
                filesFound = True

                'My.Computer.FileSystem.RenameFile(reportArchivePath & fileName, newFile)
            Loop Until filesFound = True

        Catch ex As System.IO.FileNotFoundException
            Dts.Events.FireError(-1, "", "File not found - " + ex.Message, "", 0)

        Catch ex As IOException
            Dts.Events.FireError(-1, "", "Attempting to copy archive file - " + ex.Message, "", 0)

        End Try

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.


    'Unused code:
    'If My.Computer.FileSystem.FileExists(archivePath + fileName) Then
    '   My.Computer.FileSystem.DeleteFile(archivePath + fileName)
    'End If

    'If My.Computer.FileSystem.FileExists(archivePath + newFile) Then
    '   My.Computer.FileSystem.DeleteFile(archivePath + newFile)
    'End If
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_6bdddcd0eec741018b769af9bcabf56b.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CE43F73A-9D9D-42B0-A274-A5F7AAB9D830}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_6bdddcd0eec741018b769af9bcabf56b</RootNamespace>
    <AssemblyName>ST_6bdddcd0eec741018b769af9bcabf56b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_6bdddcd0eec741018b769af9bcabf56b")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_6bdddcd0eec741018b769af9bcabf56b")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e4fd75f6-a996-4efc-9f07-6a01c99f2ff0")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6bdddcd0eec741018b769af9bcabf56b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6bdddcd0eec741018b769af9bcabf56b</msb:DisplayName>
    <msb:ProjectId>{DC39C71C-FE7C-45A5-A36E-BD520FE2BA23}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6bdddcd0eec741018b769af9bcabf56b.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_6bdddcd0eec741018b769af9bcabf56b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP2r4WQAAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAAZkAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABRAAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
QAAAAAAAAEgAAAACAAUAXCUAAAAaAAABAAAAAAAAAFw/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswBgD+AgAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySQAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnJtAABwby0AAApvLgAACigvAAAKDHKDAABwDXKtAABwEwQWEwYoMAAAChMHFxMI
KDAAAAooMQAACh8KLw4RBHKvAABwKDIAAAoTBBEEKDAAAAooMQAAChMLEgsoMwAACigyAAAKEwRy
swAAcCgwAAAKjCUAAAEXFyg0AAAKHwovDhEEcq8AAHAoMgAAChMEEQRyswAAcCgwAAAKjCUAAAEX
Fyg0AAAKKDUAAAooMgAAChMEEQQoMAAACig2AAAKEwsSCygzAAAKKDIAAAoTBHK3AABwEQRyuwAA
cCg3AAAKEwkHEQkoMgAAChMKEgcRCGwoOAAACigwAAAKKDkAAAoWLwty6QAAcHM6AAAKegcIKDsA
AAoWEwwTDRYTCzjUAAAAEQ0RC5oTBQdvPAAAChfWEw4RBW89AAAKEQ4ebz4AAAoRBBYoPwAACjqh
AAAAEQwX1hMMG40yAAABJRZytwAAcKIlFxEEoiUYcpYBAHCiJRkSDCgzAAAKoiUacrwBAHCiKEAA
AAomEQVvPQAAChEKFig/AAAKLVcrPREMF9YTDxEEcpYBAHASDygzAAAKcrwBAHAoQQAAChMQKAQA
AAZvQgAAChEFbz0AAAoREG89AAAKb0MAAAooBAAABm9CAAAKEQVvPQAACm9EAAAKLasRCxfWEwsR
CxENjmk/If///ygEAAAGb0IAAAoGCSgyAAAKBxEJKDIAAAoWb0UAAAoXEwYRBjnC/v//3nolKEYA
AAoTEQIoKwAACm9HAAAKFXKtAABwcsoBAHAREW9IAAAKKDIAAApyrQAAcBZvSQAACiYoSgAACt49
JShGAAAKExICKCsAAApvRwAAChVyrQAAcHLuAQBwERJvSwAACigyAAAKcq0AAHAWb0kAAAomKEoA
AAreAAIoKwAAChZvTAAACioAAEE0AAAAAAAANwEAAEABAAB3AgAAPQAAACYAAAEAAAAANwEAAEAB
AAC0AgAAPQAAACcAAAE2AgMoJgAACihNAAAKKh4CKE4AAAoqLtAIAAACKCMAAAoqHgIoTwAACioA
ABMwAQAUAAAAAgAAEQKMBQAAGy0IKAEAACsKKwICCgYqIgP+FQUAABsqAAAAEzACACgAAAADAAAR
AntRAAAKb1IAAAoKBowIAAAbLRIoAgAAKwoCe1EAAAoGb1MAAAoGKkoCKCIAAAoCc1QAAAp9UQAA
CioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAuAgAACN+AAAkCQAAlAoAACNT
dHJpbmdzAAAAALgTAAA0AgAAI1VTAOwVAAAQAAAAI0dVSUQAAAD8FQAABAQAACNCbG9iAAAAAAAA
AAIAAAFXHaIJCQ8AAAD6ATMAFgAAAQAAAD0AAAAKAAAADAAAABkAAAAEAAAAVAAAAAIAAAA3AAAA
AwAAAAQAAAAIAAAACQAAAAgAAAABAAAABQAAAAEAAAADAAAAAwAAAAIAAAAAAKcFAQAAAAAABgCu
A5QIBgBTBJQIBgCFAtUHDwBbCQAABgDGAlwGBgCRA1wGBgA6BFwGBgDOA1wGBgDnA1wGBgANA1wG
BgACBOAFBgCyAk4IBgAuAk4IBgBZA1wGBgAoA60ECgBRAiAHCgAZApEFCgCZApEFDgDxASQIDgB5
B+gHBgBBA9UHDgDdAm0IDgD1As0ABgAECuAFDgBQByQIDgB2A80ABgCcAeAFDgABAFUFCgA8AuwF
BgAQB9UIBgCQBkcGCgABAjIGBgBoAtUHEgAYBCwFEgDVASwFBgDoBOAFBgBwAeAFBgB6BjoABgBu
BjoABgDnBeAFBgAsAeAFBgBvClwGBgCqCZQIBgDNB5wEEgB/BSwFFgBuCXkBFgAjAXkBDgCeCW0I
DgBkAc0ABgDXBOAFBgArAOAFDgD+BM0ADgCcBs0ABgCGBuAFBgB4CjoADgC5CW0IDgBoB+gHDgCC
CrQIDgCUAG0IEgA4BywFBgC2B+AFAAAAADEAAAAAAAEAAQAAAAAAJAZECk0AAQABAAAAAAB3B0QK
UQABAAIAAAEQAAsKRAphAAEAAwAAAAAAFwnmCGEABQAIAAABEACMCaAAgQAHAAwAAQAAAAkGoACN
AAkADwAFAQAAFggAAGEACQARAAUBAAAQAAAAYQAJABgAAgEAANMJAAChAAoAGgAxANUGoAExAKwG
qAExAMAGsAExAO4GuAERAIIHwAERAMkBxAERAHEEyAERAP4JzAEhADIKXgEGBowAzwFWgMMJ0gFW
gKkB0gFQIAAAAAAGGMAHBgABAFggAAAAAAYYwAcGAAEAYCAAAAAAERjGBzYBAQCKIAAAAAATCFsH
1gEBAJYgAAAAABMIFAbbAQEAoiAAAAAAEwhMB+ABAQCuIAAAAAATCAYI5QEBALogAAAAAAMYwAcG
AAEAwiAAAAAAFggMB+oBAQDuIAAAAAAWCLEB7wEBAPUgAAAAABYIvQH0AQEA/SAAAAAAERjGBzYB
AgAOIQAAAAAGGMAHBgACABghAAAAABYIeQT6AQIAdCEAAAAABhjABwYAAgB8IQAAAAAGAA8GBgAC
ALwkAAAAAMYClwk6AQIAyiQAAAAAxgILAe8AAwDSJAAAAACDAJkB/wEDAN4kAAAAAMYC1QS7AAMA
6CQAAAAAEQB5AAQCAwAIJQAAAAABAGUADAIEALogAAAAAAYYwAcGAAUAFCUAAAAAAwjyAEoABQBI
JQAAAAAGGMAHBgAFAAAAAQCWBAAAAQCaBgAAAQACAQAAAQACAQkAwAcBABEAwAcGABkAwAcKACkA
wAcQADEAwAcQADkAwAcQAEEAwAcQAEkAwAcQAFEAwAcQAFkAwAcVAGEAwAcVAGkAwAcQAHEAwAcQ
AHkAwAcQAIEAwAcaAJEAwAcgAKkAwAcGALEAwAcGALkAwAcGANEAwAcmAOkAwAcQAAkBwAcGABEB
wAcGAJkAwAcGAKEAwAcGAAwAwAcGABQAwAcGABwAwAcGACQAwAcGAAwA8gBKABQA8gBKABwA8gBK
ACQA8gBKAMEAwAcGANkAPgFPANkAawpXAPEAwAddAFkBjQRlAAEBwAcGAGEBVQdqAGEBFQpqABkB
wAcGABkBywmMAGkBagmSAHEBzwWYAHkBeQSfAIEB1QSjAIkBPAqoAIkB+ASuAJEB9wm1AJkB1QS7
AIkBKQq/AIEB1QTLAIkBpwauAJEB9wnQACkBgQnXACkBoQHeALEBwAcQALkBeAnoAJEB7QTvAJEB
1QS7AJEB3gTzAMEBxwT5AJEB9wkAAZEB9wkGAckB2AUOAdEBUAEaANEB7AkUAdEBWwEZAdkBpgcg
AWkB4QknATEBFwG7AOEBigctAdkBlAc2AbEBFwG7AGkBGgoBAMEAlwk6AcEACwHvAMEA1QS7AOkB
4wBHATQAMgpeATwAeQRKADwAgwR1ATwAwAcGAAgALACWAQgAMACbASkAqwC+Ay4ACwA8Ai4AEwBF
Ai4AGwBkAi4AIwBtAi4AKwCWAi4AMwCWAi4AOwBtAi4AQwCcAi4ASwCWAi4AUwCzAi4AWwCWAi4A
YwC5Ai4AawDjAi4AcwDwAkAAiwCbAUAAgwA6A0MAewBDA0MAgwA6A0kAqwDPA2MAewBDA2MAgwA6
A2kAqwDjA4AAiwCbAYMAkwCbAYMAmwCbAYMAewBDA4kAqwDwA6AAiwCbAakAgwBkAsAAiwCbAckA
gwBkAuAAiwCbAeMAuwCbAeMAUwCWAukAswCbAQMBgwA6AwMBowBcAyMBgwA6AyMBWwCWAiACgwA6
AyACiwCbAUACgwA6A0ACiwCbAWACgwA6A2ACiwCbAYACgwA6A4ACiwCbAaACiwCbAcACiwCbAeAC
iwCbAeACgwA6AwADiwCbASADiwCbASADgwA6A28APwFSAQQAAQAFAAUABgAHAAkACAAAAHkHFAIA
ACYGGQIAAFAHHgIAABgIIwIAABAHKAIAAM0BLQIAAJYEMgIAAPYANwICAAQAAwACAAUABQACAAYA
BwACAAcACQACAAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAuADUAPABDAEQBVwFmAW0BBIAA
AAEAAAAAAAAAAAAAAAAAoAAAAAQAAAAAAAAAAAAAAHsBxAAAAAAABAAAAAAAAAAAAAAAewHgBQAA
AAAKAAAAAAAAAAAAAACEAc0AAAAAABAAAAAAAAAAAAAAAI0BDQUAAAAAEAAAAAAAAAAAAAAAjQFE
AAAAAAAAAAAAAQAAACMJAAAIAAQACQAEAAoABwAAABAAEgBjAAAAEAArAGMAAAAAAC0AYwChAE0B
oQBwAQAAAENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxAEludDMyADxN
b2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABEaXNwb3Nl
X19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAFByb2plY3REYXRhAFNUXzZi
ZGRkY2QwZWVjNzQxMDE4Yjc2OWFmOWJjYWJmNTZiAG1zY29ybGliAE1pY3Jvc29mdC5WaXN1YWxC
YXNpYwBDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFuY2UAaW5zdGFuY2UAR2V0SGFzaENvZGUA
Z2V0X01lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
UmVuYW1lRmlsZQBDb3B5RmlsZQBEYXRlQW5kVGltZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAEdldFR5cGUAQ29tcGFyZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
bkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0
dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0
YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0
dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJl
YWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBDb21wYXJlU3RyaW5nAFRvU3RyaW5nAFN1
YnN0cmluZwBNYXRoAGdldF9MZW5ndGgATW9udGgARmlyc3REYXlPZldlZWsATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMuSW50ZXJuYWwAU2NyaXB0T2JqZWN0
TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzZiZGRkY2QwZWVjNzQxMDE4Yjc2OWFmOWJj
YWJmNTZiLmRsbABnZXRfSXRlbQBnZXRfRmlsZVN5c3RlbQBFbnVtAFN5c3RlbS5Db21wb25lbnRN
b2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBwbGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJ
T0V4Y2VwdGlvbgBGaWxlTm90Rm91bmRFeGNlcHRpb24AQ3VsdHVyZUluZm8ARmlyc3RXZWVrT2ZZ
ZWFyAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9i
amVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfVXNl
cgBFbnRlcgBnZXRfQ29tcHV0ZXIAU2VydmVyQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEZp
cmVFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9y
AC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
RGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzZiZGRkY2QwZWVjNzQxMDE4Yjc2OWFmOWJjYWJmNTZiLk15LlJlc291cmNlcwBNeVJl
c291cmNlcwBTVF82YmRkZGNkMGVlYzc0MTAxOGI3NjlhZjliY2FiZjU2Yi5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAQWRkTWludXRlcwBN
eVNldHRpbmdzAEVxdWFscwBDb252ZXJzaW9ucwBSdW50aW1lSGVscGVycwBPcGVyYXRvcnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBGaWxlRXhpc3RzAENvbmNhdABt
X1N5bmNPYmplY3QATXlQcm9qZWN0AEV4aXQAc2V0X1Rhc2tSZXN1bHQARGF0ZVBhcnQAbV9Db250
ZXh0AGdldF9Ob3cAU1RfNmJkZGRjZDBlZWM3NDEwMThiNzY5YWY5YmNhYmY1NmIuTXkAZ2V0X0Fz
c2VtYmx5AERpcmVjdG9yeQBGaWxlU3lzdGVtUHJveHkAAAAAMU0AeQAuAFIAZQBzAG8AdQByAGMA
ZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAVUgBlAHAAbwByAHQAUABhAHQAaAAAI1IAZQBw
AG8AcgB0AEEAcgBjAGgAaQB2AGUAUABhAHQAaAAAFVgATABTAFgARgBpAGwAdABlAHIAAClcAFIA
ZQBjAGUAbgB0AGwAeQBMAG8AYQBkAGUAZAAuAHgAbABzAHgAAAEAAzAAAANkAAADXAAALSAALQAg
AEMAdQBzAHQAbwBtAGUAcgBzAEEAZABkAGUAZAAuAHgAbABzAHgAAYCrbgBvACAAZgBpAGwAZQAg
AGYAaQB0AHQAaQBuAGcAIAB0AGgAZQAgAHQAaQBtAGUAIABjAHIAaQB0AGUAcgBpAGEAIAB3AGUA
cgBlACAAZgBvAHUAbgBkAC4AIABQAGEAYwBrAGEAZwBlACAAdABpAG0AZQBvAHUAdAAgAGwAaQBt
AGkAdAAgAGgAYQBzACAAYgBlAGUAbgAgAGUAeABjAGUAZQBkAGUAZAAAJSAALQAgAEMAdQBzAHQA
bwBtAGUAcgBzAEEAZABkAGUAZAAoAAENKQAuAHgAbABzAHgAACNGAGkAbABlACAAbgBvAHQAIABm
AG8AdQBuAGQAIAAtACAAAUVBAHQAdABlAG0AcAB0AGkAbgBnACAAdABvACAAYwBvAHAAeQAgAGEA
cgBjAGgAaQB2AGUAIABmAGkAbABlACAALQAgAAGCMCKz4l3HTrrwLI3g39eqAAQgAQEIAyAAAQUg
AQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYV
EiQBEiAEIAATAAcAARJtEYClBSAAEoCpByACAQ4SgKkEAAEcHAQAAQEcHAcTDg4ODg4OAhGAlQgO
DggIHQ4ICA4SgJkSgJ0FIAASgLUFIAASgLkGIAESgL0cAyAAHAQAAQ4cBQAAEYCVBgABCBGAlQUA
Ag4ODgMgAA4LAAQIDhwRgNERgNUEAAEOCAYAAw4ODg4GIAERgJUNCQACCBGAlRGAlQYAAh0ODg4D
IAAIBSACDggIBgADCA4OAgUAAQ4dDgcABA4ODg4OBSAAEoDpBCABAg4GIAMBDg4CBgABARKA2QUg
ABKA8QggBQIIDg4OCAMAAAEEIAECHAQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQBEwAHBhUS
cQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQQAAAAA
BAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIGHAIGCAMG
ESgEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAQgABJtBxABAR4AHgAH
MAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIYBCgAEwAIAQAIAAAAAAAe
AQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzZiZGRkY2QwZWVj
NzQxMDE4Yjc2OWFmOWJjYWJmNTZiAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMAAAUBAAEA
ACkBACRlNGZkNzVmNi1hOTk2LTRlZmMtOWYwNy02YTAxYzk5ZjJmZjAAAAwBAAcxLjAuMC4wAABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNwgBAAEAAAAAABgBAApNeVRlbXBsYXRlCDExLjAuMC4wAABhAQA0U3lz
dGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQcm90b2NvbBJDcmVhdGVf
X0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtNeS5Db21wdXRlcgAAEwEADk15
LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15LldlYlNlcnZpY2VzAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAPEAAAAAAAAAAAAAAVkAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhAAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADYAYgBkAGQAZABjAGQAMABlAGUAYwA3ADQAMQAwADEAOABiADcANgA5AGEAZgA5AGIAYwBhAGIA
ZgA1ADYAYgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANgBiAGQAZABkAGMAZAAwAGUA
ZQBjADcANAAxADAAMQA4AGIANwA2ADkAYQBmADkAYgBjAGEAYgBmADUANgBiAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA2AGIAZABkAGQA
YwBkADAAZQBlAGMANwA0ADEAMAAxADgAYgA3ADYAOQBhAGYAOQBiAGMAYQBiAGYANQA2AGIALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANgBiAGQAZABkAGMA
ZAAwAGUAZQBjADcANAAxADAAMQA4AGIANwA2ADkAYQBmADkAYgBjAGEAYgBmADUANgBiAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABoMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CopyFIleToNewPath"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C63AD8A4-162C-47A8-A3DC-B3509BFEAC27}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="CopyFIleToNewPath"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_34ab0c1d6a814bda805da37ff775f3dc"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::CopyPath,User::ExtractPath,User::XLSXFilter">
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
Imports System.IO.Compression
Imports System.Linq
Imports System.IO.Directory
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()>
<System.CLSCompliantAttribute(False)>
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        'Written by Jose Espinosa-Tello 8/15/2023
        'This script will copy the most recently extracted file from the extractPath \ExtractedFilesPath to the copyPath (\LoadFilePath)
        'The copy path is used by the data flow "Load data from Excel to Database" and needs to contain only one file.
        'The copy will overwrite the current older and contain the same name as required by the dataflow.

        '

        'Path where copy of newest excel file will be dropped.
        '\LoadFilePath
        Dim copyPath As String = CType(Dts.Variables("CopyPath").Value, String)

        'Name of newest excel file.
        '*xlsx
        Dim xlsxFilter As String = CType(Dts.Variables("XLSXFilter").Value, String)

        'Path were newest extracted excel file was dropped by extract script task.
        '\ExtractedFilesPath
        Dim extractPath As String = CType(Dts.Variables("ExtractPath").Value, String)




        Dim fileChangeDt As Date
        Dim fileAge As TimeSpan
        Dim newestAge As New TimeSpan(3, 0, 0, 0)
        Dim newestFile As String
        Dim filesFound As Boolean = False
        Dim startTime As Date = Now
        Dim timeOutValue As Integer = 1
        Dim shObj As Object = Activator.CreateInstance(Type.GetTypeFromProgID("Shell.Application"))

        Dim extractLength As Integer = 0
        Dim cNameLength As Integer = 0
        Dim copyName As String = ""




        Try
            Do
                If startTime.AddMinutes(timeOutValue) < Now Then Throw New Exception("no file fitting the time criteria were found. Package timeout limit has been exceeded")

                'Pull newest file from directory/folder and assign to object.
                shObj = My.Computer.FileSystem.GetFileInfo(Directory.GetFiles(extractPath, xlsxFilter).OrderByDescending(Function(f) New FileInfo(f).LastWriteTime).First())


                'convert object to string and assign to variable newestFile.
                newestFile = Convert.ToString(shObj)

                'Pull the write time from newest file.
                fileChangeDt = File.GetLastWriteTime(newestFile)

                'subtract current date from write time date to get difference.
                fileAge = DateTime.Now.Subtract(fileChangeDt)

                'If filege is less than desiged age of 3 days the ok to copy file.
                If TimeSpan.op_LessThan(fileAge, newestAge) Then

                    'Create name for new copy file.

                    'Pull the total number of letters from extract path.
                    extractLength = extractPath.Length

                    'Pull the toltal number of letters from newst file.
                    cNameLength = newestFile.Length

                    'Create a new string to use as the copy name.
                    'Subtring takes desired string from newestFile based on parameters.
                    'extractLength is the length of the folder path, the end of the path will be the starting point.
                    'Subtract the length of newestFile(cNameLength) from extractLength, this will leave only the length of the name of the file.
                    'With both inputs Substring will start extracting the desired string at the end of extract file path
                    'and gather only the name of file by using the length determined by subtracting files.
                    copyName = newestFile.Substring(extractLength, (cNameLength - extractLength))

                    'Once copyName is determined we will use the copyPath and copyName as the new name of the file.
                    'newestFile is the file we will copy.
                    My.Computer.FileSystem.CopyFile(newestFile, copyPath & copyName, True)

                    'Set to true in order to end the Do until loop.
                    filesFound = True


                End If


                If filesFound = False Then

                    System.Threading.Thread.Sleep(60000)


                End If

            Loop Until filesFound = True

            Dts.TaskResult = ScriptResults.Success

        Catch ex As Exception

            Dts.Events.FireError(-1, "", "Error in GetNewesFile - " + ex.Message, "", 0)

        End Try



#Region "Unused code"

        'Assign files to copyFiles array
        'Not needed in the end.
        'Dim copyFiles() as String
        'Use this array if needed for a loop.
        'copyFiles = Directory.GetFiles(extractPath, xlsxFilter)

        'Test to pull newest file from directory/folder.
        'My.Computer.FileSystem.GetFileInfo(Directory.GetFiles(extractPath, xlsxFilter).OrderBy(Function(f) New FileInfo(f).LastWriteTime).First()) 

        'Directory.GetFiles(extractPath, xlsxFilter).OrderByDescending()

        'Directory.GetFiles(extractPath, xlsxFilter).OrderByDescending(Function(f) New FileInfo(f).LastWriteTime).First()

        'My.Computer.FileSystem.GetFileInfo(Directory.GetFiles(extractPath, xlsxFilter).OrderBy(Function(f) New FileInfo(f).LastWriteTime).Max())


        'For each loop was originally created to delete files in folder.
        'Not needed in the end.
        'Dim deleteFiles() As String
        'Dim deleteFile As String


        'deleteFiles = Directory.GetFiles(copyPath, excelFilter)

        'For Each deleteFile In deleteFiles
        'If My.Computer.FileSystem.FileExists(deleteFile) Then
        'My.Computer.FileSystem.DeleteFile(deleteFile)
        'End If
        'Next
#End Region

    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region


End Class]]></ProjectItem>
          <ProjectItem
            Name="ST_34ab0c1d6a814bda805da37ff775f3dc.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9414FDC4-1391-48DC-A5CD-771FE71B0FA5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_34ab0c1d6a814bda805da37ff775f3dc</RootNamespace>
    <AssemblyName>ST_34ab0c1d6a814bda805da37ff775f3dc</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_34ab0c1d6a814bda805da37ff775f3dc")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_34ab0c1d6a814bda805da37ff775f3dc")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("bf3c745d-3894-4672-88d6-0f1ee1dce11b")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_34ab0c1d6a814bda805da37ff775f3dc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_34ab0c1d6a814bda805da37ff775f3dc</msb:DisplayName>
    <msb:ProjectId>{9804D77D-4973-43C3-9113-C1C776BC5FF5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_34ab0c1d6a814bda805da37ff775f3dc.vbproj" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_34ab0c1d6a814bda805da37ff775f3dc.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGKw4WQAAAAAAAAAAOAAIiALAVAAACIAAAAIAAAAAAAANkAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQ/AABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
QAAAAAAAAEgAAAACAAUAHCQAABAbAAABAAAAAAAAACw/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBkAAAoqHgIoGgAACiqmcxsAAAqAAQAABHMcAAAKgAIA
AARzHQAACoADAAAEcx4AAAqABAAABCoufgEAAARvHwAACioufgIAAARvIAAACioufgMAAARvIQAA
CioufgQAAARvIgAACioeAigjAAAKKq5+BQAABC0ecgEAAHDQBQAAAigkAAAKbyUAAApzJgAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMjAAAKKCcAAAqACAAABCoeAigoAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCcAAAooKQAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgnAAAK
KCoAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigrAAAKKhswBgDLAQAAAQAAEQIoLAAACm8t
AAAKcjMAAHBvLgAACm8vAAAKKDAAAAoKAigsAAAKby0AAApyRQAAcG8uAAAKby8AAAooMAAACgsC
KCwAAApvLQAACnJbAABwby4AAApvLwAACigwAAAKDBIEGRYWFigxAAAKFhMGKDIAAAoTBxcTCHJz
AABwKDMAAAooNAAACignAAAKJhYTCRYTCnKXAABwEwsSBxEIbCg1AAAKKDIAAAooNgAAChYvC3KZ
AABwczcAAAp6KAQAAAZvOAAACggHKDkAAAp+DgAABCwHfg4AAAQrFn4NAAAE/gYcAAAGczoAAAol
gA4AAAQoAQAAKygCAAArbz0AAAooJwAACig+AAAKEwURBSg/AAAKDShAAAAKEwwSDAkoQQAAChEE
KEIAAAosPghvQwAAChMJEQVvQwAAChMKEQURCREKEQnab0QAAAoTCygEAAAGbzgAAAoRBQYRCyhF
AAAKF29GAAAKFxMGEQYtCiBg6gAAKEcAAAoRBjkb////AigsAAAKFm9IAAAK3j0lKEkAAAoTDQIo
LAAACm9KAAAKFXKXAABwckYBAHARDW9LAAAKKEUAAApylwAAcBZvTAAACiYoTQAACt4AKgABEAAA
AACaAPONAT0oAAABNgIDKCcAAAooTgAACioeAihPAAAKKi7QCAAAAigkAAAKKh4CKFAAAAoqAAAT
MAEAFAAAAAIAABECjAYAABstCCgDAAArCisCAgoGKiID/hUGAAAbKgAAABMwAgAoAAAAAwAAEQJ7
UgAACm9TAAAKCgaMCQAAGy0SKAQAACsKAntSAAAKBm9UAAAKBipKAigjAAAKAnNVAAAKfVIAAAoq
LnMaAAAGgA0AAAQqMgNzVgAACihXAAAKKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAAFwJAAAjfgAAyAkAAFwLAAAjU3RyaW5ncwAAAAAkFQAAeAEAACNVUwCcFgAAEAAAACNHVUlE
AAAArBYAAGQEAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+gEzABYAAAEAAABCAAAACwAAAA4A
AAAcAAAABQAAAFcAAAACAAAAOAAAAAMAAAAEAAAACAAAAAkAAAAJAAAAAQAAAAYAAAABAAAABAAA
AAMAAAAEAAAAAABdBgEAAAAAAAYAcwRkCQYAGAVkCQYASgOlCA8AKwoAAAYAiwMnBwYAVgQnBwYA
/wQnBwYAkwQnBwYArAQnBwYA0gMnBwYAxwSWBgYAdwMeCQYA8wIeCQYAHgQnBwYA7QOGBQoAFgPw
BwoAwwJHBgoAXgNHBg4AmwL0CA4ASQi4CAYABgSlCA4AogM9CQ4AugNBAQYAyAqWBg4AIAj0CA4A
OwRBAQYAOgKWBg4AOAALBgoAAQO3BgYA4AelCQYATwcSBwoAqwL9BgYALQOlCBIA3QTiBRIAfwLi
BQYAswWWBgYAQQuHAAYA6wGWBgYArgaWBgYAOQeWBgYAnQaWBgYA2AJkCQYAYgCWBgYAsgGWBgYA
OAsnBwYAegpkCQYAnQhjBRIANQbiBRYAPgoXAhYAngEXAg4Abgo9CQ4A3wFBAQYAhgiWBg4AOAi4
CA4ASwuECRoApwFwBxoAIwBwBwYAFQAmAQYARgeHAAYA7QqWBgYA2gGHAAYAogWWBgYAVwFjBQ4A
7QA9CRIACAjiBQYAWweHAAAAAABpAAAAAAABAAEAAAAAAO8GDQtNAAEAAQAAAAAARwgNC1EAAQAC
AAABEADPCg0LYQABAAMAAAAAAOcJtglhAAUACAAAARAAXAoCAYEABwAMAAEAAADUBgIBjQAJAA8A
BQEAAOYIAABhAAkAEQAFAQAARwAAAGEACQAYAAIBAACZCgAApQAKABoABSEAALIAAABhAA0AGgAx
AKUH6AExAHwH8AExAJAH+AExAL4HAAIRAFIICAIRAHMCDAIRADYFEAIRAMIKFAIhAPsKoAEGBuUA
FwJWgIkKGgJWgFMCGgI2AIQAHgIWAAEAIgJQIAAAAAAGGJAIBgABAFggAAAAAAYYkAgGAAEAYCAA
AAAAERiWCHgBAQCKIAAAAAATCCsILQIBAJYgAAAAABMI3wYyAgEAoiAAAAAAEwgcCDcCAQCuIAAA
AAATCNYIPAIBALogAAAAAAMYkAgGAAEAwiAAAAAAFgjcB0ECAQDuIAAAAAAWCFsCRgIBAPUgAAAA
ABYIZwJLAgEA/SAAAAAAERiWCHgBAgAOIQAAAAAGGJAIBgACABghAAAAABYIPgVRAgIAdCEAAAAA
BhiQCAYAAgB8IQAAAAAGANoGBgACAGQjAAAAAMYCZwp8AQIAciMAAAAAxgKGAUIBAwB6IwAAAACD
ADcCVgIDAIYjAAAAAMYCoAVrAQMAkCMAAAAAEQDSAFsCAwCwIwAAAAABAL4AYwIEALogAAAAAAYY
kAgGAAUAvCMAAAAAAwhtAUoABQDwIwAAAAAGGJAIBgAFALogAAAAAAYYkAgGAAUAAyQAAAAAERiW
CHgBBQAPJAAAAAADCAcAawIFAAAAAQBbBQAAAQBoBwAAAQB9AQAAAQB9AQAAAQBhBQkAkAgBABEA
kAgGABkAkAgKACkAkAgQADEAkAgQADkAkAgQAEEAkAgQAEkAkAgQAFEAkAgQAFkAkAgVAGEAkAgV
AGkAkAgQAHEAkAgQAHkAkAgQAIEAkAgaAJEAkAggAKkAkAgGALEAkAgGALkAkAgGANEAkAgmAOkA
kAgQAAkBkAgGABEBkAgGAFEBkAgGAJkAkAgGAKEAkAgGAAwAkAgGABQAkAgGABwAkAgGACQAkAgG
AAwAbQFKABQAbQFKABwAbQFKACQAbQFKAMEAkAgGANkAxAFPANkANAtXAPEAkAhdAHEBUgVlAAEB
kAgGAHkBJQhqAHkB2QpqABkBkAgGABkBkQqKAIEBOgqQAIkBhQaWAJEBPgWdAJkBoAWhADkBkAim
AKEBBQuuANkAcgC0AKkBXgG6ADEBUQrAADEBPwLHAEEBkAgQALEBjgbRACkBSArXACwAkAjoAMEB
dAXuAMEB9QoQAbkBQwchAeEBoAWhAOkBBgIoATEBBQuuADEBuQovATkBogY4AfEBuAVCAfEBqQVG
AfEBsgpMAbkB1gFSAfkBagdZAYEB3goBAAECdgheAYEBpwplAUEBkgFrAQkCWghvAQECZAh4AcEA
Zwp8AcEAhgFCAcEAoAVrAakBXgGJATwA+wqgAUQAPgVKAEQASAW3AUQAkAgGANkBkAgQABEC9AG9
AQgALADeAQgAMADjASkAqwAcBC4ACwCaAi4AEwCjAi4AGwDCAi4AIwDLAi4AKwD0Ai4AMwD0Ai4A
OwDLAi4AQwD6Ai4ASwD0Ai4AUwARAy4AWwD0Ai4AYwAXAy4AawBBAy4AcwBOA0AAiwDjAUAAgwCY
A0MAewChA0MAgwCYA0kAqwAtBGMAewChA2MAgwCYA2kAqwBBBIAAiwDjAYMAkwDjAYMAmwDjAYMA
ewChA4kAqwBOBKAAiwDjAakAgwDCAsAAiwDjAckAgwDCAuAAiwDjAeMAuwDjAeMAUwD0AukAswDj
AQMBgwCYAwMBowC6AyMBgwCYAyMBWwD0AmMBwwDjASACgwCYAyACiwDjAUACgwCYA0ACiwDjAWAC
gwCYA2ACiwDjAYACgwCYA4ACiwDjAaACiwDjAcACiwDjAeACiwDjAeACgwCYAwADiwDjASADiwDj
ASADgwCYA28AgQGUAQQAAQAFAAUABgAHAAkACAAAAEkIcgIAAPEGdwIAACAIfAIAAOgIgQIAAOAH
hgIAAHcCiwIAAFsFkAIAAHEBlQICAAQAAwACAAUABQACAAYABwACAAcACQACAAkACwACAAoADQAB
AAsADQACAA4ADwACABgAEQAuADUAPABDAN4AhgGZAagBrwEEgAAAAQAAAAAAAAAAAAAAAAACAQAA
BAAAAAAAAAAAAAAAwwH5AAAAAAAEAAAAAAAAAAAAAADDAZYGAAAAAAoAAAAAAAAAAAAAAMwBQQEA
AAAAEAAAAAAAAAAAAAAA1QHDBQAAAAAQAAAAAAAAAAAAAADVAZEAAAAAAAQAAAAAAAAAAAAAAMMB
RwIAAAAAAAAAAAEAAADzCQAACAAEAAkABAAKAAcACwAHAAAAEAASALAAAAAQACsAsAAAAAAALQCw
AHcACQF5AB0BowCPAaMAsgEAAAAAACRJMS0wAF9MYW1iZGEkX18xLTAASUVudW1lcmFibGVgMQBJ
T3JkZXJlZEVudW1lcmFibGVgMQBDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlk
ZXJgMQBGdW5jYDIAPE1vZHVsZT4AR2V0VHlwZUZyb21Qcm9nSUQAJEkAU3lzdGVtLklPAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBUAF9DbG9zdXJlJF9fAERpc3Bvc2VfX0luc3RhbmNl
X18AQ3JlYXRlX19JbnN0YW5jZV9fAHZhbHVlX18AUHJvamVjdERhdGEAbXNjb3JsaWIAU1RfMzRh
YjBjMWQ2YTgxNGJkYTgwNWRhMzdmZjc3NWYzZGMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMA
TWljcm9zb2Z0LlZpc3VhbEJhc2ljAFRocmVhZABDcmVhdGVJbnN0YW5jZQBnZXRfR2V0SW5zdGFu
Y2UAaW5zdGFuY2UAR2V0SGFzaENvZGUAZ2V0X01lc3NhZ2UAVmFyaWFibGUARW51bWVyYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBDb3B5RmlsZQBEYXRlQW5kVGltZQBE
YXRlVGltZQBnZXRfTGFzdFdyaXRlVGltZQBHZXRMYXN0V3JpdGVUaW1lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBDb21wYXJlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAX3Jlc0N1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHdWlkQXR0cmlidXRlAEhlbHBLZXl3
b3JkQXR0cmlidXRlAEdlbmVyYXRlZENvZGVBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBDb21W
aXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAU3RhbmRhcmRNb2R1bGVBdHRy
aWJ1dGUASGlkZU1vZHVsZU5hbWVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFzc2VtYmx5
RmlsZVZlcnNpb25BdHRyaWJ1dGUATXlHcm91cENvbGxlY3Rpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBDTFNDb21wbGlh
bnRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBtX1ZhbHVlAGdldF9W
YWx1ZQBzZXRfVmFsdWUAR2V0T2JqZWN0VmFsdWUAZgBTeXN0ZW0uVGhyZWFkaW5nAE9yZGVyQnlE
ZXNjZW5kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAE1h
dGgAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2
aWNlcy5JbnRlcm5hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1Rf
MzRhYjBjMWQ2YTgxNGJkYTgwNWRhMzdmZjc3NWYzZGMuZGxsAGdldF9JdGVtAGdldF9GaWxlU3lz
dGVtAEVudW0Ab3BfTGVzc1RoYW4AVGltZVNwYW4AU3lzdGVtLkNvbXBvbmVudE1vZGVsLkRlc2ln
bgBTY3JpcHRNYWluAGdldF9BcHBsaWNhdGlvbgBNeUFwcGxpY2F0aW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBH
ZXRGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBTbGVlcABTeXN0ZW0uTGlucQBt
X0FwcE9iamVjdFByb3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQ
cm92aWRlcgBtX015V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AFN5c3RlbS5Db2RlRG9tLkNvbXBpbGVyAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X1VzZXIARW50
ZXIAZ2V0X0NvbXB1dGVyAFNlcnZlckNvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBGaXJlRXJy
b3IAQ2xlYXJQcm9qZWN0RXJyb3IAU2V0UHJvamVjdEVycm9yAEFjdGl2YXRvcgAuY3RvcgAuY2N0
b3IATW9uaXRvcgBTeXN0ZW0uRGlhZ25vc3RpY3MATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmlj
ZXMAZ2V0X1dlYlNlcnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFw
cGxpY2F0aW9uU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29m
dC5WaXN1YWxCYXNpYy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF8zNGFiMGMxZDZhODE0YmRhODA1ZGEzN2ZmNzc1ZjNkYy5NeS5SZXNvdXJjZXMATXlSZXNvdXJj
ZXMAU1RfMzRhYjBjMWQ2YTgxNGJkYTgwNWRhMzdmZjc3NWYzZGMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAEFkZE1pbnV0ZXMATXlTZXR0
aW5ncwBFcXVhbHMAQ29udmVyc2lvbnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNj
cmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBDb25jYXQAU3VidHJhY3QAbV9TeW5jT2JqZWN0AE15UHJv
amVjdABFeGl0AHNldF9UYXNrUmVzdWx0AENvbnZlcnQARmlyc3QAbV9Db250ZXh0AGdldF9Ob3cA
U1RfMzRhYjBjMWQ2YTgxNGJkYTgwNWRhMzdmZjc3NWYzZGMuTXkAZ2V0X0Fzc2VtYmx5AERpcmVj
dG9yeQBGaWxlU3lzdGVtUHJveHkAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBl
AHMAbwB1AHIAYwBlAHMAABFDAG8AcAB5AFAAYQB0AGgAABVYAEwAUwBYAEYAaQBsAHQAZQByAAAX
RQB4AHQAcgBhAGMAdABQAGEAdABoAAAjUwBoAGUAbABsAC4AQQBwAHAAbABpAGMAYQB0AGkAbwBu
AAABAICrbgBvACAAZgBpAGwAZQAgAGYAaQB0AHQAaQBuAGcAIAB0AGgAZQAgAHQAaQBtAGUAIABj
AHIAaQB0AGUAcgBpAGEAIAB3AGUAcgBlACAAZgBvAHUAbgBkAC4AIABQAGEAYwBrAGEAZwBlACAA
dABpAG0AZQBvAHUAdAAgAGwAaQBtAGkAdAAgAGgAYQBzACAAYgBlAGUAbgAgAGUAeABjAGUAZQBk
AGUAZAAAMUUAcgByAG8AcgAgAGkAbgAgAEcAZQB0AE4AZQB3AGUAcwBGAGkAbABlACAALQAgAAFu
6NmLOuoJQKZTTjZKeARWAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQB
Dg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYVEiQBEiAEIAATAAcAARJtEYCxBSAAEoC1ByACAQ4S
gLUEAAEcHAQAAQEcGgcODg4OEYCZEYCdDgIRgJkICAgOEYCZEoChBSAAEoDBBSAAEoDFBiABEoDJ
HAMgABwEAAEOHAcgBAEICAgIBQAAEYCZBQABEm0OBQABHBJtBiABEYCZDQkAAggRgJkRgJkFIAAS
gN0GAAIdDg4OCRUSgK0CDhGAmQUgAgEcGBoQAgIVEoDlAR4AFRKA6QEeABUSgK0CHgAeAQYKAg4R
gJkMEAEBHgAVEoDpAR4AAwoBDgYgARKA7Q4GAAERgJkOCCABEYCdEYCZCQACAhGAnRGAnQMgAAgF
IAIOCAgFAAIODg4GIAMBDg4CBAABAQgGAAEBEoChBSAAEoEFAyAADgggBQIIDg4OCAMAAAEEIAEC
HAQHAR4AAh4ABRABAB4ABAoBHgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUg
AQETAAUgABGAmQi3elxWGTTgiQiwP19/EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcG
FRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkDBhJ9AwYSGAIGHAIGCAMGESgDBhIsCgYVEoCtAg4R
gJkEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAASGAQgABJtBxABAR4AHgAH
MAEBARAeAAYgARGAmQ4ECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgAEn0ECAASGAQoABMACAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8zNGFi
MGMxZDZhODE0YmRhODA1ZGEzN2ZmNzc1ZjNkYwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIz
AAAFAQABAAApAQAkYmYzYzc0NWQtMzg5NC00NjcyLTg4ZDYtMGYxZWUxZGNlMTFiAAAMAQAHMS4w
LjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRIuTkVUIEZyYW1ld29yayA0LjcIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAA
YQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wS
Q3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIA
ABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAC0
AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGli
LCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVj
NTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAA
AFBBRFBBRFC0AAAADEAAAAAAAAAAAAAAJkAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhAAAAA
AAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADMANABhAGIAMABjADEAZAA2AGEAOAAxADQAYgBkAGEAOAAwADUAZABhADMANwBmAGYANwA3ADUA
ZgAzAGQAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMwA0AGEAYgAwAGMAMQBkADYA
YQA4ADEANABiAGQAYQA4ADAANQBkAGEAMwA3AGYAZgA3ADcANQBmADMAZABjAC4AZABsAGwAAABI
ABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAA
AHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAzADQAYQBiADAA
YwAxAGQANgBhADgAMQA0AGIAZABhADgAMAA1AGQAYQAzADcAZgBmADcANwA1AGYAMwBkAGMALgBk
AGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMwA0AGEAYgAwAGMA
MQBkADYAYQA4ADEANABiAGQAYQA4ADAANQBkAGEAMwA3AGYAZgA3ADcANQBmADMAZABjAAAANAAI
AAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEA
cwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAA4MAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Export Data to Excel File"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1BE8E4F4-29A7-4E57-833B-70D25351B5EC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Export Data to Excel File">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Export Data to Excel File\Load Address"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5847FC88-F966-4628-9F76-75FD8BA995F7}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Address"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Data to Excel File\Load Address\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="i2"
                          cachedName="AddressID"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="39"
                          cachedName="AddressLine1"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="AddressLine2"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="17"
                          cachedName="City"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[StateProvince]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="16"
                          cachedName="StateProvince"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[CountryRegion]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="14"
                          cachedName="CountryRegion"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[PostalCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="PostalCode"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="39"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          name="Copy of AddressLine1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          name="Copy of AddressLine2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="17"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          name="Copy of City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvince]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="16"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvince]"
                          name="Copy of StateProvince"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="14"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          name="Copy of CountryRegion"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          name="Copy of PostalCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Address\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LoadedAddress$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Address\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 7]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 7]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="r8"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressLine1]"
                          cachedDataType="wstr"
                          cachedLength="39"
                          cachedName="Copy of AddressLine1"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine1]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressLine2]"
                          cachedDataType="wstr"
                          cachedLength="22"
                          cachedName="Copy of AddressLine2"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine2]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of City]"
                          cachedDataType="wstr"
                          cachedLength="17"
                          cachedName="Copy of City"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[City]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of StateProvince]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Copy of StateProvince"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[StateProvince]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvince]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CountryRegion]"
                          cachedDataType="wstr"
                          cachedLength="14"
                          cachedName="Copy of CountryRegion"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CountryRegion]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of PostalCode]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="Copy of PostalCode"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[PostalCode]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          dataType="wstr"
                          length="255"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[StateProvince]"
                          dataType="wstr"
                          length="255"
                          name="StateProvince" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Address\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC loadAddress</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine1]"
                          length="39"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]"
                          name="AddressLine1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine2]"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]"
                          name="AddressLine2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[City]"
                          length="17"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StateProvince]"
                          length="16"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]"
                          name="StateProvince"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CountryRegion]"
                          length="14"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]"
                          name="CountryRegion"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PostalCode]"
                          length="10"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]"
                          name="PostalCode"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          length="39"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="17"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          name="StateProvince" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          length="14"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="PostalCode" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          length="39"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine1]"
                          name="AddressLine1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine2]"
                          name="AddressLine2" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="17"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StateProvince]"
                          name="StateProvince" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          length="14"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CountryRegion]"
                          name="CountryRegion" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PostalCode]"
                          name="PostalCode" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Data to Excel File\Load Address.Paths[Data Conversion Output]"
                  endId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Export Data to Excel File\Load Address.Paths[OLE DB Source Output]"
                  endId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Data to Excel File\Load CustomerAddress"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{84432C39-7DE9-4F02-9BC7-347A8D016446}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load CustomerAddress"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="i2"
                          cachedName="CustomerID"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="i2"
                          cachedName="AddressID"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input].Columns[AddressType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="AddressType"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="11"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          name="Copy of AddressType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LoadedCustomerAddress$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 7]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 7]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="r8"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="r8"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressType]"
                          cachedDataType="wstr"
                          cachedLength="11"
                          cachedName="Copy of AddressType"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressType]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          dataType="wstr"
                          length="255"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          dataType="wstr"
                          length="255"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC loadCustomerAddress</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressType]"
                          length="11"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]"
                          name="AddressType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressType]"
                          name="AddressType" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Data to Excel File\Load CustomerAddress.Paths[Data Conversion Output]"
                  endId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Export Data to Excel File\Load CustomerAddress.Paths[OLE DB Source Output]"
                  endId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Data to Excel File\Load Customers"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{4B675216-E2BA-4D62-8F02-8F61204143E2}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Customers"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Data to Excel File\Load Customers\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="i2"
                          cachedName="CustomerID"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[NameStyle]"
                          cachedDataType="bool"
                          cachedName="NameStyle"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="Title"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="FirstName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="MiddleName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="LastName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[Suffix]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="Suffix"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[CompanyName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="41"
                          cachedName="CompanyName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[SalesPerson]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="SalesPerson"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[EmailAddress]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="43"
                          cachedName="EmailAddress"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="19"
                          cachedName="Phone"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          name="Copy of NameStyle"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          name="Copy of Title"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          name="Copy of FirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          name="Copy of MiddleName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          name="Copy of LastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          name="Copy of Suffix"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          name="Copy of CompanyName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          name="Copy of SalesPerson"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="43"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          name="Copy of EmailAddress"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="19"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          name="Copy of Phone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Customers\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LoadedCustomers$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 7]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 7]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="r8"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of NameStyle]"
                          cachedDataType="r8"
                          cachedName="Copy of NameStyle"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[NameStyle]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Title]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Title"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of FirstName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of FirstName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of MiddleName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of MiddleName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of LastName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of LastName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Suffix]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Suffix"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Suffix]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CompanyName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of CompanyName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CompanyName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of SalesPerson]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of SalesPerson"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesPerson]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of EmailAddress]"
                          cachedDataType="wstr"
                          cachedLength="43"
                          cachedName="Copy of EmailAddress"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[EmailAddress]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Phone]"
                          cachedDataType="wstr"
                          cachedLength="19"
                          cachedName="Copy of Phone"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          dataType="wstr"
                          length="255"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[NameStyle]"
                          dataType="wstr"
                          length="255"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Customers\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Customer]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">exec loadCustomers</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[NameStyle]"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]"
                          name="NameStyle"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          length="4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]"
                          name="Title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MiddleName]"
                          length="20"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]"
                          name="MiddleName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Suffix]"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]"
                          name="Suffix"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                          length="41"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]"
                          name="CompanyName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesPerson]"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]"
                          name="SalesPerson"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmailAddress]"
                          length="43"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]"
                          name="EmailAddress"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                          length="19"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]"
                          name="Phone"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[NameStyle]"
                          dataType="bool"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          length="41"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          length="43"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="19"
                          name="Phone" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[NameStyle]"
                          dataType="bool"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[NameStyle]"
                          name="NameStyle" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Suffix]"
                          name="Suffix" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          length="41"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                          name="CompanyName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesPerson]"
                          name="SalesPerson" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          length="43"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmailAddress]"
                          name="EmailAddress" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="19"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Data to Excel File\Load Customers.Paths[Data Conversion Output]"
                  endId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Export Data to Excel File\Load Customers.Paths[OLE DB Source Output]"
                  endId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Export Data to Excel File.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CEF28A19-5834-4531-8F45-ADDF04FFAA7C}"
          DTS:From="Package\Export Data to Excel File\Load Customers"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Export Data to Excel File\Load Address" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Export Data to Excel File.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{107B7942-D843-423A-9B1B-22AF5BEDC361}"
          DTS:From="Package\Export Data to Excel File\Load Address"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Export Data to Excel File\Load CustomerAddress" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ExtractZipFile"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{E47D5769-F374-4739-9512-4EFD5B6088A4}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ExtractZipFile"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a4544aafb8ca4128803f65a8f58cd0e1"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::ExtractPath,User::FilePath,User::XLSXFilter,User::ZipFilter">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties.Settings.get_Default():ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties.Sett" +
    "ings")]

namespace ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.IO.Compression;
using System.Linq;
#endregion

namespace ST_a4544aafb8ca4128803f65a8f58cd0e1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Written by Jose Espinosa-Tello 8/18/2023
            // TODO: Add your code here

            //folder path containing all the zipFiles
            // \ZipFilesPath
            String zipPath = Dts.Variables["FilePath"].Value.ToString();

            //*zip
            String zipFilter = Dts.Variables["ZipFilter"].Value.ToString();

            //'Path were newest extracted excel file was dropped by extract script task.
           // \ExtractedFilesPath
            String extractPath = Dts.Variables["ExtractPath"].Value.ToString();

            // *xlsx
            String xlsxFilter = Dts.Variables["XLSXFilter"].Value.ToString();


            String[] xlsxFiles;
            String newestFile;
            Boolean filesFound = false;
            int timeOutValue = 1;

            DateTime fileChangeDt;
            DateTime startTime = DateTime.Now;
            TimeSpan fileAge;
            TimeSpan newestAge = new TimeSpan(3, 0, 0, 0);  
           

            
           

            try
            {
                do
                {
                    //Start 1 min timer
                    if (startTime.AddMinutes(timeOutValue) < DateTime.Now)
                    {
                        throw new Exception("no file fitting the time criteria were found. Package timeout limit has been exceeded.");
                    }   
                        // find the newest .zip file in the directory/folder.
                        newestFile = Directory.GetFiles(zipPath, zipFilter).OrderByDescending(File.GetLastWriteTime).First();
                        
                        //instantiate writetime of newest file to variables.
                        fileChangeDt = File.GetLastWriteTime(newestFile);
                        fileAge = DateTime.Now.Subtract(fileChangeDt);

                    //instantiate xlsxFiles array with the extract path .xlsx files.
                    xlsxFiles = Directory.GetFiles(extractPath, xlsxFilter);
                    
                    //compare the newest file age with the desired search file age.
                    //If newest file meets the criteria the we will extract.
                    if (fileAge < newestAge)
                    {
                        //ZipFile.ExtractToDirectory cannot overwite any existing files.
                        //foreach loop will look through the extract path and delte any existing .xlsx files.
                        foreach (var item in xlsxFiles)
                        {
                            File.Delete(item.ToString());
                        }


                        //extract the newest file to the extractPath directory/folder
                        ZipFile.ExtractToDirectory(newestFile, extractPath);

                        //set filesFound to true; this will end the Do While loop.
                        filesFound = true;

                    }
                    //if no files match criteris the program will delay for 1 min.
                    //this will allow the startTime timer to fail and catch the error.
                    if (filesFound != true)
                    {
                        System.Threading.Thread.Sleep(60000);
                    }
                }

                // If true this will end the Do While loop.
                while (filesFound == false);


            }


            catch (Exception ex)
            {
                Dts.Events.FireError(-1, "", "Error searching for newest file - " + ex.Message, "", 0);
            }


            Dts.TaskResult = (int)ScriptResults.Success;

        }


           
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a4544aafb8ca4128803f65a8f58cd0e1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_a4544aafb8ca4128803f65a8f58cd0e1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_a4544aafb8ca4128803f65a8f58cd0e1</msb:DisplayName>
    <msb:ProjectId>{3E4AC826-1D4C-439B-B638-3BD292FD5BCA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a4544aafb8ca4128803f65a8f58cd0e1.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a4544aafb8ca4128803f65a8f58cd0e1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a4544aafb8ca4128803f65a8f58cd0e1")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_a4544aafb8ca4128803f65a8f58cd0e1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7C5B6D32-A3E9-4A46-A9B4-7A6760B64940}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a4544aafb8ca4128803f65a8f58cd0e1</RootNamespace>
    <AssemblyName>ST_a4544aafb8ca4128803f65a8f58cd0e1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_a4544aafb8ca4128803f65a8f58cd0e1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANqw4WQAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAXjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAwzAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
MwAAAAAAAEgAAAACAAUAYCIAAPQPAAABAAAAAAAAAFQyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgCKAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyEwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnInAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcj8AAHBvEgAACm8TAAAKbxQAAAoNFhMGFxMHKBUA
AAoTCRIKGRYWFigWAAAKEgkRB2woFwAACigVAAAKKBgAAAosC3JVAABwcxkAAAp6BgcoGgAAChT+
BhsAAApzHAAACigBAAArKAIAACsTBREFKBsAAAoTCCgVAAAKEwsSCxEIKB8AAAoICSgaAAAKEwQR
CiggAAAKLDERBBMMFhMNKxURDBENmm8UAAAKKCEAAAoRDRdYEw0RDREMjmky4xEFCCgiAAAKFxMG
EQYtCiBg6gAAKCMAAAoRBjlP////3jITDgIoEAAACm8kAAAKFXIEAQBwcgYBAHARDm8lAAAKKCYA
AApyBAEAcBZvJwAACibeAAIoEAAAChZvKAAACioAAAEQAAAAAJgAs0sBMhEAAAEeAigpAAAKKh4C
KCoAAAoqrn4EAAAELR5yTAEAcNAEAAACKCsAAApvLAAACnMtAAAKgAQAAAR+BAAABCoafgUAAAQq
HgKABQAABCoafgYAAAQqHgIoLgAACioucwgAAAaABgAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAALAEAAAjfgAAHAUAAPAGAAAjU3RyaW5ncwAAAAAMDAAAwAEAACNVUwDM
DQAAEAAAACNHVUlEAAAA3A0AABgCAAAjQmxvYgAAAAAAAAACAAABVx2iCQkJAAAA+gEzABYAAAEA
AAAqAAAABQAAAAYAAAAJAAAAAQAAAC4AAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAABAAAAAQAA
AAYAAAABAAAAAgAAAAAAOgQBAAAAAAAGAMcCiQUGAFYDiQUGABMCdgUPAP0FAAAGAEAC/QQGAKoC
/QQGAIsC/QQGAD0D/QQGAOcC/QQGAAAD/QQGAFcC/QQGAHICpwMKABsD6QMKAIsB6QMGABABhQQG
AKkEhQQGAA8FhQQGAIwEhQQGAPYBdgUGAJ8GhQQGADsFqQUGABkF6AQOAL8BJAQOACcCJAQOAKcB
0wQGANsBiQUKABIE6QMSAD8GKgESANAAKgEGAOUGWAAGAAsBWAAGAEgAhQQWANkAKwUWAA8AKwUG
AAEAkgAaAAgBvQQGAK0AhAMKAEsF6QMGAMMDhQQGAEoBhQQGAOQAhQQGANMG/QQAAAAATwAAAAAA
AQABAAEAEACyBCQAOQABAAEAAAEAAHYGJABJAAEAAwAAABAAsAUMBlEABAADAAABEABdBgwGZQAG
AAcABgaBABwBVoBmBh8BVoBbAR8BEQCRBCMBEQB7AScBEQC0ACsBUCAAAAAAhgC4BAYAAQD4IQAA
AACGGGkFBgABAAAiAAAAAIMYaQUGAAEACCIAAAAAkwg3BS8BAQA0IgAAAACTCGMBNAEBADsiAAAA
AJMIbwE5AQEAQyIAAAAAlgimBj8BAgBKIgAAAACGGGkFBgACAFIiAAAAAJEYbwVEAQIAAAABAH4D
CQBpBQEAEQBpBQYAGQBpBQoAKQBpBRAAMQBpBRAAOQBpBRAAQQBpBRAASQBpBRAAUQBpBRAAWQBp
BRAAYQBpBRAAaQBpBQYAmQBpBQYAwQBpBRUA0QBpBQYAcQBuBjQA2QA7BjkA4QBiBD4A6QB0A0QA
oQDBA0gAeQDHBkwAgQBpBVEAeQBSBlkAeQCdBF8AiQBpBRAA8QBJBmcA+QAZAW4ADABpBX0ACQGV
A4MACQHBBqQAeQCWBrUAgQCdBLwA+QDUAcQAIQHcBskAKQElBc8A2QCEBtQAiQDEAEgAOQGPBtoA
MQFfBeAA2QCyBgEAcQBpBQYAoQBpBQYAQQH2AOkAQQHPBvIAqQBpBfgAyQBpBQYACAAIABIBCAAM
ABcBKQBzAH8BLgALAFcBLgATAGABLgAbAH8BLgAjAIgBLgArALEBLgAzALEBLgA7ALEBLgBDAIgB
LgBLALcBLgBTALEBLgBbAM4BQwBjABcBSQBzAH8BgwBrABcBwQB7ABcBGwAEAAEABQADAAAAOwVI
AQAAgwFNAQAAqgZSAQIABAADAAIABQAFAAEABgAFAAIABwAHAHQABIAAAAEAAAC4IYUJAAAAAAAA
JAAAAAQAAAAAAAAAAAAAAAABiQAAAAAAEAAAAAAAAAAAAAAACQHKAwAAAAAEAAAAAAAAAAAAAAAA
AYUEAAAAABAAAAAAAAAAAAAAAAkBYgAAAAAABAAAAAAAAAAAAAAAAAFPAQAAAAAEAAAAAAAAAAAA
AAAAAWsEAAAAAAAAAAABAAAAugUAADsAngA9ALEAAAAAAABJRW51bWVyYWJsZWAxAElPcmRlcmVk
RW51bWVyYWJsZWAxAFNUX2E0NTQ0YWFmYjhjYTQxMjg4MDNmNjVhOGY1OGNkMGUxAEZ1bmNgMgA8
TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18A
bXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAVGhyZWFkAGRlZmF1bHRJbnN0YW5j
ZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBFbnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAFppcEZpbGUARGF0ZVRpbWUAR2V0TGFzdFdyaXRlVGltZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0ZQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVn
Z2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmli
dXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmli
dXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAT3JkZXJCeURlc2NlbmRpbmcA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYTQ1NDRhYWZiOGNhNDEyODgwM2Y2
NWE4ZjU4Y2QwZTEuZGxsAGdldF9JdGVtAFN5c3RlbS5JTy5Db21wcmVzc2lvbi5GaWxlU3lzdGVt
AEVudW0AcmVzb3VyY2VNYW4Ab3BfTGVzc1RoYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
SU8uQ29tcHJlc3Npb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24A
U3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAFN5c3RlbS5MaW5x
AGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfYTQ1NDRhYWZiOGNhNDEyODgwM2Y2NWE4ZjU4Y2QwZTEuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E0NTQ0YWFmYjhj
YTQxMjg4MDNmNjVhOGY1OGNkMGUxLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBB
ZGRNaW51dGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVu
dHMAQ29uY2F0AFN1YnRyYWN0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABGaXJz
dABnZXRfTm93AGdldF9Bc3NlbWJseQBFeHRyYWN0VG9EaXJlY3RvcnkAAAARRgBpAGwAZQBQAGEA
dABoAAATWgBpAHAARgBpAGwAdABlAHIAABdFAHgAdAByAGEAYwB0AFAAYQB0AGgAABVYAEwAUwBY
AEYAaQBsAHQAZQByAACArW4AbwAgAGYAaQBsAGUAIABmAGkAdAB0AGkAbgBnACAAdABoAGUAIAB0
AGkAbQBlACAAYwByAGkAdABlAHIAaQBhACAAdwBlAHIAZQAgAGYAbwB1AG4AZAAuACAAUABhAGMA
awBhAGcAZQAgAHQAaQBtAGUAbwB1AHQAIABsAGkAbQBpAHQAIABoAGEAcwAgAGIAZQBlAG4AIABl
AHgAYwBlAGUAZABlAGQALgAAAQBFRQByAHIAbwByACAAcwBlAGEAcgBjAGgAaQBuAGcAIABmAG8A
cgAgAG4AZQB3AGUAcwB0ACAAZgBpAGwAZQAgAC0AIAABcVMAVABfAGEANAA1ADQANABhAGEAZgBi
ADgAYwBhADQAMQAyADgAOAAwADMAZgA2ADUAYQA4AGYANQA4AGMAZAAwAGUAMQAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAl2puV/4dXSbzP0ZvmU5znAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFdGAcPDg4ODh0ODgIIET0RPRFBET0dDggSRQQgABJtBCAAEnEF
IAESdRwDIAAcAyAADgQAABE9ByAEAQgICAgFIAERPQ0HAAICET0RPQYAAh0ODg4FAAERPQ4IFRKA
gQIOET0FIAIBHBgaEAICFRKAiQEeABUSgI0BHgAVEoCBAh4AHgEFCgIOET0MEAEBHgAVEoCNAR4A
AwoBDgYgARFBET0HAAICEUERQQQAAQEOBQACAQ4OBAABAQgFIAASgJkFAAIODg4IIAUCCA4ODggI
AAESgKERgKUFIAASgKkHIAIBDhKAqQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAACBggDBhEM
AwYSVQMGElkDBhIUBAAAElUEAAASWQUAAQESWQQAABIUAwAAAQQIABJVBAgAElkECAASFAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYTQ1NDRh
YWZiOGNhNDEyODgwM2Y2NWE4ZjU4Y2QwZTEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3Vy
Y2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNv
dXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAANDMAAAAAAAAAAAAATjMAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAEAzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAhQm4IQAAAQCFCbghPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBhADQANQA0ADQAYQBhAGYAYgA4AGMAYQA0ADEAMgA4ADgAMAAzAGYANgA1AGEAOABm
ADUAOABjAGQAMABlADEAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OAA2ADMAMgAuADIANAAzADcAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGEANAA1ADQANABhAGEAZgBiADgAYwBhADQAMQAyADgAOAAwADMAZgA2ADUAYQA4AGYANQA4AGMA
ZAAwAGUAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AYQA0ADUANAA0AGEAYQBmAGIAOABjAGEANAAxADIAOAA4ADAAMwBmADYANQBhADgA
ZgA1ADgAYwBkADAAZQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGEANAA1ADQANABhAGEAZgBiADgAYwBhADQAMQAyADgAOAAwADMAZgA2ADUAYQA4AGYA
NQA4AGMAZAAwAGUAMQAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAA2ADMAMgAuADIANAAzADcAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA4ADYAMwAyAC4AMgA0ADMANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAYDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load data from Excel to Database"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8D5D572A-04C9-4FB0-9A75-1F6C3504BADD}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load data from Excel to Database">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\DeleteOldFilesAndRenameNewFIle"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{DFD545F4-598A-4944-8015-54CCA28A049E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="DeleteOldFilesAndRenameNewFIle"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_c75cb8bf7a354e5e801d9d5fdf5702b1"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::CopyPath,User::XLSXFilter">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties.Settings.get_Default():ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties.Sett" +
    "ings")]

namespace ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.IO.Compression;
using System.Linq;
using Microsoft.VisualBasic;

#endregion

namespace ST_c75cb8bf7a354e5e801d9d5fdf5702b1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Written in C# by Jose Espinosa-Tello 8/18/2023

            /* This script task is used to loops through all files in the CopyPath directory and select the newest file.
             Once the newest file is selected all files older that the newest file will be deleted.
            The newest files name will then be compared to the name required by the excelSource dataflow tast.
            If the name does not match the newest file will be copied to the same directory with the correct name. 
            Once the copy is complete the file with the incorrect name will be deleted.
            */
            
            
            // TODO: Add your code here

            // TODO: Add your code here


            // CopyPath is the \\LoadFilePath directory/folder.
            String copyPath = Dts.Variables["CopyPath"].Value.ToString();
            // XLSXFilter is the *xlsx file name used to search for xlsx files.
            String xlsxFilter = Dts.Variables["XLSXFilter"].Value.ToString();
            //Name of file used by excel source. Excel source in dataflow task will not work without correct name.
            String excelSourceName = "\\new_customer_data.xlsx";

            String[] xlsxFiles;
            String newestFile;
            Boolean filesFound = false;
            int timeOutValue = 1;

            DateTime fileChangeDt;
            DateTime startTime = DateTime.Now;
            TimeSpan fileAge;
            TimeSpan newestAge = new TimeSpan(3, 0, 0, 0);
            Object shObj = Activator.CreateInstance(Type.GetTypeFromProgID("Shell.Application"));




            try
            {
                do
                {
                    //Start 1 min timer
                    if (startTime.AddMinutes(timeOutValue) < DateTime.Now)
                    {
                        throw new Exception("no file fitting the time criteria were found. Package timeout limit has been exceeded.");
                    }
                    // find the newest .zip file in the directory/folder.
                    newestFile = Directory.GetFiles(copyPath, xlsxFilter).OrderByDescending(File.GetLastWriteTime).First();

                    //instantiate writetime of newest file to variables.
                    fileChangeDt = File.GetLastWriteTime(newestFile);

                    DateTime currentTime = DateTime.Now;

                    fileAge = currentTime - fileChangeDt;

                    //instantiate xlsxFiles array with all the extract path .xlsx files.
                    xlsxFiles = Directory.GetFiles(copyPath, xlsxFilter);

                    //compare the newest file age with the desired search file age.
                    if (fileAge < newestAge)
                    {
                        //if the is more than one file in the array we will start the comparison of age and delete process.
                        if (xlsxFiles.Length > 1)
                        {


                            
                            //foreach loop will look through the.xlsx files.
                            foreach (var item in xlsxFiles)
                            {
                                //create variable that hold current item write time.
                                DateTime itemFileChangeDt = File.GetLastWriteTime(item);

                                //Determine the file age by subtracting item write time from time when program started.
                                TimeSpan itemFileAge = currentTime - itemFileChangeDt;

                                //If the item age is not equal to the newest file age we will delete that file.
                                if (itemFileAge != fileAge)
                                {
                                    File.Delete(item.ToString());

                                }

                            }
                        }
                    
                        //We will create a variable and hold information for the copy we may need to make.
                        //this will ensure we do not delete the newest file unless absolutly needed if it has the wrong name.
                        int copyLength = copyPath.Length;

                        //Pull the total number of letters from newst file.
                        int cNameLength = newestFile.Length;

                        //Create a new string to use as the copy name.
                        //Subtring takes desired string from newestFile based on parameters.
                        //extractLength is the length of the folder path, the end of the path will be the starting point.
                        //Subtract the length of newestFile(cNameLength) from copyLength, this will leave only the length of the name of the file.
                        //With both inputs Substring will start extracting the desired string at the end of copy file path
                        //and gather only the name of file by using the length determined by subtracting files.
                        string copyName = newestFile.Substring(copyLength, (cNameLength - copyLength));

                                           
                        //If name of the newest file we want to copy does not match the excelSource required name we will replace the file.
                        if (copyName != excelSourceName)
                        {
                            //Copy the newest file with a new name, the name required by the excel source.
                            File.Copy(newestFile, copyPath + excelSourceName);



                            //Delete the old file with the wrong name.
                            File.Delete(newestFile);

                            
                        }


                        //set filesFound to true; this will end the Do While loop.
                        filesFound = true;

                    }
                    //if no files match criteris the program will delay for 1 min.
                    //this will allow the startTime timer to fail and catch the error.
                    if (filesFound != true)
                    {
                        System.Threading.Thread.Sleep(60000);
                    }
                }

                // If true this will end the Do While loop.
                while (filesFound == false);


            }


            catch (Exception ex)
            {
                Dts.Events.FireError(-1, "", "Error searching for newest file - " + ex.Message, "", 0);
            }


            Dts.TaskResult = (int)ScriptResults.Success;

        }



        

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c75cb8bf7a354e5e801d9d5fdf5702b1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c75cb8bf7a354e5e801d9d5fdf5702b1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c75cb8bf7a354e5e801d9d5fdf5702b1</msb:DisplayName>
    <msb:ProjectId>{49E96BF2-5FF0-4DB5-A990-A1ED3901A671}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c75cb8bf7a354e5e801d9d5fdf5702b1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c75cb8bf7a354e5e801d9d5fdf5702b1")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E675B001-651E-4DB3-9097-EC598E7D216F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c75cb8bf7a354e5e801d9d5fdf5702b1</RootNamespace>
    <AssemblyName>ST_c75cb8bf7a354e5e801d9d5fdf5702b1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_c75cb8bf7a354e5e801d9d5fdf5702b1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAO+t4WQAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAHjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwzAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
NAAAAAAAAEgAAAACAAUAoCIAAHQQAAABAAAAAAAAABQzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgC+AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyEwAAcG8SAAAKbxMAAApvFAAACgtyKQAAcAwWEwUXEwYoFQAA
ChMIEgoZFhYWKBYAAApyWQAAcCgXAAAKKBgAAAomEggRBmwoGQAACigVAAAKKBoAAAosC3J9AABw
cxsAAAp6BgcoHAAAChT+Bh0AAApzHgAACigBAAArKAIAACsTBBEEKB0AAAoTBygVAAAKEwsRCxEH
KCEAAAoTCQYHKBwAAAoNEQkRCigiAAAKOYkAAAAJjmkXMUQJEw4WEw8rNBEOEQ+aExARECgdAAAK
ExERCxERKCEAAAoRCSgjAAAKLAwREG8UAAAKKCQAAAoRDxdYEw8RDxEOjmkyxAZvJQAAChMMEQRv
JQAAChMNEQQRDBENEQxZbyYAAAoIKCcAAAosFREEBggoKAAACigpAAAKEQQoJAAAChcTBREFLQog
YOoAACgqAAAKEQU58f7//94yExICKBAAAApvKwAAChVyLAEAcHIuAQBwERJvLAAACigoAAAKciwB
AHAWby0AAAom3gACKBAAAAoWby4AAAoqAABBHAAAAAAAAG4AAAARAQAAfwEAADIAAAARAAABHgIo
LwAACioeAigwAAAKKq5+AQAABC0ecnQBAHDQAwAAAigxAAAKbzIAAApzMwAACoABAAAEfgEAAAQq
Gn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKDQAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAM
AAAAdjQuMC4zMDMxOQAAAAAFAGwAAADIBAAAI34AADQFAAAMBwAAI1N0cmluZ3MAAAAAQAwAAOgB
AAAjVVMAKA4AABAAAAAjR1VJRAAAADgOAAA8AgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoB
MwAWAAABAAAAKgAAAAUAAAAGAAAACQAAAAEAAAA0AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAA
AQAAAAEAAAAFAAAAAQAAAAEAAAACAAAAAABtBAEAAAAAAAYA5QKlBQYAdAOlBQYAMQKSBQ8AGQYA
AAYAXgIPBQYAyAIPBQYAqQIPBQYAWwMPBQYABQMPBQYAHgMPBQYAdQIPBQYAkALFAwoAOQMcBAoA
qQEcBAYALgGeBAYAwgSeBAYAIQWeBAYApQSeBAYAFAKSBQYAsgaeBAYATQXFBQYAKwXrBA4A3QFX
BA4ARQJXBA4AxQHWBAYA+QGlBQoARQQcBBIAWwZIARIA8QBIAQYAaAGeBAYAewWeBAYA9AZqAAYA
KQFqAAYASACeBBYA+gA9BRYADwA9BQYAAQCkAAYA4QOeBAYAvwCiAwoAXQUcBAYABQGeBAYA5gYP
BQAAAABPAAAAAAABAAEAAQAQAMsEJAA5AAEAAQAAABAAzAUoBlEAAQADAAABEAB5BigGZQADAAcA
AwEAAJIGAABJAAQACgARAKoEPwERAJkBQwERANUARwEGBpMASwFWgIIGTgFWgHkBTgFQIAAAAACG
ANEEBgABADgiAAAAAIYYhQUGAAEAQCIAAAAAgxiFBQYAAQBIIgAAAACTCEkFUgEBAHQiAAAAAJMI
gQFXAQEAeyIAAAAAkwiNAVwBAQCDIgAAAACWCLkGYgECAIoiAAAAAIYYhQUGAAIAkiIAAAAAkRiL
BWcBAgAAAAEAnAMJAIUFAQARAIUFBgAZAIUFCgApAIUFEAAxAIUFEAA5AIUFEABBAIUFEABJAIUF
EABRAIUFEABZAIUFEABhAIUFEABpAIUFBgCZAIUFBgDBAIUFFQDRAIUFBgBxAIoGOgDZAFcGPwDh
AJUERADpAJIDSgChAN8DTgB5ANoGUgCBAIUFVwDxAFgAXwD5AMYAZQB5AG4GawB5ALYEcQCJAIUF
EAABAWUGeQAJATcBgAAMAIUFjwAZAbMDlQAZAdQGtgB5AAAFxwCBALYE0ACBAP4G0AAJAfIB2AAx
AfID3QAxAegD4QAxAf4G5wAxAasG7QAJAe8G8wA5ATcF+QDZAKAG/gCJAOUATgBBAXEFBAHZAMUG
AQBxAIUFBgChAIUFBgDxABcBDQHxAOIGFQGpAIUFGwHJAIUFBgAIABQANQEIABgAOgEpAHMAogEu
AAsAegEuABMAgwEuABsAogEuACMAqwEuACsA1AEuADMA1AEuADsA1AEuAEMAqwEuAEsA2gEuAFMA
1AEuAFsA8QFDAGMAOgFJAHMAogFhAHsAOgFjAGsAOgEbAAMAAQAEAAMAAABNBWsBAAChAXABAAC9
BnUBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAhgAEgAAAAQAAALghDwgAAAAAAAAkAAAABAAAAAAA
AAAAAAAAIwGbAAAAAAAQAAAAAAAAAAAAAAAsAf0DAAAAAAQAAAAAAAAAAAAAACMBngQAAAAAEAAA
AAAAAAAAAAAALAF0AAAAAAAEAAAAAAAAAAAAAAAjAW0BAAAAAAAAAAABAAAA1gUAAAUAAgA/ALAA
QQDDAAAAAAAASUVudW1lcmFibGVgMQBJT3JkZXJlZEVudW1lcmFibGVgMQBTVF9jNzVjYjhiZjdh
MzU0ZTVlODAxZDlkNWZkZjU3MDJiMQBGdW5jYDIAPE1vZHVsZT4AR2V0VHlwZUZyb21Qcm9nSUQA
U3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGli
AFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFRocmVhZABDcmVhdGVJbnN0YW5jZQBkZWZhdWx0
SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAERhdGVUaW1lAEdldExhc3RXcml0ZVRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uVGhyZWFkaW5nAE9yZGVyQnlEZXNjZW5k
aW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAU3Vic3RyaW5nAGdldF9MZW5n
dGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUX2M3NWNiOGJmN2EzNTRlNWU4MDFkOWQ1ZmRmNTcwMmIxLmRsbABnZXRfSXRlbQBTeXN0ZW0A
RW51bQByZXNvdXJjZU1hbgBvcF9MZXNzVGhhbgBUaW1lU3BhbgBTY3JpcHRNYWluAFN5c3RlbS5D
b25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBTbGVlcABTeXN0ZW0uTGlucQBnZXRfUmVz
b3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAEFjdGl2YXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTVF9jNzVjYjhiZjdhMzU0ZTVlODAxZDlkNWZkZjU3MDJiMS5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYzc1Y2I4YmY3
YTM1NGU1ZTgwMWQ5ZDVmZGY1NzAyYjEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVz
AEFkZE1pbnV0ZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2
ZW50cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AEZpcnN0AGdldF9O
b3cAZ2V0X0Fzc2VtYmx5AENvcHkARGlyZWN0b3J5AG9wX0luZXF1YWxpdHkAABFDAG8AcAB5AFAA
YQB0AGgAABVYAEwAUwBYAEYAaQBsAHQAZQByAAAvXABuAGUAdwBfAGMAdQBzAHQAbwBtAGUAcgBf
AGQAYQB0AGEALgB4AGwAcwB4AAAjUwBoAGUAbABsAC4AQQBwAHAAbABpAGMAYQB0AGkAbwBuAACA
rW4AbwAgAGYAaQBsAGUAIABmAGkAdAB0AGkAbgBnACAAdABoAGUAIAB0AGkAbQBlACAAYwByAGkA
dABlAHIAaQBhACAAdwBlAHIAZQAgAGYAbwB1AG4AZAAuACAAUABhAGMAawBhAGcAZQAgAHQAaQBt
AGUAbwB1AHQAIABsAGkAbQBpAHQAIABoAGEAcwAgAGIAZQBlAG4AIABlAHgAYwBlAGUAZABlAGQA
LgAAAQBFRQByAHIAbwByACAAcwBlAGEAcgBjAGgAaQBuAGcAIABmAG8AcgAgAG4AZQB3AGUAcwB0
ACAAZgBpAGwAZQAgAC0AIAABcVMAVABfAGMANwA1AGMAYgA4AGIAZgA3AGEAMwA1ADQAZQA1AGUA
OAAwADEAZAA5AGQANQBmAGQAZgA1ADcAMAAyAGIAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAABDztuAxXWOQLtwLVZdBVuEAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFdHgcTDg4OHQ4OAggRPRE9EUERQRE9CAgdDggOET0SRQQgABJtBCAAEnEFIAESdRwDIAAc
AyAADgQAABE9ByAEAQgICAgFAAESeQ4FAAEcEnkFIAERPQ0HAAICET0RPQYAAh0ODg4FAAERPQ4I
FRKAiQIOET0FIAIBHBgaEAICFRKAkQEeABUSgJUBHgAVEoCJAh4AHgEFCgIOET0MEAEBHgAVEoCV
AR4AAwoBDggAAhFBET0RPQcAAgIRQRFBBAABAQ4DIAAIBSACDggIBQACAg4OBQACDg4OBQACAQ4O
BAABAQgFIAASgKEIIAUCCA4ODggHAAESeRGApQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2A
gMyRBAAAAAAEAQAAAAMGElUDBhJZAwYSEAIGCAMGERQEAAASVQQAABJZBQABARJZBAAAEhADAAAB
BAgAElUECAASWQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF9jNzVjYjhiZjdhMzU0ZTVlODAxZDlkNWZkZjU3MDJiMQAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9DMAAAAA
AAAAAAAADjQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAPCLghAAABAA8IuCE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGMANwA1AGMAYgA4AGIAZgA3AGEAMwA1ADQAZQA1AGUAOAAwADEAZAA5AGQANQBmAGQA
ZgA1ADcAMAAyAGIAMQAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADYAMwAyAC4AMgAwADYAMwAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
YwA3ADUAYwBiADgAYgBmADcAYQAzADUANABlADUAZQA4ADAAMQBkADkAZAA1AGYAZABmADUANwAw
ADIAYgAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBjADcANQBjAGIAOABiAGYANwBhADMANQA0AGUANQBlADgAMAAxAGQAOQBkADUAZgBk
AGYANQA3ADAAMgBiADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AYwA3ADUAYwBiADgAYgBmADcAYQAzADUANABlADUAZQA4ADAAMQBkADkAZAA1AGYAZABm
ADUANwAwADIAYgAxAAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA4ADYAMwAyAC4AMgAwADYAMwAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADgANgAzADIALgAyADAANgAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAgNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\Load Address"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{71A4D590-9578-4602-9288-EA036A83324E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Address"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load data from Excel to Database\Load Address\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="r8"
                          cachedName="AddressID"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AddressLine1"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AddressLine2"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[City]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="City"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[StateProvidence]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="StateProvidence"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[CountryRegion]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CountryRegion"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[PostalCode]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="PostalCode"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="39"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          name="Copy of AddressLine1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="22"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          name="Copy of AddressLine2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="17"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          name="Copy of City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvidence]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="16"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvidence]"
                          name="Copy of StateProvidence"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="14"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          name="Copy of CountryRegion"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          name="Copy of PostalCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Address\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">new_customer_data$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Address\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="{75E8ABF6-46A0-41A0-9A4E-8E82FC26D65B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]"
                          name="AddressLine1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]"
                          name="AddressLine2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]"
                          name="StateProvidence"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]"
                          name="CountryRegion"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]"
                          name="PostalCode"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          dataType="r8"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          dataType="r8"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          name="StateProvidence" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine1]"
                          name="AddressLine1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine2]"
                          name="AddressLine2" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[City]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[StateProvidence]"
                          name="StateProvidence" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[CountryRegion]"
                          name="CountryRegion" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[PostalCode]"
                          name="PostalCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Address]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="i4"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressLine1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="39"
                          cachedName="Copy of AddressLine1"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine1]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressLine2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="Copy of AddressLine2"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine2]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="17"
                          cachedName="Copy of City"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of StateProvidence]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="16"
                          cachedName="Copy of StateProvidence"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvidence]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CountryRegion]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="14"
                          cachedName="Copy of CountryRegion"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of PostalCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Copy of PostalCode"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostalCode]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          length="39"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="17"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          name="StateProvince" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          length="14"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ROW_INSRT_DT]"
                          dataType="dbDate"
                          name="ROW_INSRT_DT" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load data from Excel to Database\Load Address.Paths[Data Conversion Output]"
                  endId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load data from Excel to Database\Load Address.Paths[Excel Source Output]"
                  endId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\Load Customer"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{700b7762-4b03-429f-99f7-72e0409e684e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Customer"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="r8"
                          cachedName="CustomerID"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[NameStyle]"
                          cachedDataType="r8"
                          cachedName="NameStyle"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[FirstName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FirstName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[MiddleName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MiddleName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[LastName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[Suffix]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Suffix"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[CompanyName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CompanyName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[SalesPerson]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SalesPerson"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[EmailAddress]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="EmailAddress"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[Phone]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Phone"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          dataType="i1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          name="Copy of NameStyle"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          name="Copy of Title"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="24"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          name="Copy of FirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="20"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          name="Copy of MiddleName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="22"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          name="Copy of LastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="22"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          name="Copy of Suffix"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="41"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          name="Copy of CompanyName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="24"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          name="Copy of SalesPerson"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="43"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          name="Copy of EmailAddress"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="19"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          name="Copy of Phone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">new_customer_data$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="{75E8ABF6-46A0-41A0-9A4E-8E82FC26D65B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]"
                          name="NameStyle"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                          name="Title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]"
                          name="MiddleName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]"
                          name="Suffix"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]"
                          name="CompanyName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]"
                          name="SalesPerson"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]"
                          name="EmailAddress"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]"
                          name="Phone"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          dataType="r8"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          dataType="r8"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          name="StateProvidence" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[NameStyle]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[NameStyle]"
                          name="NameStyle" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[FirstName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[LastName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Suffix]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Suffix]"
                          name="Suffix" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CompanyName]"
                          name="CompanyName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[SalesPerson]"
                          name="SalesPerson" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[EmailAddress]"
                          name="EmailAddress" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Phone]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Customer]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="i8"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of NameStyle]"
                          cachedDataType="i1"
                          cachedName="Copy of NameStyle"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NameStyle]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Title]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="Copy of Title"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="Copy of FirstName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="Copy of MiddleName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="Copy of LastName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Suffix]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="Copy of Suffix"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suffix]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CompanyName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="41"
                          cachedName="Copy of CompanyName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CompanyName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of SalesPerson]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="Copy of SalesPerson"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesPerson]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of EmailAddress]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="43"
                          cachedName="Copy of EmailAddress"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmailAddress]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="19"
                          cachedName="Copy of Phone"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NameStyle]"
                          dataType="bool"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          length="41"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          length="43"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="19"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ROW_INSRT_DT]"
                          dataType="dbDate"
                          name="ROW_INSRT_DT" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load data from Excel to Database\Load Customer.Paths[Data Conversion Output]"
                  endId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load data from Excel to Database\Load Customer.Paths[Excel Source Output]"
                  endId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\Load Customer Address"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{7CBD4389-3CE5-455B-8887-6478140EFEDE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Customer Address"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="r8"
                          cachedName="CustomerID"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="r8"
                          cachedName="AddressID"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AddressType"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="11"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          name="Copy of AddressType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">new_customer_data$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="{75E8ABF6-46A0-41A0-9A4E-8E82FC26D65B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]"
                          name="AddressType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          dataType="r8"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          dataType="r8"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          name="StateProvidence" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressType]"
                          name="AddressType" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[CustomerAddress]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="i4"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="i4"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="Copy of AddressType"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressType]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="AddressType" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ROW_INSRT_DT]"
                          dataType="dbDate"
                          name="ROW_INSRT_DT" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load data from Excel to Database\Load Customer Address.Paths[Data Conversion Output]"
                  endId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load data from Excel to Database\Load Customer Address.Paths[Excel Source Output]"
                  endId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CA92A6B5-93C1-4F4C-81CB-DFD36307274A}"
          DTS:From="Package\Load data from Excel to Database\Load Customer"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Load data from Excel to Database\Load Address" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{C859FBB9-746F-4E9C-B3CE-8852DD6F95FE}"
          DTS:From="Package\Load data from Excel to Database\Load Address"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load data from Excel to Database\Load Customer Address" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{77768F86-17D8-4C30-8D58-2A0A22FF6C82}"
          DTS:From="Package\Load data from Excel to Database\DeleteOldFilesAndRenameNewFIle"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Load data from Excel to Database\Load Customer" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ResetFile"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7967D007-CF4A-41C6-AB68-B7D844111EE3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ResetFile"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_68fa34fe89f04c25a59e11ff28f51a8a"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::ClearReportsPath,User::ReportArchivePath,User::ReportPath">
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Written by Jose Espinosa-Tello 8/15/2023.
        'The "Export Data to Excel File" data flow task requires a clean excel file to run.
        'This script will copy a clean file from folder \ClearReports (clearReportsPath) and replace the existing used excel file in the \excelDestination folder.
        'The final file shouldve been archived in the previous script
        '


        '\excelDestination
        Dim reportPath As String = CType(Dts.Variables("ReportPath").Value, String)
        '\ArchivedExcelFile
        Dim reportArchivePath As String = CType(Dts.Variables("ReportArchivePath").Value, String)
        '\ClearReports
        Dim clearReportsPath As String = CType(Dts.Variables("ClearReportsPath").Value, String)

        Dim fileName As String = "\RecentlyLoaded.xlsx"

        Try

            'Copy clean RecentlyLoaded excel sheet to report path overwritten the existing file that contains data.
            My.Computer.FileSystem.CopyFile(clearReportsPath & fileName, reportPath & fileName, True)

        Catch ex As System.IO.FileNotFoundException
            Dts.Events.FireError(-1, "", "File not found - " + ex.Message, "", 0)

        Catch ex As IOException
            Dts.Events.FireError(-1, "", "Attempting to copy reset file - " + ex.Message, "", 0)


        End Try
        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="ST_68fa34fe89f04c25a59e11ff28f51a8a.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5E7A4D25-EC07-4364-BF71-7FF30F1AD0F9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_68fa34fe89f04c25a59e11ff28f51a8a</RootNamespace>
    <AssemblyName>ST_68fa34fe89f04c25a59e11ff28f51a8a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_68fa34fe89f04c25a59e11ff28f51a8a")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_68fa34fe89f04c25a59e11ff28f51a8a")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("57a60804-2194-4cc9-865a-eb3d352f58ff")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_68fa34fe89f04c25a59e11ff28f51a8a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_68fa34fe89f04c25a59e11ff28f51a8a</msb:DisplayName>
    <msb:ProjectId>{AC43EE3E-9204-4117-9125-C44271D8B4C8}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_68fa34fe89f04c25a59e11ff28f51a8a.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_68fa34fe89f04c25a59e11ff28f51a8a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANWt4WQAAAAAAAAAAOAAIiALAVAAABwAAAAIAAAAAAAAhjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQ7AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
OwAAAAAAAEgAAAACAAUAUCMAACwXAAABAAAAAAAAAHw6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswBgALAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySQAAcG8tAAAKby4AAAooLwAACiYC
KCsAAApvLAAACnJtAABwby0AAApvLgAACigvAAAKC3KPAABwDCgEAAAGbzAAAAoHCCgxAAAKBggo
MQAAChdvMgAACt54JSgzAAAKDQIoKwAACm80AAAKFXK5AABwcrsAAHAJbzUAAAooMQAACnK5AABw
Fm82AAAKJig3AAAK3j0lKDMAAAoTBAIoKwAACm80AAAKFXK5AABwct8AAHARBG84AAAKKDEAAApy
uQAAcBZvNgAACiYoNwAACt4AAigrAAAKFm85AAAKKgABHAAAAABmACCGADslAAABAABmACDBAD0m
AAABNgIDKCYAAAooOgAACioeAig7AAAKKi7QCAAAAigjAAAKKh4CKDwAAAoqAAATMAEAFAAAAAIA
ABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMwAgAoAAAAAwAAEQJ7PgAACm8/AAAK
CgaMCAAAGy0SKAIAACsKAns+AAAKBm9AAAAKBipKAigiAAAKAnNBAAAKfT4AAAoqAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABwIAAAjfgAAiAgAANgJAAAjU3RyaW5ncwAAAABg
EgAAJAEAACNVUwCEEwAAEAAAACNHVUlEAAAAlBMAAJgDAAAjQmxvYgAAAAAAAAACAAABVx2iCQkP
AAAA+gEzABYAAAEAAAA2AAAACgAAAAwAAAAZAAAABAAAAEEAAAACAAAANwAAAAMAAAAEAAAACAAA
AAkAAAAIAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAABBBQEAAAAAAAYAgAMeCAYAJQQeCAYA
VwJfBw8A5QgAAAYAmAL2BQYAYwP2BQYADAT2BQYAoAP2BQYAuQP2BQYA3wL2BQYA1AN6BQYAhALY
BwYAAALYBwYAKwP2BQYA+gJ/BAoAIwKqBgoA6wErBQoAawIrBQ4AwwGuBw4AAwdyBwYAEwNfBw4A
rwL3Bw4AxwLHAAYAZQl6BQ4A2gauBw4ASAPHAAYAdgF6BQ4AAQDvBAoADgKGBQYAmgZfCAYAKgbh
BQoA0wHMBQYAOgJfBxIA6gPGBBIApwHGBAYAogR6BQYAFAY0AAYACAY0AAYAgQV6BQYAJgF6BQYA
vwn2BQYAIAkeCAYAVwduBBIAGQXGBBYA+AhTARYAHQFTAQ4AFAn3Bw4A8gZyBw4AyAk+CAYAmwR6
BQ4AsgD3BwYAIAZ6BRIAwgbGBAYAQAd6BQAAAAArAAAAAAABAAEAAAAAAL4FlAlNAAEAAQAAAAAA
AQeUCVEAAQACAAABEABsCZQJYQABAAMAAAAAAKEIcAhhAAUACAAAARAAAgmOAIEABwAMAAEAAACj
BY4AjQAJAA8ABQEAAKAHAABhAAkAEQAFAQAAEAAAAGEACQAYAAIBAAA/CQAAnQAKABoAMQBfBjIB
MQA2BjoBMQBKBkIBMQB4BkoBEQAMB1IBEQCbAVYBEQBDBFoBEQBfCV4BIQCKCfAABgaGAGEBVoAv
CWQBVoB7AWQBUCAAAAAABhhKBwYAAQBYIAAAAAAGGEoHBgABAGAgAAAAABEYUAfEAAEAiiAAAAAA
EwjlBmgBAQCWIAAAAAATCK4FbQEBAKIgAAAAABMI1gZyAQEAriAAAAAAEwiQB3cBAQC6IAAAAAAD
GEoHBgABAMIgAAAAABYIlgZ8AQEA7iAAAAAAFgiDAYEBAQD1IAAAAAAWCI8BhgEBAP0gAAAAABEY
UAfEAAIADiEAAAAABhhKBwYAAgAYIQAAAAAWCEsEjAECAHQhAAAAAAYYSgcGAAIAfCEAAAAABgCp
BQYAAgCwIgAAAADGAg0JyAACAL4iAAAAAMYCBQHNAAMAxiIAAAAAgwBzAZEBAwDSIgAAAADGApkE
twADANwiAAAAABEAcwCWAQMA/CIAAAAAAQBfAJ4BBAC6IAAAAAAGGEoHBgAFAAgjAAAAAAMI7ABK
AAUAPCMAAAAABhhKBwYABQAAAAEAaAQAAAEANAYAAAEA/AAAAAEA/AAJAEoHAQARAEoHBgAZAEoH
CgApAEoHEAAxAEoHEAA5AEoHEABBAEoHEABJAEoHEABRAEoHEABZAEoHFQBhAEoHFQBpAEoHEABx
AEoHEAB5AEoHEACBAEoHGgCRAEoHIACpAEoHBgCxAEoHBgC5AEoHBgDRAEoHJgDpAEoHEAAJAUoH
BgARAUoHBgCZAEoHBgChAEoHBgAMAEoHBgAUAEoHBgAcAEoHBgAkAEoHBgAMAOwASgAUAOwASgAc
AOwASgAkAOwASgDBAEoHBgDZADgBTwDZALsJVwDxAEoHXQBRAV8EZQABAUoHBgBZAd8GagBZAXYJ
agAZAUoHBgAZATcJewBhAfQIgQBpAWkFhwBxAUsEjgB5AZkEkgCBAXIFlwCRAVgJnQCJAUoBowCZ
ATAHqgBhAU0JsQApAREBtwCpARQHuwCZAR4HxAChAREBtwBhAXsJAQDBAA0JyADBAAUBzQDBAJkE
twCxAd0A2QA0AIoJ8AA8AEsESgA8AFUEBwE8AEoHBgAIACwAKAEIADAALQEpAKsAUAMuAAsAzgEu
ABMA1wEuABsA9gEuACMA/wEuACsAKAIuADMAKAIuADsA/wEuAEMALgIuAEsAKAIuAFMARQIuAFsA
KAIuAGMASwIuAGsAdQIuAHMAggJAAIsALQFAAIMAzAJDAHsA1QJDAIMAzAJJAKsAYQNjAHsA1QJj
AIMAzAJpAKsAdQOAAIsALQGDAJMALQGDAJsALQGDAHsA1QKJAKsAggOgAIsALQGpAIMA9gHAAIsA
LQHJAIMA9gHgAIsALQHjALsALQHjAFMAKALpALMALQEDAYMAzAIDAaMA7gIjAYMAzAIjAVsAKAIg
AoMAzAIgAosALQFAAoMAzAJAAosALQFgAoMAzAJgAosALQGAAoMAzAKAAosALQGgAosALQHAAosA
LQHgAosALQHgAoMAzAIAA4sALQEgA4sALQEgA4MAzAJvANEA5AAEAAEABQAFAAYABwAJAAgAAAAD
B6YBAADABasBAADaBrABAACiB7UBAACaBroBAACfAb8BAABoBMQBAADwAMkBAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAOAA8AAgAYABEALgA1ADwAQwDWAOkA+AD/
AASAAAABAAAAAAAAAAAAAAAAAI4AAAAEAAAAAAAAAAAAAAANAb4AAAAAAAQAAAAAAAAAAAAAAA0B
egUAAAAACgAAAAAAAAAAAAAAFgHHAAAAAAAQAAAAAAAAAAAAAAAfAacEAAAAABAAAAAAAAAAAAAA
AB8BPgAAAAAAAAAAAAEAAACtCAAACAAEAAkABAAKAAcAAAAQABIAXQAAABAAKwBdAAAAAAAtAF0A
ewDfAHsAAgEAAABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQA8TW9k
dWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9f
SW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFsdWVfXwBTVF82OGZhMzRmZTg5ZjA0YzI1
YTU5ZTExZmYyOGY1MWE4YQBQcm9qZWN0RGF0YQBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hDb2RlAGdl
dF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENv
cHlGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2Rl
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBE
ZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAE15R3Jv
dXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZh
bHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBN
YXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVy
bmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF82OGZhMzRmZTg5
ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YS5kbGwAZ2V0X0l0ZW0AZ2V0X0ZpbGVTeXN0ZW0ARW51bQBT
eXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15
QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ASU9FeGNlcHRpb24ARmlsZU5vdEZvdW5kRXhjZXB0aW9uAEN1bHR1cmVJ
bmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9i
amVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfVXNl
cgBFbnRlcgBnZXRfQ29tcHV0ZXIAU2VydmVyQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEZp
cmVFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9y
AC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
RGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzY4ZmEzNGZlODlmMDRjMjVhNTllMTFmZjI4ZjUxYThhLk15LlJlc291cmNlcwBNeVJl
c291cmNlcwBTVF82OGZhMzRmZTg5ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YS5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAQ29u
dmVyc2lvbnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBDb25jYXQAbV9TeW5jT2JqZWN0AE15UHJvamVjdABFeGl0AHNldF9UYXNrUmVzdWx0
AG1fQ29udGV4dABTVF82OGZhMzRmZTg5ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YS5NeQBnZXRfQXNz
ZW1ibHkARmlsZVN5c3RlbVByb3h5AAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBl
AHMAbwB1AHIAYwBlAHMAABVSAGUAcABvAHIAdABQAGEAdABoAAAjUgBlAHAAbwByAHQAQQByAGMA
aABpAHYAZQBQAGEAdABoAAAhQwBsAGUAYQByAFIAZQBwAG8AcgB0AHMAUABhAHQAaAAAKVwAUgBl
AGMAZQBuAHQAbAB5AEwAbwBhAGQAZQBkAC4AeABsAHMAeAAAAQAjRgBpAGwAZQAgAG4AbwB0ACAA
ZgBvAHUAbgBkACAALQAgAAFBQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAGMAbwBwAHkAIABy
AGUAcwBlAHQAIABmAGkAbABlACAALQAgAAEAAABcVBrq7/4HSqMa/0M/DeUZAAQgAQEIAyAAAQUg
AQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAESZQYV
EiQBEiAEIAATAAcAARJtEYChBSAAEoClByACAQ4SgKUEAAEcHAQAAQEcCwcFDg4OEoCVEoCZBSAA
EoCxBSAAEoC1BiABEoC5HAMgABwEAAEOHAUgABKAxQUAAg4ODgYgAwEODgIGAAEBEoDRBSAAEoDV
AyAADgggBQIIDg4OCAMAAAEEIAECHAMgAAgEBwEeAAIeAAUQAQAeAAQKAR4ABAcBEwAGFRIkARMA
BwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9ffxHVCjoIiYRdzYCAzJEE
AAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiADBhJ5AwYSfQMGEhgCBhwC
BggDBhEoBAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQABARJ9BAAAEhgEIAASbQcQAQEe
AB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgAEn0ECAASGAQoABMACAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF82OGZhMzRm
ZTg5ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAAAF
AQABAAApAQAkNTdhNjA4MDQtMjE5NC00Y2M5LTg2NWEtZWIzZDM1MmY1OGZmAAAMAQAHMS4wLjAu
MAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRIuTkVUIEZyYW1ld29yayA0LjcIAQABAAAAAAAYAQAKTXlUZW1wbGF0ZQgxMS4wLjAuMAAAYQEA
NFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xpZW50UHJvdG9jb2wSQ3Jl
YXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQALTXkuQ29tcHV0ZXIAABMB
AA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJTZXJ2aWNlcwAAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAXDsAAAAAAAAAAAAAdjsAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGg7AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADYAOABmAGEAMwA0AGYAZQA4ADkAZgAwADQAYwAyADUAYQA1ADkAZQAxADEAZgBmADIAOABm
ADUAMQBhADgAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANgA4AGYAYQAzADQAZgBl
ADgAOQBmADAANABjADIANQBhADUAOQBlADEAMQBmAGYAMgA4AGYANQAxAGEAOABhAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA2ADgAZgBh
ADMANABmAGUAOAA5AGYAMAA0AGMAMgA1AGEANQA5AGUAMQAxAGYAZgAyADgAZgA1ADEAYQA4AGEA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANgA4AGYAYQAz
ADQAZgBlADgAOQBmADAANABjADIANQBhADUAOQBlADEAMQBmAGYAMgA4AGYANQAxAGEAOABhAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACIOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0452EA4D-91C1-4E4C-AA07-813F26041AB5}"
      DTS:From="Package\ExtractZipFile"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\CopyFIleToNewPath" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D4455320-5C3A-4E3D-B190-9445718AADFE}"
      DTS:From="Package\CopyFIleToNewPath"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load data from Excel to Database" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{5227E7F5-608A-420A-9A30-746DC8515235}"
      DTS:From="Package\Load data from Excel to Database"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Export Data to Excel File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{5F8312F6-3C38-4E96-AE82-77F4869BE50D}"
      DTS:From="Package\Export Data to Excel File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\ArchiveFile" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{7E6B127A-55B4-44B7-8C7B-3B88032E73DC}"
      DTS:From="Package\ArchiveFile"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\ResetFile" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="134,42"
          Id="Package\ArchiveFile"
          TopLeft="922,405" />
        <NodeLayout
          Size="181,42"
          Id="Package\CopyFIleToNewPath"
          TopLeft="30,95" />
        <NodeLayout
          Size="147,42"
          Id="Package\Export Data to Excel File\Load Address"
          TopLeft="116,101" />
        <NodeLayout
          Size="194,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress"
          TopLeft="154,176" />
        <NodeLayout
          Size="160,42"
          Id="Package\Export Data to Excel File\Load Customers"
          TopLeft="40,31" />
        <EdgeLayout
          Id="Package\Export Data to Excel File.PrecedenceConstraints[Constraint]"
          TopLeft="120,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73.5,28"
              Start="0,0"
              End="73.5,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="4,14" />
                  <mssgle:LineSegment
                    End="69.5,14" />
                  <mssgle:CubicBezierSegment
                    Point1="69.5,14"
                    Point2="73.5,14"
                    Point3="73.5,18" />
                  <mssgle:LineSegment
                    End="73.5,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Data to Excel File.PrecedenceConstraints[Constraint 1]"
          TopLeft="189.5,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.5,33"
              Start="0,0"
              End="61.5,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="4,16.5" />
                  <mssgle:LineSegment
                    End="57.5,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="57.5,16.5"
                    Point2="61.5,16.5"
                    Point3="61.5,20.5" />
                  <mssgle:LineSegment
                    End="61.5,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="354,258"
          Size="354,301"
          Id="Package\Export Data to Excel File"
          TopLeft="542,236" />
        <NodeLayout
          Size="146,42"
          Id="Package\ExtractZipFile"
          TopLeft="24,16" />
        <NodeLayout
          Size="253,42"
          Id="Package\Load data from Excel to Database\DeleteOldFilesAndRenameNewFIle"
          TopLeft="7,14" />
        <NodeLayout
          Size="147,42"
          Id="Package\Load data from Excel to Database\Load Address"
          TopLeft="158,151" />
        <NodeLayout
          Size="154,42"
          Id="Package\Load data from Excel to Database\Load Customer"
          TopLeft="76,82" />
        <NodeLayout
          Size="197,42"
          Id="Package\Load data from Excel to Database\Load Customer Address"
          TopLeft="240,222" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint]"
          TopLeft="153,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78.5,27"
              Start="0,0"
              End="78.5,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.5"
                    Point2="0,13.5"
                    Point3="4,13.5" />
                  <mssgle:LineSegment
                    End="74.5,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="74.5,13.5"
                    Point2="78.5,13.5"
                    Point3="78.5,17.5" />
                  <mssgle:LineSegment
                    End="78.5,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint 1]"
          TopLeft="231.5,193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107,29"
              Start="0,0"
              End="107,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5"
                    Point2="0,14.5"
                    Point3="4,14.5" />
                  <mssgle:LineSegment
                    End="103,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="103,14.5"
                    Point2="107,14.5"
                    Point3="107,18.5" />
                  <mssgle:LineSegment
                    End="107,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint 2]"
          TopLeft="133.5,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.5,26"
              Start="0,0"
              End="19.5,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9"
                    Point2="0,13"
                    Point3="4,13" />
                  <mssgle:LineSegment
                    End="15.5,13" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,13"
                    Point2="19.5,13"
                    Point3="19.5,17" />
                  <mssgle:LineSegment
                    End="19.5,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="449,319"
          Size="449,362"
          Id="Package\Load data from Excel to Database"
          TopLeft="54,171" />
        <NodeLayout
          Size="126,42"
          Id="Package\ResetFile"
          TopLeft="1010,479" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="97,58">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.5,37"
              Start="0,0"
              End="23.5,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5"
                    Point2="0,18.5"
                    Point3="4,18.5" />
                  <mssgle:LineSegment
                    End="19.5,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="19.5,18.5"
                    Point2="23.5,18.5"
                    Point3="23.5,22.5" />
                  <mssgle:LineSegment
                    End="23.5,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="120.5,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158,34"
              Start="0,0"
              End="158,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="4,17" />
                  <mssgle:LineSegment
                    End="154,17" />
                  <mssgle:CubicBezierSegment
                    Point1="154,17"
                    Point2="158,17"
                    Point3="158,21" />
                  <mssgle:LineSegment
                    End="158,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="503,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39,34.5"
              Start="0,0"
              End="31.5,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,0"
                    Point2="19.5,0"
                    Point3="19.5,4" />
                  <mssgle:LineSegment
                    End="19.5,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="19.5,30.5"
                    Point2="19.5,34.5"
                    Point3="23.5,34.5" />
                  <mssgle:LineSegment
                    End="31.5,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="896,386.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26,39.5"
              Start="0,0"
              End="18.5,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="9,0" />
                  <mssgle:CubicBezierSegment
                    Point1="9,0"
                    Point2="13,0"
                    Point3="13,4" />
                  <mssgle:LineSegment
                    End="13,35.5" />
                  <mssgle:CubicBezierSegment
                    Point1="13,35.5"
                    Point2="13,39.5"
                    Point3="17,39.5" />
                  <mssgle:LineSegment
                    End="18.5,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="989,447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="84,32"
              Start="0,0"
              End="84,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="80,16" />
                  <mssgle:CubicBezierSegment
                    Point1="80,16"
                    Point2="84,16"
                    Point3="84,20" />
                  <mssgle:LineSegment
                    End="84,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Export Data to Excel File\Load Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Export Data to Excel File\Load Address\OLE DB Source"
          TopLeft="106,56" />
        <NodeLayout
          Size="161,42"
          Id="Package\Export Data to Excel File\Load Address\Data Conversion"
          TopLeft="228,155" />
        <NodeLayout
          Size="164,42"
          Id="Package\Export Data to Excel File\Load Address\Excel Destination"
          TopLeft="372,256" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Address.Paths[OLE DB Source Output]"
          TopLeft="184.5,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124,57"
              Start="0,0"
              End="124,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5"
                    Point2="0,28.5"
                    Point3="4,28.5" />
                  <mssgle:LineSegment
                    End="120,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="120,28.5"
                    Point2="124,28.5"
                    Point3="124,32.5" />
                  <mssgle:LineSegment
                    End="124,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Address.Paths[Data Conversion Output]"
          TopLeft="308.5,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.5,59"
              Start="0,0"
              End="145.5,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="141.5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="141.5,29.5"
                    Point2="145.5,29.5"
                    Point3="145.5,33.5" />
                  <mssgle:LineSegment
                    End="145.5,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Address\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Address\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Data to Excel File\Load CustomerAddress">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination"
          TopLeft="395,314" />
        <NodeLayout
          Size="161,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion"
          TopLeft="256,194" />
        <NodeLayout
          Size="157,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source"
          TopLeft="100,63" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load CustomerAddress.Paths[OLE DB Source Output]"
          TopLeft="178.5,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158,89"
              Start="0,0"
              End="158,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.5"
                    Point2="0,44.5"
                    Point3="4,44.5" />
                  <mssgle:LineSegment
                    End="154,44.5" />
                  <mssgle:CubicBezierSegment
                    Point1="154,44.5"
                    Point2="158,44.5"
                    Point3="158,48.5" />
                  <mssgle:LineSegment
                    End="158,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load CustomerAddress.Paths[Data Conversion Output]"
          TopLeft="336.5,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.5,78"
              Start="0,0"
              End="140.5,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35"
                    Point2="0,39"
                    Point3="4,39" />
                  <mssgle:LineSegment
                    End="136.5,39" />
                  <mssgle:CubicBezierSegment
                    Point1="136.5,39"
                    Point2="140.5,39"
                    Point3="140.5,43" />
                  <mssgle:LineSegment
                    End="140.5,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Data to Excel File\Load Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Export Data to Excel File\Load Customers\OLE DB Source"
          TopLeft="62,41" />
        <NodeLayout
          Size="164,42"
          Id="Package\Export Data to Excel File\Load Customers\Excel Destination"
          TopLeft="300,200" />
        <NodeLayout
          Size="161,42"
          Id="Package\Export Data to Excel File\Load Customers\Data Conversion"
          TopLeft="160,123" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Customers.Paths[OLE DB Source Output]"
          TopLeft="140.5,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100,40"
              Start="0,0"
              End="100,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16"
                    Point2="0,20"
                    Point3="4,20" />
                  <mssgle:LineSegment
                    End="96,20" />
                  <mssgle:CubicBezierSegment
                    Point1="96,20"
                    Point2="100,20"
                    Point3="100,24" />
                  <mssgle:LineSegment
                    End="100,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Customers.Paths[Data Conversion Output]"
          TopLeft="240.5,165">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.5,35"
              Start="0,0"
              End="141.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="137.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="137.5,17.5"
                    Point2="141.5,17.5"
                    Point3="141.5,21.5" />
                  <mssgle:LineSegment
                    End="141.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Customers\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load data from Excel to Database\Load Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Load data from Excel to Database\Load Address\OLE DB Destination"
          TopLeft="238,264" />
        <NodeLayout
          Size="161,42"
          Id="Package\Load data from Excel to Database\Load Address\Data Conversion"
          TopLeft="140,172" />
        <NodeLayout
          Size="144,42"
          Id="Package\Load data from Excel to Database\Load Address\Excel Source"
          TopLeft="113,54" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Address.Paths[Excel Source Output]"
          TopLeft="185,96">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.5,76"
              Start="0,0"
              End="35.5,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34"
                    Point2="0,38"
                    Point3="4,38" />
                  <mssgle:LineSegment
                    End="31.5,38" />
                  <mssgle:CubicBezierSegment
                    Point1="31.5,38"
                    Point2="35.5,38"
                    Point3="35.5,42" />
                  <mssgle:LineSegment
                    End="35.5,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Address.Paths[Data Conversion Output]"
          TopLeft="220.5,214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106,50"
              Start="0,0"
              End="106,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="102,25" />
                  <mssgle:CubicBezierSegment
                    Point1="102,25"
                    Point2="106,25"
                    Point3="106,29" />
                  <mssgle:LineSegment
                    End="106,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Address\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Address\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load data from Excel to Database\Load Customer">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\Load data from Excel to Database\Load Customer\Excel Source"
          TopLeft="49,119" />
        <NodeLayout
          Size="161,42"
          Id="Package\Load data from Excel to Database\Load Customer\Data Conversion"
          TopLeft="135,250" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load data from Excel to Database\Load Customer\OLE DB Destination"
          TopLeft="294,338" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer.Paths[Data Conversion Output]"
          TopLeft="215.5,292">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="167,46"
              Start="0,0"
              End="167,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="4,23" />
                  <mssgle:LineSegment
                    End="163,23" />
                  <mssgle:CubicBezierSegment
                    Point1="163,23"
                    Point2="167,23"
                    Point3="167,27" />
                  <mssgle:LineSegment
                    End="167,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer.Paths[Excel Source Output]"
          TopLeft="121,161">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="94.5,89"
              Start="0,0"
              End="94.5,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.5"
                    Point2="0,44.5"
                    Point3="4,44.5" />
                  <mssgle:LineSegment
                    End="90.5,44.5" />
                  <mssgle:CubicBezierSegment
                    Point1="90.5,44.5"
                    Point2="94.5,44.5"
                    Point3="94.5,48.5" />
                  <mssgle:LineSegment
                    End="94.5,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load data from Excel to Database\Load Customer Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\Load data from Excel to Database\Load Customer Address\Excel Source"
          TopLeft="77,81" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination"
          TopLeft="278,270" />
        <NodeLayout
          Size="161,42"
          Id="Package\Load data from Excel to Database\Load Customer Address\Data Conversion"
          TopLeft="176,183" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer Address.Paths[Excel Source Output]"
          TopLeft="149,123">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.5,60"
              Start="0,0"
              End="107.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="103.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="103.5,30"
                    Point2="107.5,30"
                    Point3="107.5,34" />
                  <mssgle:LineSegment
                    End="107.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer Address.Paths[Data Conversion Output]"
          TopLeft="256.5,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110,45"
              Start="0,0"
              End="110,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="106,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="106,22.5"
                    Point2="110,22.5"
                    Point3="110,26.5" />
                  <mssgle:LineSegment
                    End="110,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer Address\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>