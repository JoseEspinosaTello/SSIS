<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/15/2023 5:22:05 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="JET"
  DTS:CreatorName="JET\jet55"
  DTS:DTSID="{6BA36A96-444D-4159-9AD0-0063630C7A0D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5223.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="126"
  DTS:VersionGUID="{28A9F62D-21C0-4474-BF7E-C3C421FA6605}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{F1EDAAFF-E0ED-4DE6-96EC-4F24227CF16D}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\LoadFilePath\new_customer_data.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{71B213A4-0E37-4723-8AEE-C1B83D8F8F49}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\LoadFilePath\new_customer_data.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 3]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{EB1F10B1-FF29-4370-9BB3-3AF94D969A5E}"
      DTS:ObjectName="Excel Connection Manager 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\LoadFilePath\new_customer_data.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 4]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{2C20873C-9718-4816-B67B-F6897D713654}"
      DTS:ObjectName="Excel Connection Manager 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination\New Microsoft Excel Worksheet.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 5]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{846DEA86-65AB-4068-84B7-E8E506BB46AF}"
      DTS:ObjectName="Excel Connection Manager 5">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination\CustomersAdded.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 6]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{27CCCBC2-414B-4186-B0A7-8D748739EDFD}"
      DTS:ObjectName="Excel Connection Manager 6">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination\CustomersAdded.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 7]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{FBAAE793-19D6-4EA9-BCBC-D73BAD66082D}"
      DTS:ObjectName="Excel Connection Manager 7">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination\RecentlyLoaded.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF605A9D-F80C-46DF-A725-AE03FE8033B1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClearReportsPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ClearReports</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4CE54908-F29C-4DEA-800C-B57018FC3B5D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CopyPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\LoadFilePath</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7941A972-A7CE-49AD-9BC6-0A9AE1335449}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFilter">
      <DTS:VariableValue
        DTS:DataType="8">*xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{682B82A5-428A-405C-B3F0-1FB9F9A3CB88}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExtractPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExtractedFilesPath</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30D1D32A-76A3-493D-80B7-3F8E8D356576}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ZipFilesPath</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F2D3DB21-CE70-43EF-A4E1-E22668E508BB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportArchivePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ArchivedExcelFiles</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5FB5F060-657B-47F0-A1D2-A86E0DC73185}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Bootcamp\AllHomework\SSIS\ETLSSIS\ExcelDestination</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E78F9DD0-DD13-4171-8438-383759222427}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFilter">
      <DTS:VariableValue
        DTS:DataType="8">*zip</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ArchiveFile"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C529D411-655C-4AF4-891C-3A910E27A0B3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ArchiveFile"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6bdddcd0eec741018b769af9bcabf56b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::ReportArchivePath,User::ReportPath">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_6bdddcd0eec741018b769af9bcabf56b")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_6bdddcd0eec741018b769af9bcabf56b")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("e4fd75f6-a996-4efc-9f07-6a01c99f2ff0")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_6bdddcd0eec741018b769af9bcabf56b.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CE43F73A-9D9D-42B0-A274-A5F7AAB9D830}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_6bdddcd0eec741018b769af9bcabf56b</RootNamespace>
    <AssemblyName>ST_6bdddcd0eec741018b769af9bcabf56b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6bdddcd0eec741018b769af9bcabf56b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6bdddcd0eec741018b769af9bcabf56b</msb:DisplayName>
    <msb:ProjectId>{48575CDE-2E61-4BD8-A534-BABB82AF736A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6bdddcd0eec741018b769af9bcabf56b.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim reportPath As String = CType(Dts.Variables("ReportPath").Value, String)
        Dim reportArchivePath As String = CType(Dts.Variables("ReportArchivePath").Value, String)

        Dim fileName As String = "\RecentlyLoaded.xlsx"
        Dim datePartName As String

        datePartName = Year(Now()).ToString
        If Month(Now()) < 10 Then
            datePartName &= "0"
        End If

        datePartName &= Month(Now()).ToString
        If DatePart("d", Now()) < 10 Then
            datePartName &= "0"
        End If

        datePartName &= DatePart("d", Now())
        Dim newFile As String = "\CustomersAdded - " + datePartName + ".xlsx"

        Try
            'If My.Computer.FileSystem.FileExists(archivePath + fileName) Then
            '   My.Computer.FileSystem.DeleteFile(archivePath + fileName)
            'End If

            'If My.Computer.FileSystem.FileExists(archivePath + newFile) Then
            '   My.Computer.FileSystem.DeleteFile(archivePath + newFile)
            'End If


            My.Computer.FileSystem.CopyFile(reportPath & fileName, reportArchivePath & newFile, False)

            'My.Computer.FileSystem.RenameFile(reportArchivePath & fileName, newFile)

        Catch ex As System.IO.FileNotFoundException
            Dts.Events.FireError(-1, "", "File not found - " + ex.Message, "", 0)

        Catch ex As IOException
            Dts.Events.FireError(-1, "", "Attempting to copy archive file - " + ex.Message, "", 0)

        End Try

        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_6bdddcd0eec741018b769af9bcabf56b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADx23WQAAAAAAAAAAOAAIiALAVAAAB4AAAAIAAAAAAAA6jwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJg8AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8BwAAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
PAAAAAAAAEgAAAACAAUA1CMAAAwYAAABAAAAAAAAAOA7AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswBgCQAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySQAAcG8tAAAKby4AAAooLwAACgty
bQAAcAwoMAAACigxAAAKEwUSBSgyAAAKDSgwAAAKKDMAAAofCi8MCXKXAABwKDQAAAoNCSgwAAAK
KDMAAAoTBRIFKDIAAAooNAAACg1ymwAAcCgwAAAKjDEAAAEXFyg1AAAKHwovDAlylwAAcCg0AAAK
DQlymwAAcCgwAAAKjDEAAAEXFyg1AAAKKDYAAAooNAAACg1ynwAAcAlyxQAAcCg3AAAKEwQoBAAA
Bm84AAAKBggoNAAACgcRBCg0AAAKFm85AAAK3nolKDoAAAoTBgIoKwAACm87AAAKFXLRAABwctMA
AHARBm88AAAKKDQAAApy0QAAcBZvPQAACiYoPgAACt49JSg6AAAKEwcCKCsAAApvOwAAChVy0QAA
cHL3AABwEQdvPwAACig0AAAKctEAAHAWbz0AAAomKD4AAAreAAIoKwAAChZvQAAACioBHAAAAADo
ACEJAT0lAAABAADoACFGAT0mAAABNgIDKCYAAAooQQAACioeAihCAAAKKi7QCAAAAigjAAAKKh4C
KEMAAAoqAAATMAEAFAAAAAIAABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMwAgAo
AAAAAwAAEQJ7RQAACm9GAAAKCgaMCAAAGy0SKAIAACsKAntFAAAKBm9HAAAKBipKAigiAAAKAnNI
AAAKfUUAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGQIAAAjfgAA0AgA
ACwKAAAjU3RyaW5ncwAAAAD8EgAAQAEAACNVUwA8FAAAEAAAACNHVUlEAAAATBQAAMADAAAjQmxv
YgAAAAAAAAACAAABVx2iCQkPAAAA+gEzABYAAAEAAAA7AAAACgAAAAwAAAAZAAAABAAAAEgAAAAC
AAAANwAAAAMAAAAEAAAACAAAAAkAAAAIAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAABxBQEA
AAAAAAYAmwNeCAYAQAReCAYAcgKfBw8AJQkAAAYAswImBgYAfgMmBgYAJwQmBgYAuwMmBgYA1AMm
BgYA+gImBgYA7wOqBQYAnwIYCAYAGwIYCAYARgMmBgYAFQOaBAoAPgLqBgoABgJbBQoAhgJbBQ4A
3gHuBw4AQweyBwYALgOfBw4AygI3CA4A4gLNAAYApQmqBQ4AGgfuBw4AYwPNAAYAkQGqBQ4AAQAf
BQoAKQK2BQYA2gafCAYAWgYRBgoA7gH8BQYAVQKfBxIABQT2BBIAwgH2BAYAvQSqBQYARAY6AAYA
OAY6AAYAsQWqBQYALAGqBQYAEAomBgYAYAleCAYAlweJBBIASQX2BBYAOAluARYAIwFuAQ4AVAk3
CA4AWQHNAAYAZQGqBQYAKwCqBQYAtgSqBQ4AyATNAA4AZgbNAA4AMgeyBw4AGQp+CA4AlAA3CAYA
UAaqBRIAAgf2BAYAgAeqBQAAAAAxAAAAAAABAAEAAAAAAO4F5QlNAAEAAQAAAAAAQQflCVEAAQAC
AAABEACsCeUJYQABAAMAAAAAAOEIsAhhAAUACAAAARAAQgmgAIEABwAMAAEAAADTBaAAjQAJAA8A
BQEAAOAHAABhAAkAEQAFAQAAEAAAAGEACQAYAAIBAAB/CQAAnQAKABoAMQCfBloBMQB2BmIBMQCK
BmoBMQC4BnIBEQBMB3oBEQC2AX4BEQBeBIIBEQCfCYYBIQDTCRgBBgaMAIkBVoBvCYwBVoCWAYwB
UCAAAAAABhiKBwYAAQBYIAAAAAAGGIoHBgABAGAgAAAAABEYkAfsAAEAiiAAAAAAEwglB5ABAQCW
IAAAAAATCN4FlQEBAKIgAAAAABMIFgeaAQEAriAAAAAAEwjQB58BAQC6IAAAAAADGIoHBgABAMIg
AAAAABYI1gakAQEA7iAAAAAAFgieAakBAQD1IAAAAAAWCKoBrgEBAP0gAAAAABEYkAfsAAIADiEA
AAAABhiKBwYAAgAYIQAAAAAWCGYEtAECAHQhAAAAAAYYigcGAAIAfCEAAAAABgDZBQYAAgA0IwAA
AADGAk0J8AACAEIjAAAAAMYCCwH1AAMASiMAAAAAgwCOAbkBAwBWIwAAAADGArQEpwADAGAjAAAA
ABEAeQC+AQMAgCMAAAAAAQBlAMYBBAC6IAAAAAAGGIoHBgAFAIwjAAAAAAMI8gBKAAUAwCMAAAAA
BhiKBwYABQAAAAEAgwQAAAEAZAYAAAEAAgEAAAEAAgEJAIoHAQARAIoHBgAZAIoHCgApAIoHEAAx
AIoHEAA5AIoHEABBAIoHEABJAIoHEABRAIoHEABZAIoHFQBhAIoHFQBpAIoHEABxAIoHEAB5AIoH
EACBAIoHGgCRAIoHIACpAIoHBgCxAIoHBgC5AIoHBgDRAIoHJgDpAIoHEAAJAYoHBgARAYoHBgCZ
AIoHBgChAIoHBgAMAIoHBgAUAIoHBgAcAIoHBgAkAIoHBgAMAPIASgAUAPIASgAcAPIASgAkAPIA
SgDBAIoHBgDZAD4BTwDZAAwKVwDxAIoHXQBRAXoEZQABAYoHBgBZAR8HagBZAbYJagAZAYoHBgAZ
AXcJfgBhATQJhABpAZkFigBxAWYEkQB5AbQElQCBAd0JmgCBAXEGoACRAbQEpwCBAcIEoACZAZgJ
qwCBAcoJsQB5AbQEvQCZAZgJwgCxAaIFyQC5AVABzwDBAXAH1gBhAY0J3QApARcBpwDRAVQH4wDB
AV4H7ADJARcBpwBhAbsJAQDBAE0J8ADBAAsB9QDBALQEpwDZAeMAAQE0ANMJGAE8AGYESgA8AHAE
LwE8AIoHBgAIACwAUAEIADAAVQEpAKsAeAMuAAsA9gEuABMA/wEuABsAHgIuACMAJwIuACsAUAIu
ADMAUAIuADsAJwIuAEMAVgIuAEsAUAIuAFMAbQIuAFsAUAIuAGMAcwIuAGsAnQIuAHMAqgJAAIsA
VQFAAIMA9AJDAHsA/QJDAIMA9AJJAKsAiQNjAHsA/QJjAIMA9AJpAKsAnQOAAIsAVQGDAJMAVQGD
AJsAVQGDAHsA/QKJAKsAqgOgAIsAVQGpAIMAHgLAAIsAVQHJAIMAHgLgAIsAVQHjALsAVQHjAFMA
UALpALMAVQEDAYMA9AIDAaMAFgMjAYMA9AIjAVsAUAIgAoMA9AIgAosAVQFAAoMA9AJAAosAVQFg
AoMA9AJgAosAVQGAAoMA9AKAAosAVQGgAosAVQHAAosAVQHgAosAVQHgAoMA9AIAA4sAVQEgA4sA
VQEgA4MA9AJvAPkADAEEAAEABQAFAAYABwAJAAgAAABDB84BAADwBdMBAAAaB9gBAADiB90BAADa
BuIBAAC6AecBAACDBOwBAAD2APEBAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0A
AQALAA0AAgAOAA8AAgAYABEALgA1ADwAQwD+ABEBIAEnAQSAAAABAAAAAAAAAAAAAAAAAKAAAAAE
AAAAAAAAAAAAAAA1AcQAAAAAAAQAAAAAAAAAAAAAADUBqgUAAAAACgAAAAAAAAAAAAAAPgHNAAAA
AAAQAAAAAAAAAAAAAABHAdcEAAAAABAAAAAAAAAAAAAAAEcBRAAAAAAAAAAAAAEAAADtCAAACAAE
AAkABAAKAAcAAAAQABIAYwAAABAAKwBjAAAAAAAtAGMAiQAHAYkAKgEAAABDb250ZXh0VmFsdWVg
MQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQBJbnQzMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVf
X0luc3RhbmNlX18AdmFsdWVfXwBQcm9qZWN0RGF0YQBTVF82YmRkZGNkMGVlYzc0MTAxOGI3Njlh
ZjliY2FiZjU2YgBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFzaWMAQ3JlYXRlSW5zdGFuY2UA
Z2V0X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hDb2RlAGdldF9NZXNzYWdlAFZhcmlhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENvcHlGaWxlAERhdGVBbmRUaW1l
AERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRD
b2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAE15
R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVj
dFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmlu
ZwBNYXRoAE1vbnRoAEZpcnN0RGF5T2ZXZWVrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE1pY3Jvc29mdC5WaXN1
YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF82YmRkZGNkMGVlYzc0MTAxOGI3NjlhZjliY2FiZjU2Yi5kbGwAZ2V0X0l0
ZW0AZ2V0X0ZpbGVTeXN0ZW0ARW51bQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAFNjcmlw
dE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASU9FeGNlcHRpb24ARmlsZU5v
dEZvdW5kRXhjZXB0aW9uAEN1bHR1cmVJbmZvAEZpcnN0V2Vla09mWWVhcgBtX0FwcE9iamVjdFBy
b3ZpZGVyAG1fVXNlck9iamVjdFByb3ZpZGVyAG1fQ29tcHV0ZXJPYmplY3RQcm92aWRlcgBtX015
V2ViU2VydmljZXNPYmplY3RQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFN5c3RlbS5Db2Rl
RG9tLkNvbXBpbGVyAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X1VzZXIARW50ZXIAZ2V0X0NvbXB1
dGVyAFNlcnZlckNvbXB1dGVyAE15Q29tcHV0ZXIAX3Jlc01ncgBGaXJlRXJyb3IAQ2xlYXJQcm9q
ZWN0RXJyb3IAU2V0UHJvamVjdEVycm9yAEFjdGl2YXRvcgAuY3RvcgAuY2N0b3IATW9uaXRvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkRldmljZXMAZ2V0X1dlYlNl
cnZpY2VzAE15V2ViU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2ljLkFwcGxpY2F0aW9uU2Vy
dmljZXMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNp
Yy5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMATWljcm9z
b2Z0LlZpc3VhbEJhc2ljLk15U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF82YmRkZGNkMGVl
Yzc0MTAxOGI3NjlhZjliY2FiZjU2Yi5NeS5SZXNvdXJjZXMATXlSZXNvdXJjZXMAU1RfNmJkZGRj
ZDBlZWM3NDEwMThiNzY5YWY5YmNhYmY1NmIuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBnZXRfVmFyaWFibGVzAE15U2V0dGluZ3MARXF1YWxzAENvbnZlcnNpb25zAFJ1bnRpbWVI
ZWxwZXJzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AG1f
U3luY09iamVjdABNeVByb2plY3QARXhpdABzZXRfVGFza1Jlc3VsdABEYXRlUGFydABtX0NvbnRl
eHQAZ2V0X05vdwBTVF82YmRkZGNkMGVlYzc0MTAxOGI3NjlhZjliY2FiZjU2Yi5NeQBnZXRfQXNz
ZW1ibHkARmlsZVN5c3RlbVByb3h5AAAAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkA
UgBlAHMAbwB1AHIAYwBlAHMAABVSAGUAcABvAHIAdABQAGEAdABoAAAjUgBlAHAAbwByAHQAQQBy
AGMAaABpAHYAZQBQAGEAdABoAAApXABSAGUAYwBlAG4AdABsAHkATABvAGEAZABlAGQALgB4AGwA
cwB4AAADMAAAA2QAACVcAEMAdQBzAHQAbwBtAGUAcgBzAEEAZABkAGUAZAAgAC0AIAABCy4AeABs
AHMAeAAAAQAjRgBpAGwAZQAgAG4AbwB0ACAAZgBvAHUAbgBkACAALQAgAAFFQQB0AHQAZQBtAHAA
dABpAG4AZwAgAHQAbwAgAGMAbwBwAHkAIABhAHIAYwBoAGkAdgBlACAAZgBpAGwAZQAgAC0AIAAB
AAAAmaA06T6umkGNSAkRcJn5xgAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFF
ByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQBEmUGFRIkARIgBCAAEwAHAAESbRGAoQUgABKApQcg
AgEOEoClBAABHBwEAAEBHA4HCA4ODg4OCBKAlRKAmQUgABKAsQUgABKAtQYgARKAuRwDIAAcBAAB
DhwFAAARgMUGAAEIEYDFAyAADgUAAg4ODgsABAgOHBGA0RGA1QQAAQ4IBgADDg4ODgUgABKA3QYg
AwEODgIGAAEBEoDlBSAAEoDpCCAFAggODg4IAwAAAQQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoB
HgAEBwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/
EdUKOgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMG
EnkDBhJ9AwYSGAIGHAIGCAMGESgEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0E
AAASGAQgABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQI
ABIYBCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUXzZiZGRkY2QwZWVjNzQxMDE4Yjc2OWFmOWJjYWJmNTZiAAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjMAAAUBAAEAACkBACRlNGZkNzVmNi1hOTk2LTRlZmMtOWYwNy02YTAxYzk5ZjJm
ZjAAAAwBAAcxLjAuMC4wAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwgBAAEAAAAAABgBAApNeVRlbXBsYXRl
CDExLjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGll
bnRQcm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtN
eS5Db21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15LldlYlNl
cnZpY2VzAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAADAPAAAAAAAAAAAAADaPAAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAzDwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8ANgBiAGQAZABkAGMAZAAwAGUAZQBjADcANAAxADAAMQA4AGIANwA2ADkAYQBmADkAYgBjAGEA
YgBmADUANgBiAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAw
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2AGIAZABkAGQAYwBkADAA
ZQBlAGMANwA0ADEAMAAxADgAYgA3ADYAOQBhAGYAOQBiAGMAYQBiAGYANQA2AGIALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADYAYgBkAGQA
ZABjAGQAMABlAGUAYwA3ADQAMQAwADEAOABiADcANgA5AGEAZgA5AGIAYwBhAGIAZgA1ADYAYgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwA2AGIAZABkAGQA
YwBkADAAZQBlAGMANwA0ADEAMAAxADgAYgA3ADYAOQBhAGYAOQBiAGMAYQBiAGYANQA2AGIAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOw8AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\copyFIleToNewPath"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{C63AD8A4-162C-47A8-A3DC-B3509BFEAC27}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="copyFIleToNewPath"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_34ab0c1d6a814bda805da37ff775f3dc"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::CopyPath,User::ExcelFilter,User::ExtractPath">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_34ab0c1d6a814bda805da37ff775f3dc")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_34ab0c1d6a814bda805da37ff775f3dc")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("bf3c745d-3894-4672-88d6-0f1ee1dce11b")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
Imports System.IO.Compression
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '

        'Path where copy of newest excel file will be dropped.
        Dim copyPath As String = CType(Dts.Variables("CopyPath").Value, String)

        'Name of newest excel file.
        Dim excelFilter As String = CType(Dts.Variables("ExcelFilter").Value, String)

        'Path were newest extracted excel file was dropped by extract script task.
        Dim extractPath As String = CType(Dts.Variables("ExtractPath").Value, String)


        Dim copyFiles() As String
        Dim copyFile As String


        Dim fileChangeDt As Date
        Dim fileAge As TimeSpan
        Dim newestAge As New TimeSpan(3, 0, 0, 0)
        Dim newestFile As String
        Dim count As Integer = 0
        Dim filesFound As Boolean = False
        Dim startTime As Date = Now
        Dim timeOutValue As Integer = 1
        Dim shObj As Object = Activator.CreateInstance(Type.GetTypeFromProgID("Shell.Application"))

        Dim extractLength As Integer = 0
        Dim cNameLength As Integer = 0
        Dim copyName As String = ""

        Dim deleteFiles() As String
        Dim deleteFile As String


        deleteFiles = Directory.GetFiles(copyPath, excelFilter)

        For Each deleteFile In deleteFiles
            If My.Computer.FileSystem.FileExists(deleteFile) Then
                My.Computer.FileSystem.DeleteFile(deleteFile)
            End If
        Next

        Try
            Do
                If startTime.AddMinutes(timeOutValue) < Now Then Throw New Exception("no file fitting the time criteria were found. Package timeout limit has been exceeded")

                copyFiles = Directory.GetFiles(extractPath, excelFilter)

                    'Start for each loop that searches through the files for any that it the 3 day criteria set in variable newestAge.

                    For Each copyFile In copyFiles

                        'If a file has already been saved to an array then this will be set to true.
                        'This will allow the program to save time and skip the compare process until a file is available to compare.


                        'Compare the current file to the 3 day criteria to determine the file should be copied.
                        fileChangeDt = File.GetLastWriteTime(copyFile)
                        fileAge = DateTime.Now.Subtract(fileChangeDt)

                        If TimeSpan.op_LessThan(fileAge, newestAge) Then
                            newestFile = copyFile

                            extractLength = extractPath.Length
                            cNameLength = newestFile.Length

                            copyName = newestFile.Substring(extractLength, (cNameLength - extractLength))

                        My.Computer.FileSystem.CopyFile(newestFile, copyPath & copyName, False)

                        filesFound = True

                    End If
                    Next

                    If filesFound = False Then

                        System.Threading.Thread.Sleep(60000)

                    End If
                
            Loop Until filesFound = True

            Dts.TaskResult = ScriptResults.Success

        Catch ex As Exception

            Dts.Events.FireError(-1, "", "Error in GetNewesFile - " + ex.Message, "", 0)

        End Try
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region


End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_34ab0c1d6a814bda805da37ff775f3dc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_34ab0c1d6a814bda805da37ff775f3dc</msb:DisplayName>
    <msb:ProjectId>{A18D38C7-4561-49F4-BDAF-F7D58413CCDF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_34ab0c1d6a814bda805da37ff775f3dc.vbproj" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_34ab0c1d6a814bda805da37ff775f3dc.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9414FDC4-1391-48DC-A5CD-771FE71B0FA5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_34ab0c1d6a814bda805da37ff775f3dc</RootNamespace>
    <AssemblyName>ST_34ab0c1d6a814bda805da37ff775f3dc</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_34ab0c1d6a814bda805da37ff775f3dc.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJsX3WQAAAAAAAAAAOAAIiALAVAAACAAAAAIAAAAAAAAQj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPA9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAASB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAk
PgAAAAAAAEgAAAACAAUAJCQAABQZAAABAAAAAAAAADg9AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswBgDpAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApyRQAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnJdAABwby0AAApvLgAACigvAAAKDBIFGRYWFigwAAAKFhMHKDEAAAoTCBcTCXJ1
AABwKDIAAAooMwAACigmAAAKJhYTChYTC3KZAABwEwwGByg0AAAKEw4WEw8rMREOEQ+aEw0oBAAA
Bm81AAAKEQ1vNgAACiwRKAQAAAZvNQAAChENbzcAAAoRDxfWEw8RDxEOjmkyxwASCBEJbCg4AAAK
KDEAAAooOQAAChYvC3KbAABwczoAAAp6CAcoNAAAChMQFhMRK24REBERmg0JKDsAAAoTBCg8AAAK
ExISEhEEKD0AAAoRBSg+AAAKLEEJEwYIbz8AAAoTChEGbz8AAAoTCxEGEQoRCxEK2m9AAAAKEwwo
BAAABm81AAAKEQYGEQwoQQAAChZvQgAAChcTBxERF9YTERERERCOaTKKEQctCiBg6gAAKEMAAAoR
BzlF////AigrAAAKFm9EAAAK3j0lKEUAAAoTEwIoKwAACm9GAAAKFXKZAABwckgBAHARE29HAAAK
KEEAAApymQAAcBZvSAAACiYoSQAACt4AKgAAAAEQAAAAAOIAyasBPScAAAE2AgMoJgAACihKAAAK
Kh4CKEsAAAoqLtAIAAACKCMAAAoqHgIoTAAACioAABMwAQAUAAAAAgAAEQKMBQAAGy0IKAEAACsK
KwICCgYqIgP+FQUAABsqAAAAEzACACgAAAADAAARAntOAAAKb08AAAoKBowIAAAbLRIoAgAAKwoC
e04AAAoGb1AAAAoGKkoCKCIAAAoCc1EAAAp9TgAACioAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAlAgAACN+AAAACQAAfAoAACNTdHJpbmdzAAAAAHwTAAB8AQAAI1VTAPgUAAAQ
AAAAI0dVSUQAAAAIFQAADAQAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6ATMAFgAAAQAAADoA
AAAKAAAADAAAABkAAAAEAAAAUQAAAAIAAAA3AAAAAwAAAAQAAAAIAAAACQAAAAgAAAABAAAABQAA
AAEAAAADAAAAAwAAAAIAAAAAAKgFAQAAAAAABgDSA4gIBgB3BIgIBgCpAskHDwBPCQAABgDqAnIG
BgC1A3IGBgBeBHIGBgDyA3IGBgALBHIGBgAxA3IGBgAmBOEFBgDWAkIIBgBSAkIIBgB9A3IGBgBM
A9EECgB1AhQHCgA9ApIFCgC9ApIFDgAVAhgIDgBtB9wHBgBlA8kHDgABA2EIDgAZA9kABgD3CeEF
DgBEBxgIDgCaA9kABgDAAeEFDgABAFYFCgBgAgIGBgAEB8kIBgCOBl0GCgAlAkgGBgCMAskHEgA8
BC0FEgD5AS0FBgD+BOEFBgCDAeEFBgD5BeEFBgCEBuEFBgDoBeEFBgA/AeEFBgBZCnIGBgCeCYgI
BgDBB8AEEgCABS0FFgBiCZ0BFgA2AZ0BDgCSCWEIDgB3AdkABgCqB+EFBgBiCkYADgBcB9wHDgBs
CqgIBgByAUYABgDtBOEFBgDvAMAEDgCgAGEIEgAsBy0FAAAAACsAAAAAAAEAAQAAAAAAOgYuCk0A
AQABAAAAAABrBy4KUQABAAIAAAEQAP4JLgphAAEAAwAAAAAACwnaCGEABQAIAAABEACACbUAgQAH
AAwAAQAAAB8GtQCNAAkADwAFAQAACggAAGEACQARAAUBAAAQAAAAYQAJABgAAgEAAL0JAAChAAoA
GgAxAMkGpQExAKAGrQExALQGtQExAOIGvQERAHYHxQERAO0ByQERAJUEzQERAPEJ0QEhABwKYwEG
BpgA1AFWgK0J1wFWgM0B1wFQIAAAAAAGGLQHBgABAFggAAAAAAYYtAcGAAEAYCAAAAAAERi6BzsB
AQCKIAAAAAATCE8H2wEBAJYgAAAAABMIKgbgAQEAoiAAAAAAEwhAB+UBAQCuIAAAAAATCPoH6gEB
ALogAAAAAAMYtAcGAAEAwiAAAAAAFggAB+8BAQDuIAAAAAAWCNUB9AEBAPUgAAAAABYI4QH5AQEA
/SAAAAAAERi6BzsBAgAOIQAAAAAGGLQHBgACABghAAAAABYInQT/AQIAdCEAAAAABhi0BwYAAgB8
IQAAAAAGACUGBgACAIQjAAAAAMYCiwk/AQIAkiMAAAAAxgIeAQUBAwCaIwAAAACDAL0BBAIDAKYj
AAAAAMYC6wQuAQMAsCMAAAAAEQCFAAkCAwDQIwAAAAABAHEAEQIEALogAAAAAAYYtAcGAAUA3CMA
AAAAAwgFAUoABQAQJAAAAAAGGLQHBgAFAAAAAQC6BAAAAQCYBgAAAQAVAQAAAQAVAQkAtAcBABEA
tAcGABkAtAcKACkAtAcQADEAtAcQADkAtAcQAEEAtAcQAEkAtAcQAFEAtAcQAFkAtAcVAGEAtAcV
AGkAtAcQAHEAtAcQAHkAtAcQAIEAtAcaAJEAtAcgAKkAtAcGALEAtAcGALkAtAcGANEAtAcmAOkA
tAcQAAkBtAcGABEBtAcGAJkAtAcGAKEAtAcGAAwAtAcGABQAtAcGABwAtAcGACQAtAcGAAwABQFK
ABQABQFKABwABQFKACQABQFKAMEAtAcGANkAUQFPANkAVQpXAPEAtAddAFkBsQRlAAEBtAcGAGEB
SQdqAGEBCApqABkBtAcGABkBtQmSAGkBXgmYAHEB0AWeAHkBnQSlAIEB6wSpADEBtAeuAIkBJgq2
ANkANAC8AJEB9gDCAJkBbAnIAKEB2QXPAKkB1gnVAKkBYwEQACkBdQnaACkBxQHhADkBtAcQALEB
jAHrACkBJgq2ACkB6AnyADEB7QX7ALkBAwUFAbkB9AQJAbkB4QkPAakBbgEVAcEBmgYcAWkBDQoB
AMkBmgchAWkBywkoATkBKgEuAdEBfgcyAckBiAc7AcEAiwk/AcEAHgEFAcEA6wQuAZEB9gBMATQA
HApjATwAnQRKADwApwR6ATwAtAcGAAgALACbAQgAMACgASkAqwDDAy4ACwBBAi4AEwBKAi4AGwBp
Ai4AIwByAi4AKwCbAi4AMwCbAi4AOwByAi4AQwChAi4ASwCbAi4AUwC4Ai4AWwCbAi4AYwC+Ai4A
awDoAi4AcwD1AkAAiwCgAUAAgwA/A0MAewBIA0MAgwA/A0kAqwDUA2MAewBIA2MAgwA/A2kAqwDo
A4AAiwCgAYMAkwCgAYMAmwCgAYMAewBIA4kAqwD1A6AAiwCgAakAgwBpAsAAiwCgAckAgwBpAuAA
iwCgAeMAuwCgAeMAUwCbAukAswCgAQMBgwA/AwMBowBhAyMBgwA/AyMBWwCbAiACgwA/AyACiwCg
AUACgwA/A0ACiwCgAWACgwA/A2ACiwCgAYACgwA/A4ACiwCgAaACiwCgAcACiwCgAeACiwCgAeAC
gwA/AwADiwCgASADiwCgASADgwA/A28ARAFXAQQAAQAFAAUABgAHAAkACAAAAG0HGQIAADwGHgIA
AEQHIwIAAAwIKAIAAAQHLQIAAPEBMgIAALoENwIAAAkBPAICAAQAAwACAAUABQACAAYABwACAAcA
CQACAAkACwACAAoADQABAAsADQACAA4ADwACABgAEQAuADUAPABDAEkBXAFrAXIBBIAAAAEAAAAA
AAAAAAAAAAAAtQAAAAQAAAAAAAAAAAAAAIABrAAAAAAABAAAAAAAAAAAAAAAgAHhBQAAAAAKAAAA
AAAAAAAAAACJAdkAAAAAABAAAAAAAAAAAAAAAJIBDgUAAAAAEAAAAAAAAAAAAAAAkgFQAAAAAAAA
AAAAAQAAABcJAAAIAAQACQAEAAoABwAAABAAEgBvAAAAEAArAG8AAAAAAC0AbwCbAFIBmwB1AQAA
AENvbnRleHRWYWx1ZWAxAFRocmVhZFNhZmVPYmplY3RQcm92aWRlcmAxADxNb2R1bGU+AEdldFR5
cGVGcm9tUHJvZ0lEAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVABE
aXNwb3NlX19JbnN0YW5jZV9fAENyZWF0ZV9fSW5zdGFuY2VfXwB2YWx1ZV9fAFByb2plY3REYXRh
AG1zY29ybGliAFNUXzM0YWIwYzFkNmE4MTRiZGE4MDVkYTM3ZmY3NzVmM2RjAE1pY3Jvc29mdC5W
aXN1YWxCYXNpYwBUaHJlYWQAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNl
AEdldEhhc2hDb2RlAGdldF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAERlbGV0ZUZpbGUAQ29weUZpbGUARGF0ZUFuZFRpbWUARGF0ZVRpbWUAR2V0
TGFzdFdyaXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEdldFR5cGUAQ29t
cGFyZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0
ZQBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVN
b2R1bGVOYW1lQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9u
QXR0cmlidXRlAE15R3JvdXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1Zh
bHVlAEdldE9iamVjdFZhbHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUb1N0cmluZwBTdWJzdHJpbmcATWF0aABnZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVybmFsAFNjcmlwdE9iamVjdE1vZGVs
AFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8zNGFiMGMxZDZhODE0YmRhODA1ZGEzN2ZmNzc1ZjNk
Yy5kbGwAZ2V0X0l0ZW0AZ2V0X0ZpbGVTeXN0ZW0ARW51bQBvcF9MZXNzVGhhbgBUaW1lU3BhbgBT
eXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15
QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAG1fQXBwT2JqZWN0UHJv
dmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9iamVjdFByb3ZpZGVyAG1fTXlX
ZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAU3lzdGVtLkNvZGVE
b20uQ29tcGlsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfVXNlcgBFbnRlcgBnZXRfQ29tcHV0
ZXIAU2VydmVyQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEZpcmVFcnJvcgBDbGVhclByb2pl
Y3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9yAC5jY3RvcgBNb25pdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuRGV2aWNlcwBnZXRfV2ViU2Vy
dmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQXBwbGljYXRpb25TZXJ2
aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWljcm9zb2Z0LlZpc3VhbEJhc2lj
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBNaWNyb3Nv
ZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzM0YWIwYzFkNmE4
MTRiZGE4MDVkYTM3ZmY3NzVmM2RjLk15LlJlc291cmNlcwBNeVJlc291cmNlcwBTVF8zNGFiMGMx
ZDZhODE0YmRhODA1ZGEzN2ZmNzc1ZjNkYy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAQWRkTWludXRlcwBNeVNldHRpbmdzAEVxdWFscwBD
b252ZXJzaW9ucwBSdW50aW1lSGVscGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBn
ZXRfRXZlbnRzAEZpbGVFeGlzdHMAQ29uY2F0AFN1YnRyYWN0AG1fU3luY09iamVjdABNeVByb2pl
Y3QARXhpdABzZXRfVGFza1Jlc3VsdABtX0NvbnRleHQAZ2V0X05vdwBTVF8zNGFiMGMxZDZhODE0
YmRhODA1ZGEzN2ZmNzc1ZjNkYy5NeQBnZXRfQXNzZW1ibHkARGlyZWN0b3J5AEZpbGVTeXN0ZW1Q
cm94eQAAMU0AeQAuAFIAZQBzAG8AdQByAGMAZQBzAC4ATQB5AFIAZQBzAG8AdQByAGMAZQBzAAAR
QwBvAHAAeQBQAGEAdABoAAAXRQB4AGMAZQBsAEYAaQBsAHQAZQByAAAXRQB4AHQAcgBhAGMAdABQ
AGEAdABoAAAjUwBoAGUAbABsAC4AQQBwAHAAbABpAGMAYQB0AGkAbwBuAAABAICrbgBvACAAZgBp
AGwAZQAgAGYAaQB0AHQAaQBuAGcAIAB0AGgAZQAgAHQAaQBtAGUAIABjAHIAaQB0AGUAcgBpAGEA
IAB3AGUAcgBlACAAZgBvAHUAbgBkAC4AIABQAGEAYwBrAGEAZwBlACAAdABpAG0AZQBvAHUAdAAg
AGwAaQBtAGkAdAAgAGgAYQBzACAAYgBlAGUAbgAgAGUAeABjAGUAZQBkAGUAZAAAMUUAcgByAG8A
cgAgAGkAbgAgAEcAZQB0AE4AZQB3AGUAcwBGAGkAbABlACAALQAgAAEAAKpcMBeT7PVJp6aKg0Sh
LugABCABAQgDIAABBSABARERBCABAQ4EIAEBAgUgAgEODgUgAQERRQcgBAEODg4OBhUSJAESDAYV
EiQBEggGFRIkARJlBhUSJAESIAQgABMABwABEm0RgKUFIAASgKkHIAIBDhKAqQQAARwcBAABARwi
BxQODg4OEYCVEYCZDgIRgJUICAgODh0OCB0OCBGAlRKAnQUgABKAtQUgABKAuQYgARKAvRwDIAAc
BAABDhwHIAQBCAgICAUAABGAlQUAARJtDgUAARwSbQYAAh0ODg4FIAASgNUEIAECDgYgARGAlQ0J
AAIIEYCVEYCVBgABEYCVDgggARGAmRGAlQkAAgIRgJkRgJkDIAAIBSACDggIBQACDg4OBiADAQ4O
AgQAAQEIBgABARKAnQUgABKA6QMgAA4IIAUCCA4ODggDAAABBCABAhwEBwEeAAIeAAUQAQAeAAQK
AR4ABAcBEwAGFRIkARMABwYVEnEBEwAGFRJxARMAAhMABAoBEwAFIAEBEwAIt3pcVhk04IkIsD9f
fxHVCjoIiYRdzYCAzJEEAAAAAAQBAAAABwYVEiQBEgwHBhUSJAESCAcGFRIkARJlBwYVEiQBEiAD
BhJ5AwYSfQMGEhgCBhwCBggDBhEoBAAAEgwEAAASCAQAABJlBAAAEiAEAAASeQQAABJ9BQABARJ9
BAAAEhgEIAASbQcQAQEeAB4ABzABAQEQHgAECAASDAQIABIIBAgAEmUECAASIAQIABJ5BAgAEn0E
CAASGAQoABMACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTVF8zNGFiMGMxZDZhODE0YmRhODA1ZGEzN2ZmNzc1ZjNkYwAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDIzAAAFAQABAAApAQAkYmYzYzc0NWQtMzg5NC00NjcyLTg4ZDYtMGYxZWUxZGNl
MTFiAAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcIAQABAAAAAAAYAQAKTXlUZW1wbGF0
ZQgxMS4wLjAuMAAAYQEANFN5c3RlbS5XZWIuU2VydmljZXMuUHJvdG9jb2xzLlNvYXBIdHRwQ2xp
ZW50UHJvdG9jb2wSQ3JlYXRlX19JbnN0YW5jZV9fE0Rpc3Bvc2VfX0luc3RhbmNlX18AAAAQAQAL
TXkuQ29tcHV0ZXIAABMBAA5NeS5BcHBsaWNhdGlvbgAADAEAB015LlVzZXIAABMBAA5NeS5XZWJT
ZXJ2aWNlcwAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABg+AAAAAAAAAAAAADI+AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAkPgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAzADQAYQBiADAAYwAxAGQANgBhADgAMQA0AGIAZABhADgAMAA1AGQAYQAzADcAZgBmADcANwA1
AGYAMwBkAGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADMANABhAGIAMABjADEAZAA2
AGEAOAAxADQAYgBkAGEAOAAwADUAZABhADMANwBmAGYANwA3ADUAZgAzAGQAYwAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMwA0AGEAYgAw
AGMAMQBkADYAYQA4ADEANABiAGQAYQA4ADAANQBkAGEAMwA3AGYAZgA3ADcANQBmADMAZABjAC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADMANABhAGIAMABj
ADEAZAA2AGEAOAAxADQAYgBkAGEAOAAwADUAZABhADMANwBmAGYANwA3ADUAZgAzAGQAYwAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAARD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Export Data to Excel File"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1BE8E4F4-29A7-4E57-833B-70D25351B5EC}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Export Data to Excel File">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Export Data to Excel File\Load Address"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5847FC88-F966-4628-9F76-75FD8BA995F7}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Address"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Data to Excel File\Load Address\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="i2"
                          cachedName="AddressID"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="39"
                          cachedName="AddressLine1"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="AddressLine2"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="17"
                          cachedName="City"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[StateProvince]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="16"
                          cachedName="StateProvince"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[CountryRegion]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="14"
                          cachedName="CountryRegion"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[PostalCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="PostalCode"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="39"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          name="Copy of AddressLine1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          name="Copy of AddressLine2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="17"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          name="Copy of City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvince]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="16"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvince]"
                          name="Copy of StateProvince"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="14"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          name="Copy of CountryRegion"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          name="Copy of PostalCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Address\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LoadedAddress$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Address\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 7]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 7]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="r8"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressLine1]"
                          cachedDataType="wstr"
                          cachedLength="39"
                          cachedName="Copy of AddressLine1"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine1]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressLine2]"
                          cachedDataType="wstr"
                          cachedLength="22"
                          cachedName="Copy of AddressLine2"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine2]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of City]"
                          cachedDataType="wstr"
                          cachedLength="17"
                          cachedName="Copy of City"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[City]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of StateProvince]"
                          cachedDataType="wstr"
                          cachedLength="16"
                          cachedName="Copy of StateProvince"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[StateProvince]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvince]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CountryRegion]"
                          cachedDataType="wstr"
                          cachedLength="14"
                          cachedName="Copy of CountryRegion"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CountryRegion]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of PostalCode]"
                          cachedDataType="wstr"
                          cachedLength="10"
                          cachedName="Copy of PostalCode"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[PostalCode]"
                          lineageId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          dataType="wstr"
                          length="255"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[StateProvince]"
                          dataType="wstr"
                          length="255"
                          name="StateProvince" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Address\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC loadAddress</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine1]"
                          length="39"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine1]"
                          name="AddressLine1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine2]"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressLine2]"
                          name="AddressLine2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[City]"
                          length="17"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StateProvince]"
                          length="16"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[StateProvince]"
                          name="StateProvince"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CountryRegion]"
                          length="14"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[CountryRegion]"
                          name="CountryRegion"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PostalCode]"
                          length="10"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].Columns[PostalCode]"
                          name="PostalCode"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          length="39"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="17"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          name="StateProvince" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          length="14"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="PostalCode" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          length="39"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine1]"
                          name="AddressLine1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressLine2]"
                          name="AddressLine2" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="17"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StateProvince]"
                          name="StateProvince" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          length="14"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CountryRegion]"
                          name="CountryRegion" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PostalCode]"
                          name="PostalCode" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Data to Excel File\Load Address.Paths[Data Conversion Output]"
                  endId="Package\Export Data to Excel File\Load Address\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Export Data to Excel File\Load Address\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Export Data to Excel File\Load Address.Paths[OLE DB Source Output]"
                  endId="Package\Export Data to Excel File\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Export Data to Excel File\Load Address\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Data to Excel File\Load CustomerAddress"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{84432C39-7DE9-4F02-9BC7-347A8D016446}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load CustomerAddress"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="i2"
                          cachedName="CustomerID"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="i2"
                          cachedName="AddressID"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input].Columns[AddressType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="11"
                          cachedName="AddressType"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="11"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          name="Copy of AddressType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LoadedCustomerAddress$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 7]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 7]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="r8"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="r8"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of AddressType]"
                          cachedDataType="wstr"
                          cachedLength="11"
                          cachedName="Copy of AddressType"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressType]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          dataType="wstr"
                          length="255"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressID]"
                          dataType="wstr"
                          length="255"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">EXEC loadCustomerAddress</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressType]"
                          length="11"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].Columns[AddressType]"
                          name="AddressType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[AddressType]"
                          name="AddressType" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Data to Excel File\Load CustomerAddress.Paths[Data Conversion Output]"
                  endId="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Export Data to Excel File\Load CustomerAddress.Paths[OLE DB Source Output]"
                  endId="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Data to Excel File\Load Customers"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{4B675216-E2BA-4D62-8F02-8F61204143E2}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Customers"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Data to Excel File\Load Customers\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="i2"
                          cachedName="CustomerID"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[NameStyle]"
                          cachedDataType="bool"
                          cachedName="NameStyle"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4"
                          cachedName="Title"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="FirstName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="MiddleName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="LastName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[Suffix]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="22"
                          cachedName="Suffix"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[CompanyName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="41"
                          cachedName="CompanyName"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[SalesPerson]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="24"
                          cachedName="SalesPerson"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[EmailAddress]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="43"
                          cachedName="EmailAddress"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="19"
                          cachedName="Phone"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          name="Copy of NameStyle"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          name="Copy of Title"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          name="Copy of FirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          name="Copy of MiddleName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          name="Copy of LastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          name="Copy of Suffix"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          name="Copy of CompanyName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          name="Copy of SalesPerson"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="43"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          name="Copy of EmailAddress"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="19"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          name="Copy of Phone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Customers\Excel Destination"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Excel Destination"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">LoadedCustomers$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 7]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 7]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="r8"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of NameStyle]"
                          cachedDataType="r8"
                          cachedName="Copy of NameStyle"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[NameStyle]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Title]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Title"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of FirstName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of FirstName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of MiddleName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of MiddleName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of LastName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of LastName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Suffix]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of Suffix"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Suffix]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of CompanyName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of CompanyName"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CompanyName]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of SalesPerson]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Copy of SalesPerson"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesPerson]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of EmailAddress]"
                          cachedDataType="wstr"
                          cachedLength="43"
                          cachedName="Copy of EmailAddress"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[EmailAddress]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]" />
                        <inputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].Columns[Copy of Phone]"
                          cachedDataType="wstr"
                          cachedLength="19"
                          cachedName="Copy of Phone"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CustomerID]"
                          dataType="wstr"
                          length="255"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[NameStyle]"
                          dataType="wstr"
                          length="255"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Data to Excel File\Load Customers\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Customer]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">exec loadCustomers</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[NameStyle]"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[NameStyle]"
                          name="NameStyle"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          length="4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Title]"
                          name="Title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MiddleName]"
                          length="20"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[MiddleName]"
                          name="MiddleName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Suffix]"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Suffix]"
                          name="Suffix"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                          length="41"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[CompanyName]"
                          name="CompanyName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesPerson]"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesPerson]"
                          name="SalesPerson"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmailAddress]"
                          length="43"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[EmailAddress]"
                          name="EmailAddress"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                          length="19"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].Columns[Phone]"
                          name="Phone"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[NameStyle]"
                          dataType="bool"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          length="41"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          length="43"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="19"
                          name="Phone" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          dataType="i2"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[NameStyle]"
                          dataType="bool"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[NameStyle]"
                          name="NameStyle" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Suffix]"
                          name="Suffix" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          length="41"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CompanyName]"
                          name="CompanyName" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesPerson]"
                          name="SalesPerson" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          length="43"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[EmailAddress]"
                          name="EmailAddress" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="19"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Data to Excel File\Load Customers.Paths[Data Conversion Output]"
                  endId="Package\Export Data to Excel File\Load Customers\Excel Destination.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Export Data to Excel File\Load Customers\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Export Data to Excel File\Load Customers.Paths[OLE DB Source Output]"
                  endId="Package\Export Data to Excel File\Load Customers\Data Conversion.Inputs[Data Conversion Input]"
                  name="OLE DB Source Output"
                  startId="Package\Export Data to Excel File\Load Customers\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Export Data to Excel File.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CEF28A19-5834-4531-8F45-ADDF04FFAA7C}"
          DTS:From="Package\Export Data to Excel File\Load Customers"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Export Data to Excel File\Load Address" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Export Data to Excel File.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{107B7942-D843-423A-9B1B-22AF5BEDC361}"
          DTS:From="Package\Export Data to Excel File\Load Address"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Export Data to Excel File\Load CustomerAddress" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\extractNewFile"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{0D2451C5-CE37-4178-9298-3E96B8A17725}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="extractNewFile"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d59bd79dceab43b88563743217feab6f"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::ExtractPath,User::FilePath,User::ZipFilter">
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_d59bd79dceab43b88563743217feab6f")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_d59bd79dceab43b88563743217feab6f")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("afcbae7b-95bb-4584-9de4-f4610ecb73b0")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region
#Region "Imports"

Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
Imports System.IO.Compression


#End Region


'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim zipPath As String = CType(Dts.Variables("FilePath").Value, String)
        Dim zipFilter As String = CType(Dts.Variables("ZipFilter").Value, String)
        Dim extractPath As String = CType(Dts.Variables("ExtractPath").Value, String)

        Dim zipFiles() As String
        Dim zipFile As String
        Dim fileChangeDt As Date
        Dim fileAge As TimeSpan
        Dim newestAge As New TimeSpan(3, 0, 0, 0)
        Dim newestFile As String
        Dim count As Integer = 0
        Dim filesFound As Boolean = False
        Dim startTime As Date = Now
        Dim timeOutValue As Integer = 1
        Dim shObj As Object = Activator.CreateInstance(Type.GetTypeFromProgID("Shell.Application"))



        Try
            Do
                If startTime.AddMinutes(timeOutValue) < Now Then Throw New Exception("no file fitting the time criteria were found. Package timeout limit has been exceeded")

                zipFiles = Directory.GetFiles(zipPath, zipFilter)

                'Start for each loop that searches through the files for any that it the 3 day criteria set in variable newestAge.

                For Each zipFile In zipFiles

                    'If a file has already been saved to an array then this will be set to true.
                    'This will allow the program to save time and skip the compare process until a file is available to compare.


                    'Compare the current file to the 3 day criteria to determine the file should be copied.
                    fileChangeDt = File.GetLastWriteTime(zipFile)
                    fileAge = DateTime.Now.Subtract(fileChangeDt)

                    If TimeSpan.op_LessThan(fileAge, newestAge) Then
                        newestFile = zipFile

                        filesFound = True

                    End If

                Next

                If filesFound = False Then

                    System.Threading.Thread.Sleep(60000)

                End If

            Loop Until filesFound = True


            'IO.Directory.CreateDirectory(extractPath)

            'Declare the folder where the items will be extracted.
            Dim output As Object = shObj.NameSpace((extractPath))

            'Declare the input zip file.
            Dim input As Object = shObj.NameSpace((newestFile))

            'Extract the items from the zip file.
            'parameter 16 selects "yes to all" will overwrite an existing file in folder
            output.CopyHere((input.Items), 16)

            Dts.TaskResult = ScriptResults.Success

        Catch ex As Exception

            Dts.Events.FireError(-1, "", "Error in GetNewesFile - " + ex.Message, "", 0)

        End Try

    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_d59bd79dceab43b88563743217feab6f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_d59bd79dceab43b88563743217feab6f</msb:DisplayName>
    <msb:ProjectId>{30228099-D66A-4818-A0B8-976B2AB58B7A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_d59bd79dceab43b88563743217feab6f.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_d59bd79dceab43b88563743217feab6f.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D39B62B2-26E3-4061-90C8-6B318EF215D9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_d59bd79dceab43b88563743217feab6f</RootNamespace>
    <AssemblyName>ST_d59bd79dceab43b88563743217feab6f</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_d59bd79dceab43b88563743217feab6f.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANuC3WQAAAAAAAAAAOAAIiALAVAAACAAAAAIAAAAAAAAAj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALA9AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAACB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADk
PQAAAAAAAEgAAAACAAUAHCQAANwYAAABAAAAAAAAAPg8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswDQDVAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApyRQAAcG8tAAAKby4AAAooLwAACgsC
KCsAAApvLAAACnJZAABwby0AAApvLgAACigvAAAKDBIFGRYWFigwAAAKFhMHKDEAAAoTCBcTCXJx
AABwKDIAAAooMwAACigmAAAKEwoSCBEJbCg0AAAKKDEAAAooNQAAChYvC3KVAABwczYAAAp6Bgco
NwAAChMNFhMOKzMRDREOmg0JKDgAAAoTBCg5AAAKEw8SDxEEKDoAAAoRBSg7AAAKLAYJEwYXEwcR
DhfWEw4RDhENjmkyxREHLQogYOoAACg8AAAKEQcsgxEKFHJCAQBwF40YAAABJRYIohQUFCg9AAAK
KCYAAAoTCxEKFHJCAQBwF40YAAABJRYRBqIUFBQoPQAACigmAAAKEwwRCxRyVgEAcBiNGAAAASUW
EQwUcmgBAHAWjRgAAAEUFBQoPQAACqIlFx8QjDcAAAGiFBQUFyg+AAAKJgIoKwAAChZvPwAACt49
JShAAAAKExACKCsAAApvQQAAChVydAEAcHJ2AQBwERBvQgAACihDAAAKcnQBAHAWb0QAAAomKEUA
AAreACoAAABBHAAAAAAAAI4AAAAJAQAAlwEAAD0AAAAnAAABNgIDKCYAAAooRgAACioeAihHAAAK
Ki7QCAAAAigjAAAKKh4CKEgAAAoqAAATMAEAFAAAAAIAABECjAUAABstCCgBAAArCisCAgoGKiID
/hUFAAAbKgAAABMwAgAoAAAAAwAAEQJ7SgAACm9LAAAKCgaMCAAAGy0SKAIAACsKAntKAAAKBm9M
AAAKBipKAigiAAAKAnNNAAAKfUoAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAAHwIAAAjfgAA6AgAACwKAAAjU3RyaW5ncwAAAAAUEwAAqAEAACNVUwC8FAAAEAAAACNHVUlE
AAAAzBQAABAEAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+gEzABYAAAEAAAA6AAAACgAAAAwA
AAAZAAAABAAAAE0AAAACAAAANwAAAAMAAAAEAAAACAAAAAkAAAAIAAAAAQAAAAUAAAABAAAAAwAA
AAMAAAACAAAAAACiBQEAAAAAAAYApQNrCAYASgRrCAYAfAKsBw8AEQkAAAYAvQJkBgYAiANkBgYA
MQRkBgYAxQNkBgYA3gNkBgYABANkBgYA+QPTBQYAqQIlCAYAJQIlCAYAUANkBgYAHwPXBAoASAIG
BwoAEAKDBQoAkAKDBQ4A6AH7Bw4AUAe/BwYAOAOsBw4A1AJECA4A7AK7AAYArgnTBQ4ANgf7Bw4A
bQO7AAYAkwHTBQ4AAQBHBQoAMwL0BQYA9gaLCAYAgAZPBgoA+AE6BgYAXwKsBxIADwQeBRIAzAEe
BQYA+gTTBQYAVgHTBQYA6wXTBQYAdgbTBQYA2gXTBQYAIQHTBQYAGApkBgYAYAlrCAYApAe3BBIA
cQUeBRYAJAlwARYAGAFwAQ4AVAlECA4ASgG7AAYAjQfTBQYAIQpMAAYARQFMAAYA0QC3BA4AyARE
CAYAKwDTBQ4ApgBECBIAHgceBQYA8wTTBQAAAAAxAAAAAAABAAEAAAAAACwG7QlNAAEAAQAAAAAA
TgftCVEAAQACAAABEAC1Ce0JYQABAAMAAAAAAM0InAhhAAUACAAAARAAQgmTBIEABwAMAAEAAAAR
BpMEjQAJAA8ABQEAAO0HAABhAAkAEQAFAQAAEAAAAGEACQAYAAIBAAB/CQAAoQAKABoAMQC7BqwB
MQCSBrQBMQCmBrwBMQDUBsQBEQBZB8wBEQDAAdABEQBoBNQBEQCoCdgBIQDbCWoBBgaeANsBVoBv
Cd4BVoCgAd4BUCAAAAAABhiXBwYAAQBYIAAAAAAGGJcHBgABAGAgAAAAABEYnQc+AQEAiiAAAAAA
EwhBB+IBAQCWIAAAAAATCBwG5wEBAKIgAAAAABMIMgfsAQEAriAAAAAAEwjdB/EBAQC6IAAAAAAD
GJcHBgABAMIgAAAAABYI8gb2AQEA7iAAAAAAFgioAfsBAQD1IAAAAAAWCLQBAAIBAP0gAAAAABEY
nQc+AQIADiEAAAAABhiXBwYAAgAYIQAAAAAWCHAEBgICAHQhAAAAAAYYlwcGAAIAfCEAAAAABgAX
BgYAAgB8IwAAAADGAk0JQgECAIojAAAAAMYCAAFHAQMAkiMAAAAAgwCQAQsCAwCeIwAAAADGAvEE
KwEDAKgjAAAAABEAiwAQAgMAyCMAAAAAAQB3ABgCBAC6IAAAAAAGGJcHBgAFANQjAAAAAAMI5wBK
AAUACCQAAAAABhiXBwYABQAAAAEAjQQAAAEAigYAAAEA9wAAAAEA9wAJAJcHAQARAJcHBgAZAJcH
CgApAJcHEAAxAJcHEAA5AJcHEABBAJcHEABJAJcHEABRAJcHEABZAJcHFQBhAJcHFQBpAJcHEABx
AJcHEAB5AJcHEACBAJcHGgCRAJcHIACpAJcHBgCxAJcHBgC5AJcHBgDRAJcHJgDpAJcHEAAJAZcH
BgARAZcHBgCZAJcHBgChAJcHBgAMAJcHBgAUAJcHBgAcAJcHBgAkAJcHBgAMAOcASgAUAOcASgAc
AOcASgAkAOcASgDBAJcHBgDZADMBTwDZABQKVwDxAJcHXQBZAYQEZQABAZcHBgBhATsHagBhAccJ
agAZAZcHBgAZAXcJjgBpASAJlABxAcoFmgB5AXAEoQCBAfEEpQAxAZcHqgCJAeUJsgDZADoAuACR
AdgAvgApATcJxAApAZgBywA5AZcHEACZAS4J1QChAV8B3AApAeUJsgApAZ8J4wAxAd8F7ACpAYwG
9gCxAb8J+wCxAZkFDAFpAcwJAQDBAX0HHgFpAY0JJQE5AQwBKwHRAZgJLwHJAWEHNQHBAWsHPgHB
AE0JQgHBAAABRwHBAPEEKwGRAdgAUwE0ANsJagE8AHAESgA8AHoEgQE8AJcHBgAIACwAogEIADAA
pwEpAKsAygMuAAsASAIuABMAUQIuABsAcAIuACMAeQIuACsAogIuADMAogIuADsAeQIuAEMAqAIu
AEsAogIuAFMAvwIuAFsAogIuAGMAxQIuAGsA7wIuAHMA/AJAAIsApwFAAIMARgNDAHsATwNDAIMA
RgNJAKsA2wNjAHsATwNjAIMARgNpAKsA7wOAAIsApwGDAJMApwGDAJsApwGDAHsATwOJAKsA/AOg
AIsApwGpAIMAcALAAIsApwHJAIMAcALgAIsApwHjALsApwHjAFMAogLpALMApwEDAYMARgMDAaMA
aAMjAYMARgMjAVsAogIgAoMARgMgAosApwFAAoMARgNAAosApwFgAoMARgNgAosApwGAAoMARgOA
AosApwGgAosApwHAAosApwHgAosApwHgAoMARgMAA4sApwEgA4sApwEgA4MARgNvAEsBXgEEAAEA
BQAFAAYABwAJAAgAAABQByACAAAuBiUCAAA2ByoCAADvBy8CAAD2BjQCAADEATkCAACNBD4CAADr
AEMCAgAEAAMAAgAFAAUAAgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAOAA8AAgAYABEA
LgA1ADwAQwBQAWMBcgF5AQSAAAABAAAAAAAAAAAAAAAAAJMEAAAEAAAAAAAAAAAAAACHAbIAAAAA
AAQAAAAAAAAAAAAAAIcB0wUAAAAACgAAAAAAAAAAAAAAkAG7AAAAAAAQAAAAAAAAAAAAAACZAf8E
AAAAABAAAAAAAAAAAAAAAJkBVgAAAAAAAAAAAAEAAADZCAAACAAEAAkABAAKAAcAAAAQABIAdQAA
ABAAKwB1AAAAAAAtAHUAkwBZAZMAfAEAAABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0
UHJvdmlkZXJgMQBJbnQzMgA8TW9kdWxlPgBHZXRUeXBlRnJvbVByb2dJRABTeXN0ZW0uSU8ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9fSW5zdGFuY2VfXwBDcmVhdGVf
X0luc3RhbmNlX18AdmFsdWVfXwBQcm9qZWN0RGF0YQBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFs
QmFzaWMAVGhyZWFkAENyZWF0ZUluc3RhbmNlAGdldF9HZXRJbnN0YW5jZQBpbnN0YW5jZQBHZXRI
YXNoQ29kZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBGaWxlAERhdGVBbmRUaW1lAERhdGVUaW1lAEdldExhc3RXcml0ZVRpbWUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBHZXRUeXBlAENvbXBhcmUARmFpbHVyZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQBfcmVzQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAEd1aWRBdHRyaWJ1dGUASGVscEtleXdvcmRBdHRyaWJ1dGUAR2VuZXJhdGVkQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAENvbVZpc2libGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBTdGFuZGFyZE1vZHVsZUF0dHJpYnV0ZQBIaWRlTW9kdWxlTmFtZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUARGVidWdn
ZXJIaWRkZW5BdHRyaWJ1dGUAQXNzZW1ibHlGaWxlVmVyc2lvbkF0dHJpYnV0ZQBNeUdyb3VwQ29s
bGVjdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAENMU0NvbXBsaWFudEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAG1fVmFsdWUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQBHZXRPYmplY3RWYWx1ZQBT
VF9kNTliZDc5ZGNlYWI0M2I4ODU2Mzc0MzIxN2ZlYWI2ZgBTeXN0ZW0uVGhyZWFkaW5nAE5ld0xh
dGVCaW5kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWF0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcy5JbnRlcm5hbABTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwATGF0ZUNhbGwAU1RfZDU5YmQ3OWRjZWFi
NDNiODg1NjM3NDMyMTdmZWFiNmYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAG9wX0xlc3NUaGFu
AFRpbWVTcGFuAFN5c3RlbS5Db21wb25lbnRNb2RlbC5EZXNpZ24AU2NyaXB0TWFpbgBnZXRfQXBw
bGljYXRpb24ATXlBcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8AU2xlZXAAbV9B
cHBPYmplY3RQcm92aWRlcgBtX1VzZXJPYmplY3RQcm92aWRlcgBtX0NvbXB1dGVyT2JqZWN0UHJv
dmlkZXIAbV9NeVdlYlNlcnZpY2VzT2JqZWN0UHJvdmlkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBT
eXN0ZW0uQ29kZURvbS5Db21waWxlcgBFdmVudHNPYmplY3RXcmFwcGVyAGdldF9Vc2VyAEVudGVy
AGdldF9Db21wdXRlcgBNeUNvbXB1dGVyAF9yZXNNZ3IARmlyZUVycm9yAENsZWFyUHJvamVjdEVy
cm9yAFNldFByb2plY3RFcnJvcgBBY3RpdmF0b3IALmN0b3IALmNjdG9yAE1vbml0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5EZXZpY2VzAGdldF9XZWJTZXJ2aWNl
cwBNeVdlYlNlcnZpY2VzAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5BcHBsaWNhdGlvblNlcnZpY2Vz
AFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfZDU5YmQ3OWRjZWFiNDNiODg1NjM3NDMyMTdmZWFiNmYuTXkuUmVzb3VyY2VzAE15
UmVzb3VyY2VzAFNUX2Q1OWJkNzlkY2VhYjQzYjg4NTYzNzQzMjE3ZmVhYjZmLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBBZGRNaW51dGVz
AE15U2V0dGluZ3MARXF1YWxzAENvbnZlcnNpb25zAFJ1bnRpbWVIZWxwZXJzAFN1Y2Nlc3MAZ2V0
X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AFN1YnRyYWN0AG1fU3luY09iamVj
dABNeVByb2plY3QATGF0ZUdldABFeGl0AHNldF9UYXNrUmVzdWx0AG1fQ29udGV4dABnZXRfTm93
AFNUX2Q1OWJkNzlkY2VhYjQzYjg4NTYzNzQzMjE3ZmVhYjZmLk15AGdldF9Bc3NlbWJseQBEaXJl
Y3RvcnkAAAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBlAHMAbwB1AHIAYwBlAHMA
ABFGAGkAbABlAFAAYQB0AGgAABNaAGkAcABGAGkAbAB0AGUAcgAAF0UAeAB0AHIAYQBjAHQAUABh
AHQAaAAAI1MAaABlAGwAbAAuAEEAcABwAGwAaQBjAGEAdABpAG8AbgAAgKtuAG8AIABmAGkAbABl
ACAAZgBpAHQAdABpAG4AZwAgAHQAaABlACAAdABpAG0AZQAgAGMAcgBpAHQAZQByAGkAYQAgAHcA
ZQByAGUAIABmAG8AdQBuAGQALgAgAFAAYQBjAGsAYQBnAGUAIAB0AGkAbQBlAG8AdQB0ACAAbABp
AG0AaQB0ACAAaABhAHMAIABiAGUAZQBuACAAZQB4AGMAZQBlAGQAZQBkAAATTgBhAG0AZQBTAHAA
YQBjAGUAABFDAG8AcAB5AEgAZQByAGUAAAtJAHQAZQBtAHMAAAEAMUUAcgByAG8AcgAgAGkAbgAg
AEcAZQB0AE4AZQB3AGUAcwBGAGkAbABlACAALQAgAAHRZDW/X5zjTZIGFn+j7kUsAAQgAQEIAyAA
AQUgAQEREQQgAQEOBCABAQIFIAIBDg4FIAEBEUUHIAQBDg4ODgYVEiQBEgwGFRIkARIIBhUSJAES
ZQYVEiQBEiAEIAATAAcAARJtEYClBSAAEoCpByACAQ4SgKkEAAEcHAQAAQEcHgcRDg4ODhGAlRGA
mQ4CEYCVCBwcHB0OCBGAlRKAnQUgABKAtQUgABKAuQYgARKAvRwDIAAcBAABDhwHIAQBCAgICAUA
ABGAlQUAARJtDgUAARwSbQYgARGAlQ0JAAIIEYCVEYCVBgACHQ4ODgYAARGAlQ4IIAERgJkRgJUJ
AAICEYCZEYCZBAABAQgQAAccHBJtDh0cHQ4dEm0dAhEACBwcEm0OHRwdDh0SbR0CAgYAAQESgJ0F
IAASgOUDIAAOBQACDg4OCCAFAggODg4IAwAAAQQgAQIcAyAACAQHAR4AAh4ABRABAB4ABAoBHgAE
BwETAAYVEiQBEwAHBhUScQETAAYVEnEBEwACEwAECgETAAUgAQETAAi3elxWGTTgiQiwP19/EdUK
OgiJhF3NgIDMkQQAAAAABAEAAAAHBhUSJAESDAcGFRIkARIIBwYVEiQBEmUHBhUSJAESIAMGEnkD
BhJ9AwYSGAIGHAIGCAMGESgEAAASDAQAABIIBAAAEmUEAAASIAQAABJ5BAAAEn0FAAEBEn0EAAAS
GAQgABJtBxABAR4AHgAHMAEBARAeAAQIABIMBAgAEggECAASZQQIABIgBAgAEnkECAASfQQIABIY
BCgAEwAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUX2Q1OWJkNzlkY2VhYjQzYjg4NTYzNzQzMjE3ZmVhYjZmAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMjMAAAUBAAEAACkBACRhZmNiYWU3Yi05NWJiLTQ1ODQtOWRlNC1mNDYxMGVjYjczYjAA
AAwBAAcxLjAuMC4wAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwgBAAEAAAAAABgBAApNeVRlbXBsYXRlCDEx
LjAuMC4wAABhAQA0U3lzdGVtLldlYi5TZXJ2aWNlcy5Qcm90b2NvbHMuU29hcEh0dHBDbGllbnRQ
cm90b2NvbBJDcmVhdGVfX0luc3RhbmNlX18TRGlzcG9zZV9fSW5zdGFuY2VfXwAAABABAAtNeS5D
b21wdXRlcgAAEwEADk15LkFwcGxpY2F0aW9uAAAMAQAHTXkuVXNlcgAAEwEADk15LldlYlNlcnZp
Y2VzAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAA2D0AAAAAAAAAAAAA8j0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AOQ9AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBkADUAOQBiAGQANwA5AGQAYwBlAGEAYgA0ADMAYgA4ADgANQA2ADMANwA0ADMAMgAxADcAZgBl
AGEAYgA2AGYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGQANQA5AGIAZAA3ADkAZABj
AGUAYQBiADQAMwBiADgAOAA1ADYAMwA3ADQAMwAyADEANwBmAGUAYQBiADYAZgAuAGQAbABsAAAA
SAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZAA1ADkAYgBk
ADcAOQBkAGMAZQBhAGIANAAzAGIAOAA4ADUANgAzADcANAAzADIAMQA3AGYAZQBhAGIANgBmAC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGQANQA5AGIAZAA3
ADkAZABjAGUAYQBiADQAMwBiADgAOAA1ADYAMwA3ADQAMwAyADEANwBmAGUAYQBiADYAZgAAADQA
CAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAABD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load data from Excel to Database"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8D5D572A-04C9-4FB0-9A75-1F6C3504BADD}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load data from Excel to Database">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\Load Address"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{71A4D590-9578-4602-9288-EA036A83324E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Address"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load data from Excel to Database\Load Address\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="r8"
                          cachedName="AddressID"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AddressLine1"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressLine2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AddressLine2"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[City]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="City"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[StateProvidence]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="StateProvidence"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[CountryRegion]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CountryRegion"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input].Columns[PostalCode]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="PostalCode"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]"
                          name="Copy of AddressLine1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]"
                          name="Copy of AddressLine2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]"
                          name="Copy of City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvidence]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvidence]"
                          name="Copy of StateProvidence"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]"
                          name="Copy of CountryRegion"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]"
                          name="Copy of PostalCode"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Address\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">new_customer_data$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Address\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine1]"
                          name="AddressLine1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[AddressLine2]"
                          name="AddressLine2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[StateProvidence]"
                          name="StateProvidence"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[CountryRegion]"
                          name="CountryRegion"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].Columns[PostalCode]"
                          name="PostalCode"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          dataType="r8"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          dataType="r8"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          name="StateProvidence" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine1]"
                          name="AddressLine1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressLine2]"
                          name="AddressLine2" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[City]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[StateProvidence]"
                          name="StateProvidence" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[CountryRegion]"
                          name="CountryRegion" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Error Output].Columns[PostalCode]"
                          name="PostalCode" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Address]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="i4"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressLine1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of AddressLine1"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine1]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine1]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressLine2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of AddressLine2"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine2]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressLine2]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of City"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of City]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of StateProvidence]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of StateProvidence"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of StateProvidence]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CountryRegion]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of CountryRegion"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CountryRegion]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of PostalCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of PostalCode"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostalCode]"
                          lineageId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PostalCode]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine1]"
                          codePage="1252"
                          dataType="str"
                          length="39"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine2]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="17"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StateProvince]"
                          codePage="1252"
                          dataType="str"
                          length="16"
                          name="StateProvince" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CountryRegion]"
                          codePage="1252"
                          dataType="str"
                          length="14"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostalCode]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="PostalCode" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load data from Excel to Database\Load Address.Paths[Data Conversion Output]"
                  endId="Package\Load data from Excel to Database\Load Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Load data from Excel to Database\Load Address\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load data from Excel to Database\Load Address.Paths[Excel Source Output]"
                  endId="Package\Load data from Excel to Database\Load Address\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load data from Excel to Database\Load Address\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\Load Customer"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{700b7762-4b03-429f-99f7-72e0409e684e}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Customer"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="r8"
                          cachedName="CustomerID"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[NameStyle]"
                          cachedDataType="r8"
                          cachedName="NameStyle"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[Title]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Title"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[FirstName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FirstName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[MiddleName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="MiddleName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[LastName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LastName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[Suffix]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Suffix"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[CompanyName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="CompanyName"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[SalesPerson]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SalesPerson"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[EmailAddress]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="EmailAddress"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input].Columns[Phone]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Phone"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          dataType="i1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]"
                          name="Copy of NameStyle"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]"
                          name="Copy of Title"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]"
                          name="Copy of FirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]"
                          name="Copy of MiddleName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]"
                          name="Copy of LastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]"
                          name="Copy of Suffix"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]"
                          name="Copy of CompanyName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]"
                          name="Copy of SalesPerson"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]"
                          name="Copy of EmailAddress"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]"
                          name="Copy of Phone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">new_customer_data$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="{75E8ABF6-46A0-41A0-9A4E-8E82FC26D65B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[NameStyle]"
                          name="NameStyle"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Title]"
                          name="Title"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[MiddleName]"
                          name="MiddleName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Suffix]"
                          name="Suffix"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[CompanyName]"
                          name="CompanyName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[SalesPerson]"
                          name="SalesPerson"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[EmailAddress]"
                          name="EmailAddress"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].Columns[Phone]"
                          name="Phone"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          dataType="r8"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          dataType="r8"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          name="StateProvidence" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          dataType="r8"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[NameStyle]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[NameStyle]"
                          name="NameStyle" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Title]"
                          name="Title" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[FirstName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[MiddleName]"
                          name="MiddleName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[LastName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Suffix]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Suffix]"
                          name="Suffix" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[CompanyName]"
                          name="CompanyName" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[SalesPerson]"
                          name="SalesPerson" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[EmailAddress]"
                          name="EmailAddress" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Phone]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[Phone]"
                          name="Phone" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Customer]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="i8"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of NameStyle]"
                          cachedDataType="i1"
                          cachedName="Copy of NameStyle"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NameStyle]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of NameStyle]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Title]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Title"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Title]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of FirstName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FirstName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of MiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of MiddleName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of MiddleName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of LastName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Suffix]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Suffix"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suffix]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Suffix]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CompanyName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of CompanyName"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CompanyName]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CompanyName]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of SalesPerson]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of SalesPerson"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesPerson]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of SalesPerson]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of EmailAddress]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of EmailAddress"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmailAddress]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of EmailAddress]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Phone"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Phone]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NameStyle]"
                          dataType="bool"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Suffix]"
                          codePage="1252"
                          dataType="str"
                          length="22"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CompanyName]"
                          codePage="1252"
                          dataType="str"
                          length="41"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesPerson]"
                          codePage="1252"
                          dataType="str"
                          length="24"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmailAddress]"
                          codePage="1252"
                          dataType="str"
                          length="43"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="19"
                          name="Phone" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load data from Excel to Database\Load Customer.Paths[Data Conversion Output]"
                  endId="Package\Load data from Excel to Database\Load Customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load data from Excel to Database\Load Customer.Paths[Excel Source Output]"
                  endId="Package\Load data from Excel to Database\Load Customer\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load data from Excel to Database\Load Customer\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Load data from Excel to Database\Load Customer Address"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{7CBD4389-3CE5-455B-8887-6478140EFEDE}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Load Customer Address"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerID]"
                          cachedDataType="r8"
                          cachedName="CustomerID"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressID]"
                          cachedDataType="r8"
                          cachedName="AddressID"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input].Columns[AddressType]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AddressType"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]"
                          name="Copy of CustomerID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]"
                          name="Copy of AddressID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]"
                          name="Copy of AddressType"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">new_customer_data$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 3]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 3]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[CustomerID]"
                          name="CustomerID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressID]"
                          name="AddressID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].Columns[AddressType]"
                          name="AddressType"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerID]"
                          dataType="r8"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[NameStyle]"
                          dataType="r8"
                          name="NameStyle" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Title]"
                          dataType="wstr"
                          length="255"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="255"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[MiddleName]"
                          dataType="wstr"
                          length="255"
                          name="MiddleName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="255"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Suffix]"
                          dataType="wstr"
                          length="255"
                          name="Suffix" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CompanyName]"
                          dataType="wstr"
                          length="255"
                          name="CompanyName" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesPerson]"
                          dataType="wstr"
                          length="255"
                          name="SalesPerson" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[EmailAddress]"
                          dataType="wstr"
                          length="255"
                          name="EmailAddress" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[Phone]"
                          dataType="wstr"
                          length="255"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressID]"
                          dataType="r8"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine1]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine1" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressLine2]"
                          dataType="wstr"
                          length="255"
                          name="AddressLine2" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[StateProvidence]"
                          dataType="wstr"
                          length="255"
                          name="StateProvidence" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[CountryRegion]"
                          dataType="wstr"
                          length="255"
                          name="CountryRegion" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[PostalCode]"
                          dataType="wstr"
                          length="255"
                          name="PostalCode" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output].ExternalColumns[AddressType]"
                          dataType="wstr"
                          length="255"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerID]"
                          name="CustomerID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          dataType="r8"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressID]"
                          name="AddressID" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressType]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Error Output].Columns[AddressType]"
                          name="AddressType" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[CustomerAddress]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{E659D7F0-FE57-4E0E-A571-A7EEC2093FE5}:external"
                      connectionManagerRefId="Project.ConnectionManagers[JET.SSIS]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of CustomerID]"
                          cachedDataType="i4"
                          cachedName="Copy of CustomerID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressID]"
                          cachedDataType="i4"
                          cachedName="Copy of AddressID"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressID]" />
                        <inputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of AddressType]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of AddressType"
                          externalMetadataColumnId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressType]"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AddressType]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                          dataType="i2"
                          name="CustomerID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressID]"
                          dataType="i2"
                          name="AddressID" />
                        <externalMetadataColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressType]"
                          codePage="1252"
                          dataType="str"
                          length="11"
                          name="AddressType" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Load data from Excel to Database\Load Customer Address.Paths[Data Conversion Output]"
                  endId="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Load data from Excel to Database\Load Customer Address.Paths[Excel Source Output]"
                  endId="Package\Load data from Excel to Database\Load Customer Address\Data Conversion.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Load data from Excel to Database\Load Customer Address\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CA92A6B5-93C1-4F4C-81CB-DFD36307274A}"
          DTS:From="Package\Load data from Excel to Database\Load Customer"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Load data from Excel to Database\Load Address" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{C859FBB9-746F-4E9C-B3CE-8852DD6F95FE}"
          DTS:From="Package\Load data from Excel to Database\Load Address"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Load data from Excel to Database\Load Customer Address" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ResetFile"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{7967D007-CF4A-41C6-AB68-B7D844111EE3}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ResetFile"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_68fa34fe89f04c25a59e11ff28f51a8a"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="VisualBasic"
          ReadWriteVariables="User::ClearReportsPath,User::ReportArchivePath,User::ReportPath">
          <ProjectItem
            Name="ScriptMain.vb"
            Encoding="UTF8"><![CDATA[#Region "Help:  Introduction to the script task"
'The Script Task allows you to perform virtually any operation that can be accomplished in
'a .Net application within the context of an Integration Services control flow. 

'Expand the other regions which have "Help" prefixes for examples of specific ways to use
'Integration Services features within this script task.
#End Region


#Region "Imports"
Imports System
Imports System.Data
Imports System.Math
Imports Microsoft.SqlServer.Dts.Runtime
Imports System.IO
#End Region

'ScriptMain is the entry point class of the script.  Do not change the name, attributes,
'or parent of this class.
<Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute()> _
<System.CLSCompliantAttribute(False)> _
Partial Public Class ScriptMain
    Inherits Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase

#Region "Help:  Using Integration Services variables and parameters in a script"
    'To use a variable in this script, first ensure that the variable has been added to 
    'either the list contained in the ReadOnlyVariables property or the list contained in 
    'the ReadWriteVariables property of this script task, according to whether or not your
    'code needs to write to the variable.  To add the variable, save this script, close this instance of
    'Visual Studio, and update the ReadOnlyVariables and 
    'ReadWriteVariables properties in the Script Transformation Editor window.
    'To use a parameter in this script, follow the same steps. Parameters are always read-only.

    'Example of reading from a variable:
    ' startTime = Dts.Variables("System::StartTime").Value

    'Example of writing to a variable:
    ' Dts.Variables("User::myStringVariable").Value = "new value"

    'Example of reading from a package parameter:
    ' batchId = Dts.Variables("$Package::batchId").Value

    'Example of reading from a project parameter:
    ' batchId = Dts.Variables("$Project::batchId").Value

    'Example of reading from a sensitive project parameter:
    ' batchId = Dts.Variables("$Project::batchId").GetSensitiveValue()
#End Region

#Region "Help:  Firing Integration Services events from a script"
    'This script task can fire events for logging purposes.

    'Example of firing an error event:
    ' Dts.Events.FireError(18, "Process Values", "Bad value", "", 0)

    'Example of firing an information event:
    ' Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, fireAgain)

    'Example of firing a warning event:
    ' Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0)
#End Region

#Region "Help:  Using Integration Services connection managers in a script"
    'Some types of connection managers can be used in this script task.  See the topic 
    '"Working with Connection Managers Programatically" for details.

    'Example of using an ADO.Net connection manager:
    ' Dim rawConnection As Object = Dts.Connections("Sales DB").AcquireConnection(Dts.Transaction)
    ' Dim myADONETConnection As SqlConnection = CType(rawConnection, SqlConnection)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Sales DB").ReleaseConnection(rawConnection)

    'Example of using a File connection manager
    ' Dim rawConnection As Object = Dts.Connections("Prices.zip").AcquireConnection(Dts.Transaction)
    ' Dim filePath As String = CType(rawConnection, String)
    ' <Use the connection in some code here, then release the connection>
    ' Dts.Connections("Prices.zip").ReleaseConnection(rawConnection)
#End Region

    'This method is called when this script task executes in the control flow.
    'Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
    'To open Help, press F1.

    Public Sub Main()
        '
        ' Add your code here
        '
        Dim reportPath As String = CType(Dts.Variables("ReportPath").Value, String)
        Dim reportArchivePath As String = CType(Dts.Variables("ReportArchivePath").Value, String)
        Dim clearReportsPath As String = CType(Dts.Variables("ClearReportsPath").Value, String)

        Dim fileName As String = "\RecentlyLoaded.xlsx"

        Try

            My.Computer.FileSystem.CopyFile(clearReportsPath & fileName, reportPath & fileName, True)

        Catch ex As System.IO.FileNotFoundException
            Dts.Events.FireError(-1, "", "File not found - " + ex.Message, "", 0)

        Catch ex As IOException
            Dts.Events.FireError(-1, "", "Attempting to copy archive file - " + ex.Message, "", 0)


        End Try
        Dts.TaskResult = ScriptResults.Success
    End Sub

#Region "ScriptResults declaration"
    'This enum provides a convenient shorthand within the scope of this class for setting the
    'result of the script.

    'This code was generated automatically.
    Enum ScriptResults
        Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success
        Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
    End Enum

#End Region

End Class]]></ProjectItem>
          <ProjectItem
            Name="ST_68fa34fe89f04c25a59e11ff28f51a8a.vbproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{F184B08F-C81C-45F6-A57F-5ABD9991F28F}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5E7A4D25-EC07-4364-BF71-7FF30F1AD0F9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>My Project</AppDesignerFolder>
    <RootNamespace>ST_68fa34fe89f04c25a59e11ff28f51a8a</RootNamespace>
    <AssemblyName>ST_68fa34fe89f04c25a59e11ff28f51a8a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>true</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineDebug>false</DefineDebug>
    <DefineTrace>true</DefineTrace>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <Import Include="Microsoft.VisualBasic" />
    <Import Include="System" />
    <Import Include="System.Collections" />
    <Import Include="System.Data" />
    <Import Include="System.Diagnostics" />
    <Import Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="My Project\" />
    <Compile Include="My Project\AssemblyInfo.vb">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="My Project\Resources.resx">
      <Generator>VbMyResourcesResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.vb</LastGenOutput>
      <CustomToolNamespace>My.Resources</CustomToolNamespace>
    </EmbeddedResource>
    <Compile Include="My Project\Resources.Designer.vb">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <None Include="My Project\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.vb</LastGenOutput>
    </None>
    <Compile Include="My Project\Settings.Designer.vb">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ScriptMain.vb">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a VB project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.VisualBasic.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="vb" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)" GeneratedClassNamespace="$safeprojectname" GeneratedClassName="MySettings">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="My Project\AssemblyInfo.vb"
            Encoding="UTF8"><![CDATA[Imports System
Imports System.Reflection
Imports System.Runtime.InteropServices

' General Information about an assembly is controlled through the following 
' set of attributes. Change these attribute values to modify the information
' associated with an assembly.

' Review the values of the assembly attributes

<Assembly: AssemblyTitle("ST_68fa34fe89f04c25a59e11ff28f51a8a")> 
<Assembly: AssemblyDescription("")> 
<Assembly: AssemblyCompany("")> 
<Assembly: AssemblyProduct("ST_68fa34fe89f04c25a59e11ff28f51a8a")> 
<Assembly: AssemblyCopyright("Copyright @  2023")> 
<Assembly: AssemblyTrademark("")> 
<Assembly: CLSCompliant(True)> 

<Assembly: ComVisible(False)> 

'The following GUID is for the ID of the typelib if this project is exposed to COM
<Assembly: Guid("57a60804-2194-4cc9-865a-eb3d352f58ff")> 

' Version information for an assembly consists of the following four values:
'
'      Major Version
'      Minor Version 
'      Build Number
'      Revision
'
' You can specify all the values or you can default the Build and Revision Numbers 
' by using the '*' as shown below:
' <Assembly: AssemblyVersion("1.0.*")>

<Assembly: AssemblyVersion("1.0.0.0")> 
<Assembly: AssemblyFileVersion("1.0.0.0")> ]]></ProjectItem>
          <ProjectItem
            Name="My Project\Settings.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Friend NotInheritable Class MySettings
    Inherits System.Configuration.ApplicationSettingsBase

    Private Shared m_Value As MySettings

    Private Shared m_SyncObject As Object = New Object

    <System.Diagnostics.DebuggerNonUserCode()> _
    Public Shared ReadOnly Property Value() As MySettings
        Get
            If (MySettings.m_Value Is Nothing) Then
                System.Threading.Monitor.Enter(MySettings.m_SyncObject)
                If (MySettings.m_Value Is Nothing) Then
                    Try
                        MySettings.m_Value = New MySettings
                    Finally
                        System.Threading.Monitor.Exit(MySettings.m_SyncObject)
                    End Try
                End If
            End If
            Return MySettings.m_Value
        End Get
    End Property
End Class]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_68fa34fe89f04c25a59e11ff28f51a8a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_68fa34fe89f04c25a59e11ff28f51a8a</msb:DisplayName>
    <msb:ProjectId>{3CF176D6-5805-4C0B-9010-7025531FC8E0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_68fa34fe89f04c25a59e11ff28f51a8a.vbproj" />
    <msb:File Include="My Project\AssemblyInfo.vb" />
    <msb:File Include="ScriptMain.vb" />
    <msb:File Include="My Project\Resources.resx" />
    <msb:File Include="My Project\Resources.Designer.vb" />
    <msb:File Include="My Project\Settings.settings" />
    <msb:File Include="My Project\Settings.Designer.vb" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="My Project\Resources.Designer.vb"
            Encoding="UTF8"><![CDATA['------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace My.Resources
    
    '''<summary>
    '''   A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    'This class was auto-generated by the Strongly Typed Resource Builder
    'class via a tool like ResGen or Visual Studio.NET.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    Class MyResources
        
        Private Shared _resMgr As System.Resources.ResourceManager
        
        Private Shared _resCulture As System.Globalization.CultureInfo
        
        Friend Sub New()
            MyBase.New
        End Sub
        
        '''<summary>
        '''   Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared ReadOnly Property ResourceManager() As System.Resources.ResourceManager
            Get
                If (_resMgr Is Nothing) Then
                    Dim temp As System.Resources.ResourceManager = New System.Resources.ResourceManager("My.Resources.MyResources", GetType(MyResources).Assembly)
                    _resMgr = temp
                End If
                Return _resMgr
            End Get
        End Property
        
        '''<summary>
        '''   Overrides the current thread's CurrentUICulture property for all
        '''   resource lookups using this strongly typed resource class.
        '''</summary>
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Shared Property Culture() As System.Globalization.CultureInfo
            Get
                Return _resCulture
            End Get
            Set
                _resCulture = value
            End Set
        End Property
    End Class
End Namespace]]></ProjectItem>
          <BinaryItem
            Name="ST_68fa34fe89f04c25a59e11ff28f51a8a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOSJ3WQAAAAAAAAAAOAAIiALAVAAABwAAAAIAAAAAAAAijsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADg7AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
OwAAAAAAAEgAAAACAAUAUCMAADAXAAABAAAAAAAAAIA6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBgAAAoqHgIoGQAACiqmcxoAAAqAAQAABHMbAAAKgAIA
AARzHAAACoADAAAEcx0AAAqABAAABCoufgEAAARvHgAACioufgIAAARvHwAACioufgMAAARvIAAA
CioufgQAAARvIQAACioeAigiAAAKKq5+BQAABC0ecgEAAHDQBQAAAigjAAAKbyQAAApzJQAACoAF
AAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqQnMiAAAKKCYAAAqACAAABCoeAignAAAKKgAAGzABAD8A
AAAAAAAAfgcAAAQtMn4IAAAEKCYAAAooKAAACn4HAAAELRxzDQAABoAHAAAE3hB+CAAABCgmAAAK
KCkAAArcfgcAAAQqAAEQAAACAB0ADCkAEAAAAAAeAigqAAAKKhswBgALAQAAAQAAEQIoKwAACm8s
AAAKcjMAAHBvLQAACm8uAAAKKC8AAAoKAigrAAAKbywAAApySQAAcG8tAAAKby4AAAooLwAACiYC
KCsAAApvLAAACnJtAABwby0AAApvLgAACigvAAAKC3KPAABwDCgEAAAGbzAAAAoHCCgxAAAKBggo
MQAAChdvMgAACt54JSgzAAAKDQIoKwAACm80AAAKFXK5AABwcrsAAHAJbzUAAAooMQAACnK5AABw
Fm82AAAKJig3AAAK3j0lKDMAAAoTBAIoKwAACm80AAAKFXK5AABwct8AAHARBG84AAAKKDEAAApy
uQAAcBZvNgAACiYoNwAACt4AAigrAAAKFm85AAAKKgABHAAAAABmACCGADslAAABAABmACDBAD0m
AAABNgIDKCYAAAooOgAACioeAig7AAAKKi7QCAAAAigjAAAKKh4CKDwAAAoqAAATMAEAFAAAAAIA
ABECjAUAABstCCgBAAArCisCAgoGKiID/hUFAAAbKgAAABMwAgAoAAAAAwAAEQJ7PgAACm8/AAAK
CgaMCAAAGy0SKAIAACsKAns+AAAKBm9AAAAKBipKAigiAAAKAnNBAAAKfT4AAAoqAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABwIAAAjfgAAiAgAANgJAAAjU3RyaW5ncwAAAABg
EgAAKAEAACNVUwCIEwAAEAAAACNHVUlEAAAAmBMAAJgDAAAjQmxvYgAAAAAAAAACAAABVx2iCQkP
AAAA+gEzABYAAAEAAAA2AAAACgAAAAwAAAAZAAAABAAAAEEAAAACAAAANwAAAAMAAAAEAAAACAAA
AAkAAAAIAAAAAQAAAAUAAAABAAAAAwAAAAMAAAACAAAAAABBBQEAAAAAAAYAgAMeCAYAJQQeCAYA
VwJfBw8A5QgAAAYAmAL2BQYAYwP2BQYADAT2BQYAoAP2BQYAuQP2BQYA3wL2BQYA1AN6BQYAhALY
BwYAAALYBwYAKwP2BQYA+gJ/BAoAIwKqBgoA6wErBQoAawIrBQ4AwwGuBw4AAwdyBwYAEwNfBw4A
rwL3Bw4AxwLHAAYAZQl6BQ4A2gauBw4ASAPHAAYAdgF6BQ4AAQDvBAoADgKGBQYAmgZfCAYAKgbh
BQoA0wHMBQYAOgJfBxIA6gPGBBIApwHGBAYAogR6BQYAFAY0AAYACAY0AAYAgQV6BQYAJgF6BQYA
vwn2BQYAIAkeCAYAVwduBBIAGQXGBBYA+AhTARYAHQFTAQ4AFAn3Bw4A8gZyBw4AyAk+CAYAmwR6
BQ4AsgD3BwYAIAZ6BRIAwgbGBAYAQAd6BQAAAAArAAAAAAABAAEAAAAAAL4FlAlNAAEAAQAAAAAA
AQeUCVEAAQACAAABEABsCZQJYQABAAMAAAAAAKEIcAhhAAUACAAAARAAAgmOAIEABwAMAAEAAACj
BY4AjQAJAA8ABQEAAKAHAABhAAkAEQAFAQAAEAAAAGEACQAYAAIBAAA/CQAAnQAKABoAMQBfBjIB
MQA2BjoBMQBKBkIBMQB4BkoBEQAMB1IBEQCbAVYBEQBDBFoBEQBfCV4BIQCKCfAABgaGAGEBVoAv
CWQBVoB7AWQBUCAAAAAABhhKBwYAAQBYIAAAAAAGGEoHBgABAGAgAAAAABEYUAfEAAEAiiAAAAAA
EwjlBmgBAQCWIAAAAAATCK4FbQEBAKIgAAAAABMI1gZyAQEAriAAAAAAEwiQB3cBAQC6IAAAAAAD
GEoHBgABAMIgAAAAABYIlgZ8AQEA7iAAAAAAFgiDAYEBAQD1IAAAAAAWCI8BhgEBAP0gAAAAABEY
UAfEAAIADiEAAAAABhhKBwYAAgAYIQAAAAAWCEsEjAECAHQhAAAAAAYYSgcGAAIAfCEAAAAABgCp
BQYAAgCwIgAAAADGAg0JyAACAL4iAAAAAMYCBQHNAAMAxiIAAAAAgwBzAZEBAwDSIgAAAADGApkE
twADANwiAAAAABEAcwCWAQMA/CIAAAAAAQBfAJ4BBAC6IAAAAAAGGEoHBgAFAAgjAAAAAAMI7ABK
AAUAPCMAAAAABhhKBwYABQAAAAEAaAQAAAEANAYAAAEA/AAAAAEA/AAJAEoHAQARAEoHBgAZAEoH
CgApAEoHEAAxAEoHEAA5AEoHEABBAEoHEABJAEoHEABRAEoHEABZAEoHFQBhAEoHFQBpAEoHEABx
AEoHEAB5AEoHEACBAEoHGgCRAEoHIACpAEoHBgCxAEoHBgC5AEoHBgDRAEoHJgDpAEoHEAAJAUoH
BgARAUoHBgCZAEoHBgChAEoHBgAMAEoHBgAUAEoHBgAcAEoHBgAkAEoHBgAMAOwASgAUAOwASgAc
AOwASgAkAOwASgDBAEoHBgDZADgBTwDZALsJVwDxAEoHXQBRAV8EZQABAUoHBgBZAd8GagBZAXYJ
agAZAUoHBgAZATcJewBhAfQIgQBpAWkFhwBxAUsEjgB5AZkEkgCBAXIFlwCRAVgJnQCJAUoBowCZ
ATAHqgBhAU0JsQApAREBtwCpARQHuwCZAR4HxAChAREBtwBhAXsJAQDBAA0JyADBAAUBzQDBAJkE
twCxAd0A2QA0AIoJ8AA8AEsESgA8AFUEBwE8AEoHBgAIACwAKAEIADAALQEpAKsAUAMuAAsAzgEu
ABMA1wEuABsA9gEuACMA/wEuACsAKAIuADMAKAIuADsA/wEuAEMALgIuAEsAKAIuAFMARQIuAFsA
KAIuAGMASwIuAGsAdQIuAHMAggJAAIsALQFAAIMAzAJDAHsA1QJDAIMAzAJJAKsAYQNjAHsA1QJj
AIMAzAJpAKsAdQOAAIsALQGDAJMALQGDAJsALQGDAHsA1QKJAKsAggOgAIsALQGpAIMA9gHAAIsA
LQHJAIMA9gHgAIsALQHjALsALQHjAFMAKALpALMALQEDAYMAzAIDAaMA7gIjAYMAzAIjAVsAKAIg
AoMAzAIgAosALQFAAoMAzAJAAosALQFgAoMAzAJgAosALQGAAoMAzAKAAosALQGgAosALQHAAosA
LQHgAosALQHgAoMAzAIAA4sALQEgA4sALQEgA4MAzAJvANEA5AAEAAEABQAFAAYABwAJAAgAAAAD
B6YBAADABasBAADaBrABAACiB7UBAACaBroBAACfAb8BAABoBMQBAADwAMkBAgAEAAMAAgAFAAUA
AgAGAAcAAgAHAAkAAgAJAAsAAgAKAA0AAQALAA0AAgAOAA8AAgAYABEALgA1ADwAQwDWAOkA+AD/
AASAAAABAAAAAAAAAAAAAAAAAI4AAAAEAAAAAAAAAAAAAAANAb4AAAAAAAQAAAAAAAAAAAAAAA0B
egUAAAAACgAAAAAAAAAAAAAAFgHHAAAAAAAQAAAAAAAAAAAAAAAfAacEAAAAABAAAAAAAAAAAAAA
AB8BPgAAAAAAAAAAAAEAAACtCAAACAAEAAkABAAKAAcAAAAQABIAXQAAABAAKwBdAAAAAAAtAF0A
ewDfAHsAAgEAAABDb250ZXh0VmFsdWVgMQBUaHJlYWRTYWZlT2JqZWN0UHJvdmlkZXJgMQA8TW9k
dWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFQARGlzcG9zZV9f
SW5zdGFuY2VfXwBDcmVhdGVfX0luc3RhbmNlX18AdmFsdWVfXwBTVF82OGZhMzRmZTg5ZjA0YzI1
YTU5ZTExZmYyOGY1MWE4YQBQcm9qZWN0RGF0YQBtc2NvcmxpYgBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMAQ3JlYXRlSW5zdGFuY2UAZ2V0X0dldEluc3RhbmNlAGluc3RhbmNlAEdldEhhc2hDb2RlAGdl
dF9NZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENv
cHlGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAR2V0VHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAF9yZXNDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBBcHBsaWNhdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAR3VpZEF0dHJpYnV0ZQBIZWxwS2V5d29yZEF0dHJpYnV0ZQBHZW5lcmF0ZWRDb2Rl
QXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAFN0YW5kYXJkTW9kdWxlQXR0cmlidXRlAEhpZGVNb2R1bGVOYW1lQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBE
ZWJ1Z2dlckhpZGRlbkF0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAE15R3Jv
dXBDb2xsZWN0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAQ0xTQ29tcGxpYW50QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAbV9WYWx1ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAEdldE9iamVjdFZh
bHVlAFN5c3RlbS5UaHJlYWRpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBN
YXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5UYXNrcy5TY3JpcHRUYXNrAE1pY3Jvc29mdC5WaXN1YWxCYXNpYy5NeVNlcnZpY2VzLkludGVy
bmFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF82OGZhMzRmZTg5
ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YS5kbGwAZ2V0X0l0ZW0AZ2V0X0ZpbGVTeXN0ZW0ARW51bQBT
eXN0ZW0uQ29tcG9uZW50TW9kZWwuRGVzaWduAFNjcmlwdE1haW4AZ2V0X0FwcGxpY2F0aW9uAE15
QXBwbGljYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24ASU9FeGNlcHRpb24ARmlsZU5vdEZvdW5kRXhjZXB0aW9uAEN1bHR1cmVJ
bmZvAG1fQXBwT2JqZWN0UHJvdmlkZXIAbV9Vc2VyT2JqZWN0UHJvdmlkZXIAbV9Db21wdXRlck9i
amVjdFByb3ZpZGVyAG1fTXlXZWJTZXJ2aWNlc09iamVjdFByb3ZpZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAU3lzdGVtLkNvZGVEb20uQ29tcGlsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfVXNl
cgBFbnRlcgBnZXRfQ29tcHV0ZXIAU2VydmVyQ29tcHV0ZXIATXlDb21wdXRlcgBfcmVzTWdyAEZp
cmVFcnJvcgBDbGVhclByb2plY3RFcnJvcgBTZXRQcm9qZWN0RXJyb3IAQWN0aXZhdG9yAC5jdG9y
AC5jY3RvcgBNb25pdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMu
RGV2aWNlcwBnZXRfV2ViU2VydmljZXMATXlXZWJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFz
aWMuQXBwbGljYXRpb25TZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMATWlj
cm9zb2Z0LlZpc3VhbEJhc2ljLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBNaWNyb3NvZnQuVmlzdWFsQmFzaWMuTXlTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUXzY4ZmEzNGZlODlmMDRjMjVhNTllMTFmZjI4ZjUxYThhLk15LlJlc291cmNlcwBNeVJl
c291cmNlcwBTVF82OGZhMzRmZTg5ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YS5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAGdldF9WYXJpYWJsZXMATXlTZXR0aW5ncwBFcXVhbHMAQ29u
dmVyc2lvbnMAUnVudGltZUhlbHBlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0
X0V2ZW50cwBDb25jYXQAbV9TeW5jT2JqZWN0AE15UHJvamVjdABFeGl0AHNldF9UYXNrUmVzdWx0
AG1fQ29udGV4dABTVF82OGZhMzRmZTg5ZjA0YzI1YTU5ZTExZmYyOGY1MWE4YS5NeQBnZXRfQXNz
ZW1ibHkARmlsZVN5c3RlbVByb3h5AAAxTQB5AC4AUgBlAHMAbwB1AHIAYwBlAHMALgBNAHkAUgBl
AHMAbwB1AHIAYwBlAHMAABVSAGUAcABvAHIAdABQAGEAdABoAAAjUgBlAHAAbwByAHQAQQByAGMA
aABpAHYAZQBQAGEAdABoAAAhQwBsAGUAYQByAFIAZQBwAG8AcgB0AHMAUABhAHQAaAAAKVwAUgBl
AGMAZQBuAHQAbAB5AEwAbwBhAGQAZQBkAC4AeABsAHMAeAAAAQAjRgBpAGwAZQAgAG4AbwB0ACAA
ZgBvAHUAbgBkACAALQAgAAFFQQB0AHQAZQBtAHAAdABpAG4AZwAgAHQAbwAgAGMAbwBwAHkAIABh
AHIAYwBoAGkAdgBlACAAZgBpAGwAZQAgAC0AIAABAAAAH0ws72X/IEijx0s+A9G7lQAEIAEBCAMg
AAEFIAEBEREEIAEBDgQgAQECBSACAQ4OBSABARFFByAEAQ4ODg4GFRIkARIMBhUSJAESCAYVEiQB
EmUGFRIkARIgBCAAEwAHAAESbRGAoQUgABKApQcgAgEOEoClBAABHBwEAAEBHAsHBQ4ODhKAlRKA
mQUgABKAsQUgABKAtQYgARKAuRwDIAAcBAABDhwFIAASgMUFAAIODg4GIAMBDg4CBgABARKA0QUg
ABKA1QMgAA4IIAUCCA4ODggDAAABBCABAhwDIAAIBAcBHgACHgAFEAEAHgAECgEeAAQHARMABhUS
JAETAAcGFRJxARMABhUScQETAAITAAQKARMABSABARMACLd6XFYZNOCJCLA/X38R1Qo6CImEXc2A
gMyRBAAAAAAEAQAAAAcGFRIkARIMBwYVEiQBEggHBhUSJAESZQcGFRIkARIgAwYSeQMGEn0DBhIY
AgYcAgYIAwYRKAQAABIMBAAAEggEAAASZQQAABIgBAAAEnkEAAASfQUAAQESfQQAABIYBCAAEm0H
EAEBHgAeAAcwAQEBEB4ABAgAEgwECAASCAQIABJlBAgAEiAECAASeQQIABJ9BAgAEhgEKAATAAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNjhm
YTM0ZmU4OWYwNGMyNWE1OWUxMWZmMjhmNTFhOGEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAy
MwAABQEAAQAAKQEAJDU3YTYwODA0LTIxOTQtNGNjOS04NjVhLWViM2QzNTJmNThmZgAADAEABzEu
MC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43CAEAAQAAAAAAGAEACk15VGVtcGxhdGUIMTEuMC4wLjAA
AGEBADRTeXN0ZW0uV2ViLlNlcnZpY2VzLlByb3RvY29scy5Tb2FwSHR0cENsaWVudFByb3RvY29s
EkNyZWF0ZV9fSW5zdGFuY2VfXxNEaXNwb3NlX19JbnN0YW5jZV9fAAAAEAEAC015LkNvbXB1dGVy
AAATAQAOTXkuQXBwbGljYXRpb24AAAwBAAdNeS5Vc2VyAAATAQAOTXkuV2ViU2VydmljZXMAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAGA7AAAAAAAAAAAAAHo7AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsOwAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADYAOABmAGEAMwA0AGYAZQA4ADkAZgAwADQAYwAyADUAYQA1ADkAZQAxADEAZgBmADIAOABm
ADUAMQBhADgAYQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANgA4AGYAYQAzADQAZgBl
ADgAOQBmADAANABjADIANQBhADUAOQBlADEAMQBmAGYAMgA4AGYANQAxAGEAOABhAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA2ADgAZgBh
ADMANABmAGUAOAA5AGYAMAA0AGMAMgA1AGEANQA5AGUAMQAxAGYAZgAyADgAZgA1ADEAYQA4AGEA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANgA4AGYAYQAz
ADQAZgBlADgAOQBmADAANABjADIANQBhADUAOQBlADEAMQBmAGYAMgA4AGYANQAxAGEAOABhAAAA
NAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAAB
AEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACMOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5A3EE50C-84D4-41F9-95FF-713887F5DD9D}"
      DTS:From="Package\extractNewFile"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\copyFIleToNewPath" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D4455320-5C3A-4E3D-B190-9445718AADFE}"
      DTS:From="Package\copyFIleToNewPath"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load data from Excel to Database" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{5227E7F5-608A-420A-9A30-746DC8515235}"
      DTS:From="Package\Load data from Excel to Database"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Export Data to Excel File" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{5F8312F6-3C38-4E96-AE82-77F4869BE50D}"
      DTS:From="Package\Export Data to Excel File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\ArchiveFile" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{7E6B127A-55B4-44B7-8C7B-3B88032E73DC}"
      DTS:From="Package\ArchiveFile"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\ResetFile" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="134,42"
          Id="Package\ArchiveFile"
          TopLeft="937,414" />
        <NodeLayout
          Size="178,42"
          Id="Package\copyFIleToNewPath"
          TopLeft="20,95" />
        <NodeLayout
          Size="147,42"
          Id="Package\Export Data to Excel File\Load Address"
          TopLeft="116,101" />
        <NodeLayout
          Size="194,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress"
          TopLeft="154,176" />
        <NodeLayout
          Size="160,42"
          Id="Package\Export Data to Excel File\Load Customers"
          TopLeft="40,31" />
        <EdgeLayout
          Id="Package\Export Data to Excel File.PrecedenceConstraints[Constraint]"
          TopLeft="120,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73.5,28"
              Start="0,0"
              End="73.5,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="4,14" />
                  <mssgle:LineSegment
                    End="69.5,14" />
                  <mssgle:CubicBezierSegment
                    Point1="69.5,14"
                    Point2="73.5,14"
                    Point3="73.5,18" />
                  <mssgle:LineSegment
                    End="73.5,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Data to Excel File.PrecedenceConstraints[Constraint 1]"
          TopLeft="189.5,143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.5,33"
              Start="0,0"
              End="61.5,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="4,16.5" />
                  <mssgle:LineSegment
                    End="57.5,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="57.5,16.5"
                    Point2="61.5,16.5"
                    Point3="61.5,20.5" />
                  <mssgle:LineSegment
                    End="61.5,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="353,299"
          Size="353,342"
          Id="Package\Export Data to Excel File"
          TopLeft="545,194" />
        <NodeLayout
          Size="152,42"
          Id="Package\extractNewFile"
          TopLeft="14,19" />
        <NodeLayout
          Size="147,42"
          Id="Package\Load data from Excel to Database\Load Address"
          TopLeft="128,90" />
        <NodeLayout
          Size="154,42"
          Id="Package\Load data from Excel to Database\Load Customer"
          TopLeft="14,18" />
        <NodeLayout
          Size="197,42"
          Id="Package\Load data from Excel to Database\Load Customer Address"
          TopLeft="212,165" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint]"
          TopLeft="91,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110.5,30"
              Start="0,0"
              End="110.5,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11"
                    Point2="0,15"
                    Point3="4,15" />
                  <mssgle:LineSegment
                    End="106.5,15" />
                  <mssgle:CubicBezierSegment
                    Point1="106.5,15"
                    Point2="110.5,15"
                    Point3="110.5,19" />
                  <mssgle:LineSegment
                    End="110.5,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database.PrecedenceConstraints[Constraint 1]"
          TopLeft="201.5,132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="109,33"
              Start="0,0"
              End="109,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="4,16.5" />
                  <mssgle:LineSegment
                    End="105,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="105,16.5"
                    Point2="109,16.5"
                    Point3="109,20.5" />
                  <mssgle:LineSegment
                    End="109,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="440,262"
          Size="440,305"
          Id="Package\Load data from Excel to Database"
          TopLeft="77,155" />
        <NodeLayout
          Size="126,42"
          Id="Package\ResetFile"
          TopLeft="1013,502" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="90,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19,34"
              Start="0,0"
              End="19,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13"
                    Point2="0,17"
                    Point3="4,17" />
                  <mssgle:LineSegment
                    End="15,17" />
                  <mssgle:CubicBezierSegment
                    Point1="15,17"
                    Point2="19,17"
                    Point3="19,21" />
                  <mssgle:LineSegment
                    End="19,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="198,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99,39"
              Start="0,0"
              End="99,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="95,0" />
                  <mssgle:CubicBezierSegment
                    Point1="95,0"
                    Point2="99,0"
                    Point3="99,4" />
                  <mssgle:LineSegment
                    End="99,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="517,307.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,57.5"
              Start="0,0"
              End="20.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="10,0" />
                  <mssgle:CubicBezierSegment
                    Point1="10,0"
                    Point2="14,0"
                    Point3="14,4" />
                  <mssgle:LineSegment
                    End="14,53.5" />
                  <mssgle:CubicBezierSegment
                    Point1="14,53.5"
                    Point2="14,57.5"
                    Point3="18,57.5" />
                  <mssgle:LineSegment
                    End="20.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="898,365">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39,70"
              Start="0,0"
              End="31.5,70">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,0"
                    Point2="19.5,0"
                    Point3="19.5,4" />
                  <mssgle:LineSegment
                    End="19.5,66" />
                  <mssgle:CubicBezierSegment
                    Point1="19.5,66"
                    Point2="19.5,70"
                    Point3="23.5,70" />
                  <mssgle:LineSegment
                    End="31.5,70" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1004,456">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72,46"
              Start="0,0"
              End="72,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="4,23" />
                  <mssgle:LineSegment
                    End="68,23" />
                  <mssgle:CubicBezierSegment
                    Point1="68,23"
                    Point2="72,23"
                    Point3="72,27" />
                  <mssgle:LineSegment
                    End="72,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Export Data to Excel File\Load Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="157,42"
          Id="Package\Export Data to Excel File\Load Address\OLE DB Source"
          TopLeft="106,56" />
        <NodeLayout
          Size="161,42"
          Id="Package\Export Data to Excel File\Load Address\Data Conversion"
          TopLeft="228,155" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Address.Paths[OLE DB Source Output]"
          TopLeft="184.5,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124,57"
              Start="0,0"
              End="124,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.5"
                    Point2="0,28.5"
                    Point3="4,28.5" />
                  <mssgle:LineSegment
                    End="120,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="120,28.5"
                    Point2="124,28.5"
                    Point3="124,32.5" />
                  <mssgle:LineSegment
                    End="124,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164,42"
          Id="Package\Export Data to Excel File\Load Address\Excel Destination"
          TopLeft="372,256" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Address.Paths[Data Conversion Output]"
          TopLeft="308.5,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.5,59"
              Start="0,0"
              End="145.5,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="141.5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="141.5,29.5"
                    Point2="145.5,29.5"
                    Point3="145.5,33.5" />
                  <mssgle:LineSegment
                    End="145.5,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Address\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Address\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Data to Excel File\Load CustomerAddress">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="157,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source"
          TopLeft="100,63" />
        <NodeLayout
          Size="161,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress\Data Conversion"
          TopLeft="256,194" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load CustomerAddress.Paths[OLE DB Source Output]"
          TopLeft="178.5,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158,89"
              Start="0,0"
              End="158,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.5"
                    Point2="0,44.5"
                    Point3="4,44.5" />
                  <mssgle:LineSegment
                    End="154,44.5" />
                  <mssgle:CubicBezierSegment
                    Point1="154,44.5"
                    Point2="158,44.5"
                    Point3="158,48.5" />
                  <mssgle:LineSegment
                    End="158,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164,42"
          Id="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination"
          TopLeft="395,314" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load CustomerAddress.Paths[Data Conversion Output]"
          TopLeft="336.5,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="140.5,78"
              Start="0,0"
              End="140.5,70.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35"
                    Point2="0,39"
                    Point3="4,39" />
                  <mssgle:LineSegment
                    End="136.5,39" />
                  <mssgle:CubicBezierSegment
                    Point1="136.5,39"
                    Point2="140.5,39"
                    Point3="140.5,43" />
                  <mssgle:LineSegment
                    End="140.5,70.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load CustomerAddress\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load CustomerAddress\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Data to Excel File\Load Customers">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="157,42"
          Id="Package\Export Data to Excel File\Load Customers\OLE DB Source"
          TopLeft="62,41" />
        <NodeLayout
          Size="164,42"
          Id="Package\Export Data to Excel File\Load Customers\Excel Destination"
          TopLeft="296,242" />
        <NodeLayout
          Size="161,42"
          Id="Package\Export Data to Excel File\Load Customers\Data Conversion"
          TopLeft="76,199" />
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Customers.Paths[OLE DB Source Output]"
          TopLeft="140.5,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16,116"
              Start="0,0"
              End="16,108.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54"
                    Point2="0,58"
                    Point3="4,58" />
                  <mssgle:LineSegment
                    End="12,58" />
                  <mssgle:CubicBezierSegment
                    Point1="12,58"
                    Point2="16,58"
                    Point3="16,62" />
                  <mssgle:LineSegment
                    End="16,108.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Data to Excel File\Load Customers.Paths[Data Conversion Output]"
          TopLeft="237,220">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59,43"
              Start="0,0"
              End="51.5,43">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="25.5,0"
                    Point2="29.5,0"
                    Point3="29.5,4" />
                  <mssgle:LineSegment
                    End="29.5,39" />
                  <mssgle:CubicBezierSegment
                    Point1="29.5,39"
                    Point2="29.5,43"
                    Point3="33.5,43" />
                  <mssgle:LineSegment
                    End="51.5,43" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Customers\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export Data to Excel File\Load Customers\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load data from Excel to Database\Load Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="161,42"
          Id="Package\Load data from Excel to Database\Load Address\Data Conversion"
          TopLeft="140,172" />
        <NodeLayout
          Size="144,42"
          Id="Package\Load data from Excel to Database\Load Address\Excel Source"
          TopLeft="114,55" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Address.Paths[Excel Source Output]"
          TopLeft="186,97">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.5,75"
              Start="0,0"
              End="34.5,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.5"
                    Point2="0,37.5"
                    Point3="4,37.5" />
                  <mssgle:LineSegment
                    End="30.5,37.5" />
                  <mssgle:CubicBezierSegment
                    Point1="30.5,37.5"
                    Point2="34.5,37.5"
                    Point3="34.5,41.5" />
                  <mssgle:LineSegment
                    End="34.5,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="177,42"
          Id="Package\Load data from Excel to Database\Load Address\OLE DB Destination"
          TopLeft="238,264" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Address.Paths[Data Conversion Output]"
          TopLeft="220.5,214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106,50"
              Start="0,0"
              End="106,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="4,25" />
                  <mssgle:LineSegment
                    End="102,25" />
                  <mssgle:CubicBezierSegment
                    Point1="102,25"
                    Point2="106,25"
                    Point3="106,29" />
                  <mssgle:LineSegment
                    End="106,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Address\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Address\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load data from Excel to Database\Load Customer">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="144,42"
          Id="Package\Load data from Excel to Database\Load Customer\Excel Source"
          TopLeft="51,120" />
        <NodeLayout
          Size="161,42"
          Id="Package\Load data from Excel to Database\Load Customer\Data Conversion"
          TopLeft="135,250" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load data from Excel to Database\Load Customer\OLE DB Destination"
          TopLeft="294,338" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer.Paths[Excel Source Output]"
          TopLeft="123,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92.5,88"
              Start="0,0"
              End="92.5,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40"
                    Point2="0,44"
                    Point3="4,44" />
                  <mssgle:LineSegment
                    End="88.5,44" />
                  <mssgle:CubicBezierSegment
                    Point1="88.5,44"
                    Point2="92.5,44"
                    Point3="92.5,48" />
                  <mssgle:LineSegment
                    End="92.5,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer.Paths[Data Conversion Output]"
          TopLeft="215.5,292">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="167,46"
              Start="0,0"
              End="167,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19"
                    Point2="0,23"
                    Point3="4,23" />
                  <mssgle:LineSegment
                    End="163,23" />
                  <mssgle:CubicBezierSegment
                    Point1="163,23"
                    Point2="167,23"
                    Point3="167,27" />
                  <mssgle:LineSegment
                    End="167,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load data from Excel to Database\Load Customer Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="144,42"
          Id="Package\Load data from Excel to Database\Load Customer Address\Excel Source"
          TopLeft="77,81" />
        <NodeLayout
          Size="161,42"
          Id="Package\Load data from Excel to Database\Load Customer Address\Data Conversion"
          TopLeft="176,183" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer Address.Paths[Excel Source Output]"
          TopLeft="149,123">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.5,60"
              Start="0,0"
              End="107.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="103.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="103.5,30"
                    Point2="107.5,30"
                    Point3="107.5,34" />
                  <mssgle:LineSegment
                    End="107.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="177,42"
          Id="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination"
          TopLeft="278,270" />
        <EdgeLayout
          Id="Package\Load data from Excel to Database\Load Customer Address.Paths[Data Conversion Output]"
          TopLeft="256.5,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110,45"
              Start="0,0"
              End="110,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="106,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="106,22.5"
                    Point2="110,22.5"
                    Point3="110,26.5" />
                  <mssgle:LineSegment
                    End="110,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer Address\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load data from Excel to Database\Load Customer Address\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>